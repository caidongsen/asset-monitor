// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package supplychain is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Request
	RequestUserCreate
	RequestUserPaid
	RequestChangePubkey
	RequestChangeCredit
	RequestCreateLoan
	RequestApplyCredit
	RequestApplyGuarantee
	RequestCreditFeedback
	RequestGuaranteeFeedback
	RequestEditCredit
	RequestIssueLoan
	RequestCancelLoan
	RequestPrepareBuy
	RequestPay
	RequestConfirmReceive
	RequestRepayAdvance
	RequestRepay
	RequestConfirmRepay
	RequestCreateAdmin
	RequestSetGuarantee
	RequestIncreaseBankRmb
	RequestDeposit
	RequestWithdraw
	Response
	ResponseException
	ResponseOK
	Receipt
	ResponseUserCreate
	ResponseUserPaid
	ResponseChangePubkey
	ResponseChangeCredit
	ResponseCreateLoan
	ResponseApplyCredit
	ResponseApplyGuarantee
	ResponseCreditFeedback
	ResponseGuaranteeFeedback
	ResponseEditCredit
	ResponseIssueLoan
	ResponseCancelLoan
	ResponsePrepareBuy
	ResponsePay
	ResponseConfirmReceive
	ResponseRepayAdvance
	ResponseRepay
	ResponseConfirmRepay
	ResponseCreateAdmin
	ResponseSetGuarantee
	ResponseIncreaseBankRmb
	ResponseDeposit
	ResponseWithdraw
	Admin
	Admins
	User
	Loan
	Bank
	Event
	EventUserCreate
	EventUserPaid
	EventChangePubkey
	EventChangeCredit
	EventCreateLoan
	EventApplyCredit
	EventApplyGuarantee
	EventGuaranteeFeedback
	EventCreditFeedback
	EventEditCredit
	EventIssueLoan
	EventCancelLoan
	EventPay
	EventConfirmReceive
	EventRepayAdvance
	EventRepay
	EventConfirmRepay
	EventCreateAdmin
	EventSetGuarantee
	EventIncreaseBankRmb
	EventDeposit
	EventWithdraw
*/
package supplychain

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_MsgError    MessageType = 0
	MessageType_MsgInit     MessageType = 1
	MessageType_MsgShutDown MessageType = 2
	MessageType_MsgClose    MessageType = 3
	// 创建用户
	MessageType_MsgUserCreate MessageType = 4
	// 确认客户缴费
	MessageType_MsgUserPaid MessageType = 5
	// 更改用户公钥
	MessageType_MsgChangePubkey MessageType = 6
	// 调整用户授信额度
	MessageType_MsgChangeCredit MessageType = 7
	// 添加预付款待融资
	MessageType_MsgCreateLoan MessageType = 8
	// 申请授信融资
	MessageType_MsgApplyCredit MessageType = 9
	// 申请担保
	MessageType_MsgApplyGuarantee MessageType = 10
	// 核心企业同意或拒绝担保
	MessageType_MsgGuaranteeFeedback MessageType = 11
	// 平台同意或拒绝授信融资
	MessageType_MsgCreditFeedback MessageType = 12
	// 修改授信融资申请
	MessageType_MsgEditCredit MessageType = 13
	// 挂牌
	MessageType_MsgIssueLoan MessageType = 14
	// 撤销借款
	MessageType_MsgCancelLoan MessageType = 15
	// 资金方发布购买意向
	MessageType_MsgPrepareBuy MessageType = 16
	// 资金方放款
	MessageType_MsgPay MessageType = 17
	// 融资方确认收款
	MessageType_MsgConfirmReceive MessageType = 18
	// 提前还款
	MessageType_MsgRepayAdvance MessageType = 19
	// 还款
	MessageType_MsgRepay MessageType = 20
	// 确认还款
	MessageType_MsgConfirmRepay MessageType = 21
	// 创建平台管理员账户
	MessageType_MsgCreateAdmin MessageType = 22
	// 平台授予核心企业担保额度
	MessageType_MsgSetGuarantee MessageType = 23
	// 增加银行资金
	MessageType_MsgIncreaseBankRmb MessageType = 24
	// 存款
	MessageType_MsgDeposit MessageType = 25
	// 取款
	MessageType_MsgWithdraw MessageType = 26
	MessageType_MsgCount    MessageType = 27
)

var MessageType_name = map[int32]string{
	0:  "MsgError",
	1:  "MsgInit",
	2:  "MsgShutDown",
	3:  "MsgClose",
	4:  "MsgUserCreate",
	5:  "MsgUserPaid",
	6:  "MsgChangePubkey",
	7:  "MsgChangeCredit",
	8:  "MsgCreateLoan",
	9:  "MsgApplyCredit",
	10: "MsgApplyGuarantee",
	11: "MsgGuaranteeFeedback",
	12: "MsgCreditFeedback",
	13: "MsgEditCredit",
	14: "MsgIssueLoan",
	15: "MsgCancelLoan",
	16: "MsgPrepareBuy",
	17: "MsgPay",
	18: "MsgConfirmReceive",
	19: "MsgRepayAdvance",
	20: "MsgRepay",
	21: "MsgConfirmRepay",
	22: "MsgCreateAdmin",
	23: "MsgSetGuarantee",
	24: "MsgIncreaseBankRmb",
	25: "MsgDeposit",
	26: "MsgWithdraw",
	27: "MsgCount",
}
var MessageType_value = map[string]int32{
	"MsgError":             0,
	"MsgInit":              1,
	"MsgShutDown":          2,
	"MsgClose":             3,
	"MsgUserCreate":        4,
	"MsgUserPaid":          5,
	"MsgChangePubkey":      6,
	"MsgChangeCredit":      7,
	"MsgCreateLoan":        8,
	"MsgApplyCredit":       9,
	"MsgApplyGuarantee":    10,
	"MsgGuaranteeFeedback": 11,
	"MsgCreditFeedback":    12,
	"MsgEditCredit":        13,
	"MsgIssueLoan":         14,
	"MsgCancelLoan":        15,
	"MsgPrepareBuy":        16,
	"MsgPay":               17,
	"MsgConfirmReceive":    18,
	"MsgRepayAdvance":      19,
	"MsgRepay":             20,
	"MsgConfirmRepay":      21,
	"MsgCreateAdmin":       22,
	"MsgSetGuarantee":      23,
	"MsgIncreaseBankRmb":   24,
	"MsgDeposit":           25,
	"MsgWithdraw":          26,
	"MsgCount":             27,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UserType int32

const (
	UserType_U_UNK      UserType = 0
	UserType_U_BORROWER UserType = 1
	UserType_U_FUNDING  UserType = 2
	UserType_U_CORE     UserType = 3
)

var UserType_name = map[int32]string{
	0: "U_UNK",
	1: "U_BORROWER",
	2: "U_FUNDING",
	3: "U_CORE",
}
var UserType_value = map[string]int32{
	"U_UNK":      0,
	"U_BORROWER": 1,
	"U_FUNDING":  2,
	"U_CORE":     3,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}
func (UserType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AccountState int32

const (
	AccountState_ACC_UNK     AccountState = 0
	AccountState_ACC_CREATED AccountState = 1
	AccountState_ACC_PAID    AccountState = 2
)

var AccountState_name = map[int32]string{
	0: "ACC_UNK",
	1: "ACC_CREATED",
	2: "ACC_PAID",
}
var AccountState_value = map[string]int32{
	"ACC_UNK":     0,
	"ACC_CREATED": 1,
	"ACC_PAID":    2,
}

func (x AccountState) String() string {
	return proto.EnumName(AccountState_name, int32(x))
}
func (AccountState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type LoanState int32

const (
	LoanState_L_UNK             LoanState = 0
	LoanState_L_CREATED         LoanState = 1
	LoanState_L_APPLY_CREDIT    LoanState = 2
	LoanState_L_APPLY_GUARANTEE LoanState = 3
	LoanState_L_GUARANTEE_AGREE LoanState = 4
	LoanState_L_ADMIN_AGREE     LoanState = 5
	LoanState_L_EDIT            LoanState = 6
	LoanState_L_ISSUE           LoanState = 7
	LoanState_L_CANCELED        LoanState = 8
	LoanState_L_PAYED           LoanState = 9
	LoanState_L_CONFIRM_RECEIVE LoanState = 10
	LoanState_L_REPAY_ADVANCE   LoanState = 11
	LoanState_L_REPAY           LoanState = 12
	LoanState_L_CONFIRM_REPAY   LoanState = 13
)

var LoanState_name = map[int32]string{
	0:  "L_UNK",
	1:  "L_CREATED",
	2:  "L_APPLY_CREDIT",
	3:  "L_APPLY_GUARANTEE",
	4:  "L_GUARANTEE_AGREE",
	5:  "L_ADMIN_AGREE",
	6:  "L_EDIT",
	7:  "L_ISSUE",
	8:  "L_CANCELED",
	9:  "L_PAYED",
	10: "L_CONFIRM_RECEIVE",
	11: "L_REPAY_ADVANCE",
	12: "L_REPAY",
	13: "L_CONFIRM_REPAY",
}
var LoanState_value = map[string]int32{
	"L_UNK":             0,
	"L_CREATED":         1,
	"L_APPLY_CREDIT":    2,
	"L_APPLY_GUARANTEE": 3,
	"L_GUARANTEE_AGREE": 4,
	"L_ADMIN_AGREE":     5,
	"L_EDIT":            6,
	"L_ISSUE":           7,
	"L_CANCELED":        8,
	"L_PAYED":           9,
	"L_CONFIRM_RECEIVE": 10,
	"L_REPAY_ADVANCE":   11,
	"L_REPAY":           12,
	"L_CONFIRM_REPAY":   13,
}

func (x LoanState) String() string {
	return proto.EnumName(LoanState_name, int32(x))
}
func (LoanState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type LoanType int32

const (
	LoanType_LT_UNK       LoanType = 0
	LoanType_LT_GUARANTEE LoanType = 1
	LoanType_LT_CREDIT    LoanType = 2
)

var LoanType_name = map[int32]string{
	0: "LT_UNK",
	1: "LT_GUARANTEE",
	2: "LT_CREDIT",
}
var LoanType_value = map[string]int32{
	"LT_UNK":       0,
	"LT_GUARANTEE": 1,
	"LT_CREDIT":    2,
}

func (x LoanType) String() string {
	return proto.EnumName(LoanType_name, int32(x))
}
func (LoanType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type AdminType int32

const (
	AdminType_A_UNK    AdminType = 0
	AdminType_A_NORMAL AdminType = 1
)

var AdminType_name = map[int32]string{
	0: "A_UNK",
	1: "A_NORMAL",
}
var AdminType_value = map[string]int32{
	"A_UNK":    0,
	"A_NORMAL": 1,
}

func (x AdminType) String() string {
	return proto.EnumName(AdminType_name, int32(x))
}
func (AdminType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Request struct {
	// Types that are valid to be assigned to Value:
	//	*Request_UserCreate
	//	*Request_UserPaid
	//	*Request_ChangePubkey
	//	*Request_ChangeCredit
	//	*Request_CreateLoan
	//	*Request_ApplyCredit
	//	*Request_ApplyGuarantee
	//	*Request_GuaranteeFeedback
	//	*Request_CreditFeedback
	//	*Request_EditCredit
	//	*Request_IssueLoan
	//	*Request_CancelLoan
	//	*Request_PrepareBuy
	//	*Request_Pay
	//	*Request_ConfirmReceive
	//	*Request_RepayAdvance
	//	*Request_Repay
	//	*Request_ConfirmRepay
	//	*Request_CreateAdmin
	//	*Request_SetGuarantee
	//	*Request_IncreaseBankRmb
	//	*Request_Deposit
	//	*Request_Withdraw
	Value         isRequest_Value `protobuf_oneof:"value"`
	Uid           string          `protobuf:"bytes,24,opt,name=uid" json:"uid,omitempty"`
	InstructionId int64           `protobuf:"varint,25,opt,name=instructionId" json:"instructionId,omitempty"`
	Pubkey        []byte          `protobuf:"bytes,26,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Sign          []byte          `protobuf:"bytes,27,opt,name=sign,proto3" json:"sign,omitempty"`
	ActionId      MessageType     `protobuf:"varint,28,opt,name=actionId,enum=supplychain.MessageType" json:"actionId,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRequest_Value interface {
	isRequest_Value()
}

type Request_UserCreate struct {
	UserCreate *RequestUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Request_UserPaid struct {
	UserPaid *RequestUserPaid `protobuf:"bytes,2,opt,name=userPaid,oneof"`
}
type Request_ChangePubkey struct {
	ChangePubkey *RequestChangePubkey `protobuf:"bytes,3,opt,name=changePubkey,oneof"`
}
type Request_ChangeCredit struct {
	ChangeCredit *RequestChangeCredit `protobuf:"bytes,4,opt,name=changeCredit,oneof"`
}
type Request_CreateLoan struct {
	CreateLoan *RequestCreateLoan `protobuf:"bytes,5,opt,name=createLoan,oneof"`
}
type Request_ApplyCredit struct {
	ApplyCredit *RequestApplyCredit `protobuf:"bytes,6,opt,name=applyCredit,oneof"`
}
type Request_ApplyGuarantee struct {
	ApplyGuarantee *RequestApplyGuarantee `protobuf:"bytes,7,opt,name=applyGuarantee,oneof"`
}
type Request_GuaranteeFeedback struct {
	GuaranteeFeedback *RequestGuaranteeFeedback `protobuf:"bytes,8,opt,name=guaranteeFeedback,oneof"`
}
type Request_CreditFeedback struct {
	CreditFeedback *RequestCreditFeedback `protobuf:"bytes,9,opt,name=creditFeedback,oneof"`
}
type Request_EditCredit struct {
	EditCredit *RequestEditCredit `protobuf:"bytes,10,opt,name=editCredit,oneof"`
}
type Request_IssueLoan struct {
	IssueLoan *RequestIssueLoan `protobuf:"bytes,11,opt,name=issueLoan,oneof"`
}
type Request_CancelLoan struct {
	CancelLoan *RequestCancelLoan `protobuf:"bytes,12,opt,name=cancelLoan,oneof"`
}
type Request_PrepareBuy struct {
	PrepareBuy *RequestPrepareBuy `protobuf:"bytes,13,opt,name=prepareBuy,oneof"`
}
type Request_Pay struct {
	Pay *RequestPay `protobuf:"bytes,14,opt,name=pay,oneof"`
}
type Request_ConfirmReceive struct {
	ConfirmReceive *RequestConfirmReceive `protobuf:"bytes,15,opt,name=confirmReceive,oneof"`
}
type Request_RepayAdvance struct {
	RepayAdvance *RequestRepayAdvance `protobuf:"bytes,16,opt,name=repayAdvance,oneof"`
}
type Request_Repay struct {
	Repay *RequestRepay `protobuf:"bytes,17,opt,name=repay,oneof"`
}
type Request_ConfirmRepay struct {
	ConfirmRepay *RequestConfirmRepay `protobuf:"bytes,18,opt,name=confirmRepay,oneof"`
}
type Request_CreateAdmin struct {
	CreateAdmin *RequestCreateAdmin `protobuf:"bytes,19,opt,name=createAdmin,oneof"`
}
type Request_SetGuarantee struct {
	SetGuarantee *RequestSetGuarantee `protobuf:"bytes,20,opt,name=setGuarantee,oneof"`
}
type Request_IncreaseBankRmb struct {
	IncreaseBankRmb *RequestIncreaseBankRmb `protobuf:"bytes,21,opt,name=increaseBankRmb,oneof"`
}
type Request_Deposit struct {
	Deposit *RequestDeposit `protobuf:"bytes,22,opt,name=deposit,oneof"`
}
type Request_Withdraw struct {
	Withdraw *RequestWithdraw `protobuf:"bytes,23,opt,name=withdraw,oneof"`
}

func (*Request_UserCreate) isRequest_Value()        {}
func (*Request_UserPaid) isRequest_Value()          {}
func (*Request_ChangePubkey) isRequest_Value()      {}
func (*Request_ChangeCredit) isRequest_Value()      {}
func (*Request_CreateLoan) isRequest_Value()        {}
func (*Request_ApplyCredit) isRequest_Value()       {}
func (*Request_ApplyGuarantee) isRequest_Value()    {}
func (*Request_GuaranteeFeedback) isRequest_Value() {}
func (*Request_CreditFeedback) isRequest_Value()    {}
func (*Request_EditCredit) isRequest_Value()        {}
func (*Request_IssueLoan) isRequest_Value()         {}
func (*Request_CancelLoan) isRequest_Value()        {}
func (*Request_PrepareBuy) isRequest_Value()        {}
func (*Request_Pay) isRequest_Value()               {}
func (*Request_ConfirmReceive) isRequest_Value()    {}
func (*Request_RepayAdvance) isRequest_Value()      {}
func (*Request_Repay) isRequest_Value()             {}
func (*Request_ConfirmRepay) isRequest_Value()      {}
func (*Request_CreateAdmin) isRequest_Value()       {}
func (*Request_SetGuarantee) isRequest_Value()      {}
func (*Request_IncreaseBankRmb) isRequest_Value()   {}
func (*Request_Deposit) isRequest_Value()           {}
func (*Request_Withdraw) isRequest_Value()          {}

func (m *Request) GetValue() isRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Request) GetUserCreate() *RequestUserCreate {
	if x, ok := m.GetValue().(*Request_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Request) GetUserPaid() *RequestUserPaid {
	if x, ok := m.GetValue().(*Request_UserPaid); ok {
		return x.UserPaid
	}
	return nil
}

func (m *Request) GetChangePubkey() *RequestChangePubkey {
	if x, ok := m.GetValue().(*Request_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Request) GetChangeCredit() *RequestChangeCredit {
	if x, ok := m.GetValue().(*Request_ChangeCredit); ok {
		return x.ChangeCredit
	}
	return nil
}

func (m *Request) GetCreateLoan() *RequestCreateLoan {
	if x, ok := m.GetValue().(*Request_CreateLoan); ok {
		return x.CreateLoan
	}
	return nil
}

func (m *Request) GetApplyCredit() *RequestApplyCredit {
	if x, ok := m.GetValue().(*Request_ApplyCredit); ok {
		return x.ApplyCredit
	}
	return nil
}

func (m *Request) GetApplyGuarantee() *RequestApplyGuarantee {
	if x, ok := m.GetValue().(*Request_ApplyGuarantee); ok {
		return x.ApplyGuarantee
	}
	return nil
}

func (m *Request) GetGuaranteeFeedback() *RequestGuaranteeFeedback {
	if x, ok := m.GetValue().(*Request_GuaranteeFeedback); ok {
		return x.GuaranteeFeedback
	}
	return nil
}

func (m *Request) GetCreditFeedback() *RequestCreditFeedback {
	if x, ok := m.GetValue().(*Request_CreditFeedback); ok {
		return x.CreditFeedback
	}
	return nil
}

func (m *Request) GetEditCredit() *RequestEditCredit {
	if x, ok := m.GetValue().(*Request_EditCredit); ok {
		return x.EditCredit
	}
	return nil
}

func (m *Request) GetIssueLoan() *RequestIssueLoan {
	if x, ok := m.GetValue().(*Request_IssueLoan); ok {
		return x.IssueLoan
	}
	return nil
}

func (m *Request) GetCancelLoan() *RequestCancelLoan {
	if x, ok := m.GetValue().(*Request_CancelLoan); ok {
		return x.CancelLoan
	}
	return nil
}

func (m *Request) GetPrepareBuy() *RequestPrepareBuy {
	if x, ok := m.GetValue().(*Request_PrepareBuy); ok {
		return x.PrepareBuy
	}
	return nil
}

func (m *Request) GetPay() *RequestPay {
	if x, ok := m.GetValue().(*Request_Pay); ok {
		return x.Pay
	}
	return nil
}

func (m *Request) GetConfirmReceive() *RequestConfirmReceive {
	if x, ok := m.GetValue().(*Request_ConfirmReceive); ok {
		return x.ConfirmReceive
	}
	return nil
}

func (m *Request) GetRepayAdvance() *RequestRepayAdvance {
	if x, ok := m.GetValue().(*Request_RepayAdvance); ok {
		return x.RepayAdvance
	}
	return nil
}

func (m *Request) GetRepay() *RequestRepay {
	if x, ok := m.GetValue().(*Request_Repay); ok {
		return x.Repay
	}
	return nil
}

func (m *Request) GetConfirmRepay() *RequestConfirmRepay {
	if x, ok := m.GetValue().(*Request_ConfirmRepay); ok {
		return x.ConfirmRepay
	}
	return nil
}

func (m *Request) GetCreateAdmin() *RequestCreateAdmin {
	if x, ok := m.GetValue().(*Request_CreateAdmin); ok {
		return x.CreateAdmin
	}
	return nil
}

func (m *Request) GetSetGuarantee() *RequestSetGuarantee {
	if x, ok := m.GetValue().(*Request_SetGuarantee); ok {
		return x.SetGuarantee
	}
	return nil
}

func (m *Request) GetIncreaseBankRmb() *RequestIncreaseBankRmb {
	if x, ok := m.GetValue().(*Request_IncreaseBankRmb); ok {
		return x.IncreaseBankRmb
	}
	return nil
}

func (m *Request) GetDeposit() *RequestDeposit {
	if x, ok := m.GetValue().(*Request_Deposit); ok {
		return x.Deposit
	}
	return nil
}

func (m *Request) GetWithdraw() *RequestWithdraw {
	if x, ok := m.GetValue().(*Request_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *Request) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Request) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *Request) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *Request) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *Request) GetActionId() MessageType {
	if m != nil {
		return m.ActionId
	}
	return MessageType_MsgError
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_UserCreate)(nil),
		(*Request_UserPaid)(nil),
		(*Request_ChangePubkey)(nil),
		(*Request_ChangeCredit)(nil),
		(*Request_CreateLoan)(nil),
		(*Request_ApplyCredit)(nil),
		(*Request_ApplyGuarantee)(nil),
		(*Request_GuaranteeFeedback)(nil),
		(*Request_CreditFeedback)(nil),
		(*Request_EditCredit)(nil),
		(*Request_IssueLoan)(nil),
		(*Request_CancelLoan)(nil),
		(*Request_PrepareBuy)(nil),
		(*Request_Pay)(nil),
		(*Request_ConfirmReceive)(nil),
		(*Request_RepayAdvance)(nil),
		(*Request_Repay)(nil),
		(*Request_ConfirmRepay)(nil),
		(*Request_CreateAdmin)(nil),
		(*Request_SetGuarantee)(nil),
		(*Request_IncreaseBankRmb)(nil),
		(*Request_Deposit)(nil),
		(*Request_Withdraw)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Request_UserPaid:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserPaid); err != nil {
			return err
		}
	case *Request_ChangePubkey:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Request_ChangeCredit:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangeCredit); err != nil {
			return err
		}
	case *Request_CreateLoan:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateLoan); err != nil {
			return err
		}
	case *Request_ApplyCredit:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApplyCredit); err != nil {
			return err
		}
	case *Request_ApplyGuarantee:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApplyGuarantee); err != nil {
			return err
		}
	case *Request_GuaranteeFeedback:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GuaranteeFeedback); err != nil {
			return err
		}
	case *Request_CreditFeedback:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreditFeedback); err != nil {
			return err
		}
	case *Request_EditCredit:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EditCredit); err != nil {
			return err
		}
	case *Request_IssueLoan:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IssueLoan); err != nil {
			return err
		}
	case *Request_CancelLoan:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelLoan); err != nil {
			return err
		}
	case *Request_PrepareBuy:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PrepareBuy); err != nil {
			return err
		}
	case *Request_Pay:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pay); err != nil {
			return err
		}
	case *Request_ConfirmReceive:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmReceive); err != nil {
			return err
		}
	case *Request_RepayAdvance:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepayAdvance); err != nil {
			return err
		}
	case *Request_Repay:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Repay); err != nil {
			return err
		}
	case *Request_ConfirmRepay:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmRepay); err != nil {
			return err
		}
	case *Request_CreateAdmin:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateAdmin); err != nil {
			return err
		}
	case *Request_SetGuarantee:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetGuarantee); err != nil {
			return err
		}
	case *Request_IncreaseBankRmb:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IncreaseBankRmb); err != nil {
			return err
		}
	case *Request_Deposit:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deposit); err != nil {
			return err
		}
	case *Request_Withdraw:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Value has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Request_UserCreate{msg}
		return true, err
	case 2: // value.userPaid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestUserPaid)
		err := b.DecodeMessage(msg)
		m.Value = &Request_UserPaid{msg}
		return true, err
	case 3: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ChangePubkey{msg}
		return true, err
	case 4: // value.changeCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestChangeCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ChangeCredit{msg}
		return true, err
	case 5: // value.createLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCreateLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Request_CreateLoan{msg}
		return true, err
	case 6: // value.applyCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestApplyCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ApplyCredit{msg}
		return true, err
	case 7: // value.applyGuarantee
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestApplyGuarantee)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ApplyGuarantee{msg}
		return true, err
	case 8: // value.guaranteeFeedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGuaranteeFeedback)
		err := b.DecodeMessage(msg)
		m.Value = &Request_GuaranteeFeedback{msg}
		return true, err
	case 9: // value.creditFeedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCreditFeedback)
		err := b.DecodeMessage(msg)
		m.Value = &Request_CreditFeedback{msg}
		return true, err
	case 10: // value.editCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestEditCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Request_EditCredit{msg}
		return true, err
	case 11: // value.issueLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestIssueLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Request_IssueLoan{msg}
		return true, err
	case 12: // value.cancelLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCancelLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Request_CancelLoan{msg}
		return true, err
	case 13: // value.prepareBuy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestPrepareBuy)
		err := b.DecodeMessage(msg)
		m.Value = &Request_PrepareBuy{msg}
		return true, err
	case 14: // value.pay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestPay)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Pay{msg}
		return true, err
	case 15: // value.confirmReceive
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestConfirmReceive)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ConfirmReceive{msg}
		return true, err
	case 16: // value.repayAdvance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestRepayAdvance)
		err := b.DecodeMessage(msg)
		m.Value = &Request_RepayAdvance{msg}
		return true, err
	case 17: // value.repay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestRepay)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Repay{msg}
		return true, err
	case 18: // value.confirmRepay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestConfirmRepay)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ConfirmRepay{msg}
		return true, err
	case 19: // value.createAdmin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCreateAdmin)
		err := b.DecodeMessage(msg)
		m.Value = &Request_CreateAdmin{msg}
		return true, err
	case 20: // value.setGuarantee
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestSetGuarantee)
		err := b.DecodeMessage(msg)
		m.Value = &Request_SetGuarantee{msg}
		return true, err
	case 21: // value.increaseBankRmb
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestIncreaseBankRmb)
		err := b.DecodeMessage(msg)
		m.Value = &Request_IncreaseBankRmb{msg}
		return true, err
	case 22: // value.deposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestDeposit)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Deposit{msg}
		return true, err
	case 23: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Withdraw{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_UserPaid:
		s := proto.Size(x.UserPaid)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ChangeCredit:
		s := proto.Size(x.ChangeCredit)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CreateLoan:
		s := proto.Size(x.CreateLoan)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ApplyCredit:
		s := proto.Size(x.ApplyCredit)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ApplyGuarantee:
		s := proto.Size(x.ApplyGuarantee)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GuaranteeFeedback:
		s := proto.Size(x.GuaranteeFeedback)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CreditFeedback:
		s := proto.Size(x.CreditFeedback)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_EditCredit:
		s := proto.Size(x.EditCredit)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_IssueLoan:
		s := proto.Size(x.IssueLoan)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CancelLoan:
		s := proto.Size(x.CancelLoan)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_PrepareBuy:
		s := proto.Size(x.PrepareBuy)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Pay:
		s := proto.Size(x.Pay)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ConfirmReceive:
		s := proto.Size(x.ConfirmReceive)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RepayAdvance:
		s := proto.Size(x.RepayAdvance)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Repay:
		s := proto.Size(x.Repay)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ConfirmRepay:
		s := proto.Size(x.ConfirmRepay)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CreateAdmin:
		s := proto.Size(x.CreateAdmin)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_SetGuarantee:
		s := proto.Size(x.SetGuarantee)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_IncreaseBankRmb:
		s := proto.Size(x.IncreaseBankRmb)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Deposit:
		s := proto.Size(x.Deposit)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RequestUserCreate struct {
	Uid    string   `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Pubkey []byte   `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Credit int64    `protobuf:"varint,3,opt,name=credit" json:"credit,omitempty"`
	Type   UserType `protobuf:"varint,4,opt,name=type,enum=supplychain.UserType" json:"type,omitempty"`
	Info   []byte   `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestUserCreate) Reset()                    { *m = RequestUserCreate{} }
func (m *RequestUserCreate) String() string            { return proto.CompactTextString(m) }
func (*RequestUserCreate) ProtoMessage()               {}
func (*RequestUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RequestUserCreate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RequestUserCreate) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *RequestUserCreate) GetCredit() int64 {
	if m != nil {
		return m.Credit
	}
	return 0
}

func (m *RequestUserCreate) GetType() UserType {
	if m != nil {
		return m.Type
	}
	return UserType_U_UNK
}

func (m *RequestUserCreate) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestUserPaid struct {
	Uid    string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Pubkey []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (m *RequestUserPaid) Reset()                    { *m = RequestUserPaid{} }
func (m *RequestUserPaid) String() string            { return proto.CompactTextString(m) }
func (*RequestUserPaid) ProtoMessage()               {}
func (*RequestUserPaid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestUserPaid) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RequestUserPaid) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

type RequestChangePubkey struct {
	NewPubkey []byte `protobuf:"bytes,1,opt,name=newPubkey,proto3" json:"newPubkey,omitempty"`
}

func (m *RequestChangePubkey) Reset()                    { *m = RequestChangePubkey{} }
func (m *RequestChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*RequestChangePubkey) ProtoMessage()               {}
func (*RequestChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestChangePubkey) GetNewPubkey() []byte {
	if m != nil {
		return m.NewPubkey
	}
	return nil
}

type RequestChangeCredit struct {
	Uid    string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Credit int64  `protobuf:"varint,2,opt,name=credit" json:"credit,omitempty"`
}

func (m *RequestChangeCredit) Reset()                    { *m = RequestChangeCredit{} }
func (m *RequestChangeCredit) String() string            { return proto.CompactTextString(m) }
func (*RequestChangeCredit) ProtoMessage()               {}
func (*RequestChangeCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RequestChangeCredit) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RequestChangeCredit) GetCredit() int64 {
	if m != nil {
		return m.Credit
	}
	return 0
}

type RequestCreateLoan struct {
	LoanId     int64  `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
	Amount     int64  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Rate       int32  `protobuf:"varint,3,opt,name=rate" json:"rate,omitempty"`
	Expiration int64  `protobuf:"varint,4,opt,name=expiration" json:"expiration,omitempty"`
	Info       []byte `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestCreateLoan) Reset()                    { *m = RequestCreateLoan{} }
func (m *RequestCreateLoan) String() string            { return proto.CompactTextString(m) }
func (*RequestCreateLoan) ProtoMessage()               {}
func (*RequestCreateLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RequestCreateLoan) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

func (m *RequestCreateLoan) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RequestCreateLoan) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *RequestCreateLoan) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *RequestCreateLoan) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestApplyCredit struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestApplyCredit) Reset()                    { *m = RequestApplyCredit{} }
func (m *RequestApplyCredit) String() string            { return proto.CompactTextString(m) }
func (*RequestApplyCredit) ProtoMessage()               {}
func (*RequestApplyCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RequestApplyCredit) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestApplyGuarantee struct {
	LoanId       int64  `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
	GuaranteeUid string `protobuf:"bytes,2,opt,name=guaranteeUid" json:"guaranteeUid,omitempty"`
}

func (m *RequestApplyGuarantee) Reset()                    { *m = RequestApplyGuarantee{} }
func (m *RequestApplyGuarantee) String() string            { return proto.CompactTextString(m) }
func (*RequestApplyGuarantee) ProtoMessage()               {}
func (*RequestApplyGuarantee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RequestApplyGuarantee) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

func (m *RequestApplyGuarantee) GetGuaranteeUid() string {
	if m != nil {
		return m.GuaranteeUid
	}
	return ""
}

type RequestCreditFeedback struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestCreditFeedback) Reset()                    { *m = RequestCreditFeedback{} }
func (m *RequestCreditFeedback) String() string            { return proto.CompactTextString(m) }
func (*RequestCreditFeedback) ProtoMessage()               {}
func (*RequestCreditFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RequestCreditFeedback) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestGuaranteeFeedback struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestGuaranteeFeedback) Reset()                    { *m = RequestGuaranteeFeedback{} }
func (m *RequestGuaranteeFeedback) String() string            { return proto.CompactTextString(m) }
func (*RequestGuaranteeFeedback) ProtoMessage()               {}
func (*RequestGuaranteeFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RequestGuaranteeFeedback) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestEditCredit struct {
	LoanId int64  `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
	Info   []byte `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestEditCredit) Reset()                    { *m = RequestEditCredit{} }
func (m *RequestEditCredit) String() string            { return proto.CompactTextString(m) }
func (*RequestEditCredit) ProtoMessage()               {}
func (*RequestEditCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RequestEditCredit) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

func (m *RequestEditCredit) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestIssueLoan struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestIssueLoan) Reset()                    { *m = RequestIssueLoan{} }
func (m *RequestIssueLoan) String() string            { return proto.CompactTextString(m) }
func (*RequestIssueLoan) ProtoMessage()               {}
func (*RequestIssueLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RequestIssueLoan) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestCancelLoan struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestCancelLoan) Reset()                    { *m = RequestCancelLoan{} }
func (m *RequestCancelLoan) String() string            { return proto.CompactTextString(m) }
func (*RequestCancelLoan) ProtoMessage()               {}
func (*RequestCancelLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *RequestCancelLoan) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestPrepareBuy struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestPrepareBuy) Reset()                    { *m = RequestPrepareBuy{} }
func (m *RequestPrepareBuy) String() string            { return proto.CompactTextString(m) }
func (*RequestPrepareBuy) ProtoMessage()               {}
func (*RequestPrepareBuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RequestPrepareBuy) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestPay struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestPay) Reset()                    { *m = RequestPay{} }
func (m *RequestPay) String() string            { return proto.CompactTextString(m) }
func (*RequestPay) ProtoMessage()               {}
func (*RequestPay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RequestPay) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestConfirmReceive struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestConfirmReceive) Reset()                    { *m = RequestConfirmReceive{} }
func (m *RequestConfirmReceive) String() string            { return proto.CompactTextString(m) }
func (*RequestConfirmReceive) ProtoMessage()               {}
func (*RequestConfirmReceive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RequestConfirmReceive) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestRepayAdvance struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *RequestRepayAdvance) Reset()                    { *m = RequestRepayAdvance{} }
func (m *RequestRepayAdvance) String() string            { return proto.CompactTextString(m) }
func (*RequestRepayAdvance) ProtoMessage()               {}
func (*RequestRepayAdvance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *RequestRepayAdvance) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

func (m *RequestRepayAdvance) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type RequestRepay struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *RequestRepay) Reset()                    { *m = RequestRepay{} }
func (m *RequestRepay) String() string            { return proto.CompactTextString(m) }
func (*RequestRepay) ProtoMessage()               {}
func (*RequestRepay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RequestRepay) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

func (m *RequestRepay) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type RequestConfirmRepay struct {
	LoanId int64 `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
}

func (m *RequestConfirmRepay) Reset()                    { *m = RequestConfirmRepay{} }
func (m *RequestConfirmRepay) String() string            { return proto.CompactTextString(m) }
func (*RequestConfirmRepay) ProtoMessage()               {}
func (*RequestConfirmRepay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *RequestConfirmRepay) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type RequestCreateAdmin struct {
	Pubkey []byte    `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Type   AdminType `protobuf:"varint,2,opt,name=type,enum=supplychain.AdminType" json:"type,omitempty"`
}

func (m *RequestCreateAdmin) Reset()                    { *m = RequestCreateAdmin{} }
func (m *RequestCreateAdmin) String() string            { return proto.CompactTextString(m) }
func (*RequestCreateAdmin) ProtoMessage()               {}
func (*RequestCreateAdmin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *RequestCreateAdmin) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *RequestCreateAdmin) GetType() AdminType {
	if m != nil {
		return m.Type
	}
	return AdminType_A_UNK
}

type RequestSetGuarantee struct {
	Uid       string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Guarantee int64  `protobuf:"varint,2,opt,name=guarantee" json:"guarantee,omitempty"`
}

func (m *RequestSetGuarantee) Reset()                    { *m = RequestSetGuarantee{} }
func (m *RequestSetGuarantee) String() string            { return proto.CompactTextString(m) }
func (*RequestSetGuarantee) ProtoMessage()               {}
func (*RequestSetGuarantee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *RequestSetGuarantee) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RequestSetGuarantee) GetGuarantee() int64 {
	if m != nil {
		return m.Guarantee
	}
	return 0
}

// 增加银行资金
type RequestIncreaseBankRmb struct {
	// 金额
	Cash int64 `protobuf:"varint,1,opt,name=cash" json:"cash,omitempty"`
	// 银行地址
	Bank []byte `protobuf:"bytes,2,opt,name=bank,proto3" json:"bank,omitempty"`
}

func (m *RequestIncreaseBankRmb) Reset()                    { *m = RequestIncreaseBankRmb{} }
func (m *RequestIncreaseBankRmb) String() string            { return proto.CompactTextString(m) }
func (*RequestIncreaseBankRmb) ProtoMessage()               {}
func (*RequestIncreaseBankRmb) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RequestIncreaseBankRmb) GetCash() int64 {
	if m != nil {
		return m.Cash
	}
	return 0
}

func (m *RequestIncreaseBankRmb) GetBank() []byte {
	if m != nil {
		return m.Bank
	}
	return nil
}

// 存款
type RequestDeposit struct {
	// 存款金额
	Cash int64 `protobuf:"varint,1,opt,name=cash" json:"cash,omitempty"`
	// 用户uid
	UserUid string `protobuf:"bytes,2,opt,name=userUid" json:"userUid,omitempty"`
	// 用户公钥
	UserPubkey []byte `protobuf:"bytes,3,opt,name=userPubkey,proto3" json:"userPubkey,omitempty"`
}

func (m *RequestDeposit) Reset()                    { *m = RequestDeposit{} }
func (m *RequestDeposit) String() string            { return proto.CompactTextString(m) }
func (*RequestDeposit) ProtoMessage()               {}
func (*RequestDeposit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RequestDeposit) GetCash() int64 {
	if m != nil {
		return m.Cash
	}
	return 0
}

func (m *RequestDeposit) GetUserUid() string {
	if m != nil {
		return m.UserUid
	}
	return ""
}

func (m *RequestDeposit) GetUserPubkey() []byte {
	if m != nil {
		return m.UserPubkey
	}
	return nil
}

// 取款
type RequestWithdraw struct {
	// 取款金额
	Cash int64 `protobuf:"varint,1,opt,name=cash" json:"cash,omitempty"`
	// 银行地址
	Bank []byte `protobuf:"bytes,2,opt,name=bank,proto3" json:"bank,omitempty"`
}

func (m *RequestWithdraw) Reset()                    { *m = RequestWithdraw{} }
func (m *RequestWithdraw) String() string            { return proto.CompactTextString(m) }
func (*RequestWithdraw) ProtoMessage()               {}
func (*RequestWithdraw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RequestWithdraw) GetCash() int64 {
	if m != nil {
		return m.Cash
	}
	return 0
}

func (m *RequestWithdraw) GetBank() []byte {
	if m != nil {
		return m.Bank
	}
	return nil
}

type Response struct {
	// Types that are valid to be assigned to Value:
	//	*Response_UserCreate
	//	*Response_UserPaid
	//	*Response_ChangePubkey
	//	*Response_ChangeCredit
	//	*Response_CreateLoan
	//	*Response_ApplyCredit
	//	*Response_ApplyGuarantee
	//	*Response_GuaranteeFeedback
	//	*Response_CreditFeedback
	//	*Response_EditCredit
	//	*Response_IssueLoan
	//	*Response_CancelLoan
	//	*Response_PrepareBuy
	//	*Response_Pay
	//	*Response_ConfirmReceive
	//	*Response_RepayAdvance
	//	*Response_Repay
	//	*Response_ConfirmRepay
	//	*Response_CreateAdmin
	//	*Response_SetGuarantee
	//	*Response_IncreaseBankRmb
	//	*Response_Deposit
	//	*Response_Withdraw
	//	*Response_Ok
	//	*Response_Exception
	Value isResponse_Value `protobuf_oneof:"value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type isResponse_Value interface {
	isResponse_Value()
}

type Response_UserCreate struct {
	UserCreate *ResponseUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Response_UserPaid struct {
	UserPaid *ResponseUserPaid `protobuf:"bytes,2,opt,name=userPaid,oneof"`
}
type Response_ChangePubkey struct {
	ChangePubkey *ResponseChangePubkey `protobuf:"bytes,3,opt,name=changePubkey,oneof"`
}
type Response_ChangeCredit struct {
	ChangeCredit *ResponseChangeCredit `protobuf:"bytes,4,opt,name=changeCredit,oneof"`
}
type Response_CreateLoan struct {
	CreateLoan *ResponseCreateLoan `protobuf:"bytes,5,opt,name=createLoan,oneof"`
}
type Response_ApplyCredit struct {
	ApplyCredit *ResponseApplyCredit `protobuf:"bytes,6,opt,name=applyCredit,oneof"`
}
type Response_ApplyGuarantee struct {
	ApplyGuarantee *ResponseApplyGuarantee `protobuf:"bytes,7,opt,name=applyGuarantee,oneof"`
}
type Response_GuaranteeFeedback struct {
	GuaranteeFeedback *ResponseGuaranteeFeedback `protobuf:"bytes,8,opt,name=guaranteeFeedback,oneof"`
}
type Response_CreditFeedback struct {
	CreditFeedback *ResponseCreditFeedback `protobuf:"bytes,9,opt,name=creditFeedback,oneof"`
}
type Response_EditCredit struct {
	EditCredit *ResponseEditCredit `protobuf:"bytes,10,opt,name=editCredit,oneof"`
}
type Response_IssueLoan struct {
	IssueLoan *ResponseIssueLoan `protobuf:"bytes,11,opt,name=issueLoan,oneof"`
}
type Response_CancelLoan struct {
	CancelLoan *ResponseCancelLoan `protobuf:"bytes,12,opt,name=cancelLoan,oneof"`
}
type Response_PrepareBuy struct {
	PrepareBuy *ResponsePrepareBuy `protobuf:"bytes,13,opt,name=prepareBuy,oneof"`
}
type Response_Pay struct {
	Pay *ResponsePay `protobuf:"bytes,14,opt,name=pay,oneof"`
}
type Response_ConfirmReceive struct {
	ConfirmReceive *ResponseConfirmReceive `protobuf:"bytes,15,opt,name=confirmReceive,oneof"`
}
type Response_RepayAdvance struct {
	RepayAdvance *ResponseRepayAdvance `protobuf:"bytes,16,opt,name=repayAdvance,oneof"`
}
type Response_Repay struct {
	Repay *ResponseRepay `protobuf:"bytes,17,opt,name=repay,oneof"`
}
type Response_ConfirmRepay struct {
	ConfirmRepay *ResponseConfirmRepay `protobuf:"bytes,18,opt,name=confirmRepay,oneof"`
}
type Response_CreateAdmin struct {
	CreateAdmin *ResponseCreateAdmin `protobuf:"bytes,19,opt,name=createAdmin,oneof"`
}
type Response_SetGuarantee struct {
	SetGuarantee *ResponseSetGuarantee `protobuf:"bytes,20,opt,name=setGuarantee,oneof"`
}
type Response_IncreaseBankRmb struct {
	IncreaseBankRmb *ResponseIncreaseBankRmb `protobuf:"bytes,21,opt,name=increaseBankRmb,oneof"`
}
type Response_Deposit struct {
	Deposit *ResponseDeposit `protobuf:"bytes,22,opt,name=deposit,oneof"`
}
type Response_Withdraw struct {
	Withdraw *ResponseWithdraw `protobuf:"bytes,23,opt,name=withdraw,oneof"`
}
type Response_Ok struct {
	Ok *ResponseOK `protobuf:"bytes,24,opt,name=ok,oneof"`
}
type Response_Exception struct {
	Exception *ResponseException `protobuf:"bytes,25,opt,name=exception,oneof"`
}

func (*Response_UserCreate) isResponse_Value()        {}
func (*Response_UserPaid) isResponse_Value()          {}
func (*Response_ChangePubkey) isResponse_Value()      {}
func (*Response_ChangeCredit) isResponse_Value()      {}
func (*Response_CreateLoan) isResponse_Value()        {}
func (*Response_ApplyCredit) isResponse_Value()       {}
func (*Response_ApplyGuarantee) isResponse_Value()    {}
func (*Response_GuaranteeFeedback) isResponse_Value() {}
func (*Response_CreditFeedback) isResponse_Value()    {}
func (*Response_EditCredit) isResponse_Value()        {}
func (*Response_IssueLoan) isResponse_Value()         {}
func (*Response_CancelLoan) isResponse_Value()        {}
func (*Response_PrepareBuy) isResponse_Value()        {}
func (*Response_Pay) isResponse_Value()               {}
func (*Response_ConfirmReceive) isResponse_Value()    {}
func (*Response_RepayAdvance) isResponse_Value()      {}
func (*Response_Repay) isResponse_Value()             {}
func (*Response_ConfirmRepay) isResponse_Value()      {}
func (*Response_CreateAdmin) isResponse_Value()       {}
func (*Response_SetGuarantee) isResponse_Value()      {}
func (*Response_IncreaseBankRmb) isResponse_Value()   {}
func (*Response_Deposit) isResponse_Value()           {}
func (*Response_Withdraw) isResponse_Value()          {}
func (*Response_Ok) isResponse_Value()                {}
func (*Response_Exception) isResponse_Value()         {}

func (m *Response) GetValue() isResponse_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Response) GetUserCreate() *ResponseUserCreate {
	if x, ok := m.GetValue().(*Response_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Response) GetUserPaid() *ResponseUserPaid {
	if x, ok := m.GetValue().(*Response_UserPaid); ok {
		return x.UserPaid
	}
	return nil
}

func (m *Response) GetChangePubkey() *ResponseChangePubkey {
	if x, ok := m.GetValue().(*Response_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Response) GetChangeCredit() *ResponseChangeCredit {
	if x, ok := m.GetValue().(*Response_ChangeCredit); ok {
		return x.ChangeCredit
	}
	return nil
}

func (m *Response) GetCreateLoan() *ResponseCreateLoan {
	if x, ok := m.GetValue().(*Response_CreateLoan); ok {
		return x.CreateLoan
	}
	return nil
}

func (m *Response) GetApplyCredit() *ResponseApplyCredit {
	if x, ok := m.GetValue().(*Response_ApplyCredit); ok {
		return x.ApplyCredit
	}
	return nil
}

func (m *Response) GetApplyGuarantee() *ResponseApplyGuarantee {
	if x, ok := m.GetValue().(*Response_ApplyGuarantee); ok {
		return x.ApplyGuarantee
	}
	return nil
}

func (m *Response) GetGuaranteeFeedback() *ResponseGuaranteeFeedback {
	if x, ok := m.GetValue().(*Response_GuaranteeFeedback); ok {
		return x.GuaranteeFeedback
	}
	return nil
}

func (m *Response) GetCreditFeedback() *ResponseCreditFeedback {
	if x, ok := m.GetValue().(*Response_CreditFeedback); ok {
		return x.CreditFeedback
	}
	return nil
}

func (m *Response) GetEditCredit() *ResponseEditCredit {
	if x, ok := m.GetValue().(*Response_EditCredit); ok {
		return x.EditCredit
	}
	return nil
}

func (m *Response) GetIssueLoan() *ResponseIssueLoan {
	if x, ok := m.GetValue().(*Response_IssueLoan); ok {
		return x.IssueLoan
	}
	return nil
}

func (m *Response) GetCancelLoan() *ResponseCancelLoan {
	if x, ok := m.GetValue().(*Response_CancelLoan); ok {
		return x.CancelLoan
	}
	return nil
}

func (m *Response) GetPrepareBuy() *ResponsePrepareBuy {
	if x, ok := m.GetValue().(*Response_PrepareBuy); ok {
		return x.PrepareBuy
	}
	return nil
}

func (m *Response) GetPay() *ResponsePay {
	if x, ok := m.GetValue().(*Response_Pay); ok {
		return x.Pay
	}
	return nil
}

func (m *Response) GetConfirmReceive() *ResponseConfirmReceive {
	if x, ok := m.GetValue().(*Response_ConfirmReceive); ok {
		return x.ConfirmReceive
	}
	return nil
}

func (m *Response) GetRepayAdvance() *ResponseRepayAdvance {
	if x, ok := m.GetValue().(*Response_RepayAdvance); ok {
		return x.RepayAdvance
	}
	return nil
}

func (m *Response) GetRepay() *ResponseRepay {
	if x, ok := m.GetValue().(*Response_Repay); ok {
		return x.Repay
	}
	return nil
}

func (m *Response) GetConfirmRepay() *ResponseConfirmRepay {
	if x, ok := m.GetValue().(*Response_ConfirmRepay); ok {
		return x.ConfirmRepay
	}
	return nil
}

func (m *Response) GetCreateAdmin() *ResponseCreateAdmin {
	if x, ok := m.GetValue().(*Response_CreateAdmin); ok {
		return x.CreateAdmin
	}
	return nil
}

func (m *Response) GetSetGuarantee() *ResponseSetGuarantee {
	if x, ok := m.GetValue().(*Response_SetGuarantee); ok {
		return x.SetGuarantee
	}
	return nil
}

func (m *Response) GetIncreaseBankRmb() *ResponseIncreaseBankRmb {
	if x, ok := m.GetValue().(*Response_IncreaseBankRmb); ok {
		return x.IncreaseBankRmb
	}
	return nil
}

func (m *Response) GetDeposit() *ResponseDeposit {
	if x, ok := m.GetValue().(*Response_Deposit); ok {
		return x.Deposit
	}
	return nil
}

func (m *Response) GetWithdraw() *ResponseWithdraw {
	if x, ok := m.GetValue().(*Response_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *Response) GetOk() *ResponseOK {
	if x, ok := m.GetValue().(*Response_Ok); ok {
		return x.Ok
	}
	return nil
}

func (m *Response) GetException() *ResponseException {
	if x, ok := m.GetValue().(*Response_Exception); ok {
		return x.Exception
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_UserCreate)(nil),
		(*Response_UserPaid)(nil),
		(*Response_ChangePubkey)(nil),
		(*Response_ChangeCredit)(nil),
		(*Response_CreateLoan)(nil),
		(*Response_ApplyCredit)(nil),
		(*Response_ApplyGuarantee)(nil),
		(*Response_GuaranteeFeedback)(nil),
		(*Response_CreditFeedback)(nil),
		(*Response_EditCredit)(nil),
		(*Response_IssueLoan)(nil),
		(*Response_CancelLoan)(nil),
		(*Response_PrepareBuy)(nil),
		(*Response_Pay)(nil),
		(*Response_ConfirmReceive)(nil),
		(*Response_RepayAdvance)(nil),
		(*Response_Repay)(nil),
		(*Response_ConfirmRepay)(nil),
		(*Response_CreateAdmin)(nil),
		(*Response_SetGuarantee)(nil),
		(*Response_IncreaseBankRmb)(nil),
		(*Response_Deposit)(nil),
		(*Response_Withdraw)(nil),
		(*Response_Ok)(nil),
		(*Response_Exception)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Response_UserPaid:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserPaid); err != nil {
			return err
		}
	case *Response_ChangePubkey:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Response_ChangeCredit:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangeCredit); err != nil {
			return err
		}
	case *Response_CreateLoan:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateLoan); err != nil {
			return err
		}
	case *Response_ApplyCredit:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApplyCredit); err != nil {
			return err
		}
	case *Response_ApplyGuarantee:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApplyGuarantee); err != nil {
			return err
		}
	case *Response_GuaranteeFeedback:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GuaranteeFeedback); err != nil {
			return err
		}
	case *Response_CreditFeedback:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreditFeedback); err != nil {
			return err
		}
	case *Response_EditCredit:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EditCredit); err != nil {
			return err
		}
	case *Response_IssueLoan:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IssueLoan); err != nil {
			return err
		}
	case *Response_CancelLoan:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelLoan); err != nil {
			return err
		}
	case *Response_PrepareBuy:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PrepareBuy); err != nil {
			return err
		}
	case *Response_Pay:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pay); err != nil {
			return err
		}
	case *Response_ConfirmReceive:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmReceive); err != nil {
			return err
		}
	case *Response_RepayAdvance:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepayAdvance); err != nil {
			return err
		}
	case *Response_Repay:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Repay); err != nil {
			return err
		}
	case *Response_ConfirmRepay:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmRepay); err != nil {
			return err
		}
	case *Response_CreateAdmin:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateAdmin); err != nil {
			return err
		}
	case *Response_SetGuarantee:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetGuarantee); err != nil {
			return err
		}
	case *Response_IncreaseBankRmb:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IncreaseBankRmb); err != nil {
			return err
		}
	case *Response_Deposit:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deposit); err != nil {
			return err
		}
	case *Response_Withdraw:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *Response_Ok:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ok); err != nil {
			return err
		}
	case *Response_Exception:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Exception); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Value has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Response_UserCreate{msg}
		return true, err
	case 2: // value.userPaid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseUserPaid)
		err := b.DecodeMessage(msg)
		m.Value = &Response_UserPaid{msg}
		return true, err
	case 3: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ChangePubkey{msg}
		return true, err
	case 4: // value.changeCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseChangeCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ChangeCredit{msg}
		return true, err
	case 5: // value.createLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseCreateLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Response_CreateLoan{msg}
		return true, err
	case 6: // value.applyCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseApplyCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ApplyCredit{msg}
		return true, err
	case 7: // value.applyGuarantee
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseApplyGuarantee)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ApplyGuarantee{msg}
		return true, err
	case 8: // value.guaranteeFeedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseGuaranteeFeedback)
		err := b.DecodeMessage(msg)
		m.Value = &Response_GuaranteeFeedback{msg}
		return true, err
	case 9: // value.creditFeedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseCreditFeedback)
		err := b.DecodeMessage(msg)
		m.Value = &Response_CreditFeedback{msg}
		return true, err
	case 10: // value.editCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseEditCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Response_EditCredit{msg}
		return true, err
	case 11: // value.issueLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseIssueLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Response_IssueLoan{msg}
		return true, err
	case 12: // value.cancelLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseCancelLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Response_CancelLoan{msg}
		return true, err
	case 13: // value.prepareBuy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponsePrepareBuy)
		err := b.DecodeMessage(msg)
		m.Value = &Response_PrepareBuy{msg}
		return true, err
	case 14: // value.pay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponsePay)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Pay{msg}
		return true, err
	case 15: // value.confirmReceive
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseConfirmReceive)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ConfirmReceive{msg}
		return true, err
	case 16: // value.repayAdvance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseRepayAdvance)
		err := b.DecodeMessage(msg)
		m.Value = &Response_RepayAdvance{msg}
		return true, err
	case 17: // value.repay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseRepay)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Repay{msg}
		return true, err
	case 18: // value.confirmRepay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseConfirmRepay)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ConfirmRepay{msg}
		return true, err
	case 19: // value.createAdmin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseCreateAdmin)
		err := b.DecodeMessage(msg)
		m.Value = &Response_CreateAdmin{msg}
		return true, err
	case 20: // value.setGuarantee
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseSetGuarantee)
		err := b.DecodeMessage(msg)
		m.Value = &Response_SetGuarantee{msg}
		return true, err
	case 21: // value.increaseBankRmb
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseIncreaseBankRmb)
		err := b.DecodeMessage(msg)
		m.Value = &Response_IncreaseBankRmb{msg}
		return true, err
	case 22: // value.deposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseDeposit)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Deposit{msg}
		return true, err
	case 23: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Withdraw{msg}
		return true, err
	case 24: // value.ok
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseOK)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Ok{msg}
		return true, err
	case 25: // value.exception
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseException)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Exception{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_UserPaid:
		s := proto.Size(x.UserPaid)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ChangeCredit:
		s := proto.Size(x.ChangeCredit)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_CreateLoan:
		s := proto.Size(x.CreateLoan)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ApplyCredit:
		s := proto.Size(x.ApplyCredit)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ApplyGuarantee:
		s := proto.Size(x.ApplyGuarantee)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GuaranteeFeedback:
		s := proto.Size(x.GuaranteeFeedback)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_CreditFeedback:
		s := proto.Size(x.CreditFeedback)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_EditCredit:
		s := proto.Size(x.EditCredit)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_IssueLoan:
		s := proto.Size(x.IssueLoan)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_CancelLoan:
		s := proto.Size(x.CancelLoan)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_PrepareBuy:
		s := proto.Size(x.PrepareBuy)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Pay:
		s := proto.Size(x.Pay)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ConfirmReceive:
		s := proto.Size(x.ConfirmReceive)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RepayAdvance:
		s := proto.Size(x.RepayAdvance)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Repay:
		s := proto.Size(x.Repay)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ConfirmRepay:
		s := proto.Size(x.ConfirmRepay)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_CreateAdmin:
		s := proto.Size(x.CreateAdmin)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_SetGuarantee:
		s := proto.Size(x.SetGuarantee)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_IncreaseBankRmb:
		s := proto.Size(x.IncreaseBankRmb)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Deposit:
		s := proto.Size(x.Deposit)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(23<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Ok:
		s := proto.Size(x.Ok)
		n += proto.SizeVarint(24<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Exception:
		s := proto.Size(x.Exception)
		n += proto.SizeVarint(25<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ResponseException struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseException) Reset()                    { *m = ResponseException{} }
func (m *ResponseException) String() string            { return proto.CompactTextString(m) }
func (*ResponseException) ProtoMessage()               {}
func (*ResponseException) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ResponseException) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ResponseOK struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *ResponseOK) Reset()                    { *m = ResponseOK{} }
func (m *ResponseOK) String() string            { return proto.CompactTextString(m) }
func (*ResponseOK) ProtoMessage()               {}
func (*ResponseOK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ResponseOK) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Receipt struct {
	IsOk bool   `protobuf:"varint,1,opt,name=isOk" json:"isOk,omitempty"`
	Err  []byte `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (m *Receipt) Reset()                    { *m = Receipt{} }
func (m *Receipt) String() string            { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()               {}
func (*Receipt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Receipt) GetIsOk() bool {
	if m != nil {
		return m.IsOk
	}
	return false
}

func (m *Receipt) GetErr() []byte {
	if m != nil {
		return m.Err
	}
	return nil
}

type ResponseUserCreate struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseUserCreate) Reset()                    { *m = ResponseUserCreate{} }
func (m *ResponseUserCreate) String() string            { return proto.CompactTextString(m) }
func (*ResponseUserCreate) ProtoMessage()               {}
func (*ResponseUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ResponseUserCreate) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseUserCreate) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseUserPaid struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseUserPaid) Reset()                    { *m = ResponseUserPaid{} }
func (m *ResponseUserPaid) String() string            { return proto.CompactTextString(m) }
func (*ResponseUserPaid) ProtoMessage()               {}
func (*ResponseUserPaid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ResponseUserPaid) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseUserPaid) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseChangePubkey struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseChangePubkey) Reset()                    { *m = ResponseChangePubkey{} }
func (m *ResponseChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*ResponseChangePubkey) ProtoMessage()               {}
func (*ResponseChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ResponseChangePubkey) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseChangePubkey) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseChangeCredit struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseChangeCredit) Reset()                    { *m = ResponseChangeCredit{} }
func (m *ResponseChangeCredit) String() string            { return proto.CompactTextString(m) }
func (*ResponseChangeCredit) ProtoMessage()               {}
func (*ResponseChangeCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ResponseChangeCredit) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseChangeCredit) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseCreateLoan struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseCreateLoan) Reset()                    { *m = ResponseCreateLoan{} }
func (m *ResponseCreateLoan) String() string            { return proto.CompactTextString(m) }
func (*ResponseCreateLoan) ProtoMessage()               {}
func (*ResponseCreateLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ResponseCreateLoan) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseCreateLoan) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseApplyCredit struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseApplyCredit) Reset()                    { *m = ResponseApplyCredit{} }
func (m *ResponseApplyCredit) String() string            { return proto.CompactTextString(m) }
func (*ResponseApplyCredit) ProtoMessage()               {}
func (*ResponseApplyCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ResponseApplyCredit) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseApplyCredit) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseApplyGuarantee struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseApplyGuarantee) Reset()                    { *m = ResponseApplyGuarantee{} }
func (m *ResponseApplyGuarantee) String() string            { return proto.CompactTextString(m) }
func (*ResponseApplyGuarantee) ProtoMessage()               {}
func (*ResponseApplyGuarantee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ResponseApplyGuarantee) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseApplyGuarantee) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseCreditFeedback struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseCreditFeedback) Reset()                    { *m = ResponseCreditFeedback{} }
func (m *ResponseCreditFeedback) String() string            { return proto.CompactTextString(m) }
func (*ResponseCreditFeedback) ProtoMessage()               {}
func (*ResponseCreditFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ResponseCreditFeedback) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseCreditFeedback) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseGuaranteeFeedback struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseGuaranteeFeedback) Reset()                    { *m = ResponseGuaranteeFeedback{} }
func (m *ResponseGuaranteeFeedback) String() string            { return proto.CompactTextString(m) }
func (*ResponseGuaranteeFeedback) ProtoMessage()               {}
func (*ResponseGuaranteeFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ResponseGuaranteeFeedback) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseGuaranteeFeedback) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseEditCredit struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseEditCredit) Reset()                    { *m = ResponseEditCredit{} }
func (m *ResponseEditCredit) String() string            { return proto.CompactTextString(m) }
func (*ResponseEditCredit) ProtoMessage()               {}
func (*ResponseEditCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ResponseEditCredit) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseEditCredit) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseIssueLoan struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseIssueLoan) Reset()                    { *m = ResponseIssueLoan{} }
func (m *ResponseIssueLoan) String() string            { return proto.CompactTextString(m) }
func (*ResponseIssueLoan) ProtoMessage()               {}
func (*ResponseIssueLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ResponseIssueLoan) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseIssueLoan) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseCancelLoan struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseCancelLoan) Reset()                    { *m = ResponseCancelLoan{} }
func (m *ResponseCancelLoan) String() string            { return proto.CompactTextString(m) }
func (*ResponseCancelLoan) ProtoMessage()               {}
func (*ResponseCancelLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ResponseCancelLoan) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseCancelLoan) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponsePrepareBuy struct {
	InstructionId int64 `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
}

func (m *ResponsePrepareBuy) Reset()                    { *m = ResponsePrepareBuy{} }
func (m *ResponsePrepareBuy) String() string            { return proto.CompactTextString(m) }
func (*ResponsePrepareBuy) ProtoMessage()               {}
func (*ResponsePrepareBuy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *ResponsePrepareBuy) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

type ResponsePay struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponsePay) Reset()                    { *m = ResponsePay{} }
func (m *ResponsePay) String() string            { return proto.CompactTextString(m) }
func (*ResponsePay) ProtoMessage()               {}
func (*ResponsePay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *ResponsePay) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponsePay) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseConfirmReceive struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseConfirmReceive) Reset()                    { *m = ResponseConfirmReceive{} }
func (m *ResponseConfirmReceive) String() string            { return proto.CompactTextString(m) }
func (*ResponseConfirmReceive) ProtoMessage()               {}
func (*ResponseConfirmReceive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ResponseConfirmReceive) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseConfirmReceive) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseRepayAdvance struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseRepayAdvance) Reset()                    { *m = ResponseRepayAdvance{} }
func (m *ResponseRepayAdvance) String() string            { return proto.CompactTextString(m) }
func (*ResponseRepayAdvance) ProtoMessage()               {}
func (*ResponseRepayAdvance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ResponseRepayAdvance) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseRepayAdvance) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseRepay struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseRepay) Reset()                    { *m = ResponseRepay{} }
func (m *ResponseRepay) String() string            { return proto.CompactTextString(m) }
func (*ResponseRepay) ProtoMessage()               {}
func (*ResponseRepay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *ResponseRepay) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseRepay) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseConfirmRepay struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseConfirmRepay) Reset()                    { *m = ResponseConfirmRepay{} }
func (m *ResponseConfirmRepay) String() string            { return proto.CompactTextString(m) }
func (*ResponseConfirmRepay) ProtoMessage()               {}
func (*ResponseConfirmRepay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *ResponseConfirmRepay) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseConfirmRepay) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseCreateAdmin struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseCreateAdmin) Reset()                    { *m = ResponseCreateAdmin{} }
func (m *ResponseCreateAdmin) String() string            { return proto.CompactTextString(m) }
func (*ResponseCreateAdmin) ProtoMessage()               {}
func (*ResponseCreateAdmin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ResponseCreateAdmin) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseCreateAdmin) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseSetGuarantee struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseSetGuarantee) Reset()                    { *m = ResponseSetGuarantee{} }
func (m *ResponseSetGuarantee) String() string            { return proto.CompactTextString(m) }
func (*ResponseSetGuarantee) ProtoMessage()               {}
func (*ResponseSetGuarantee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *ResponseSetGuarantee) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseSetGuarantee) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseIncreaseBankRmb struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseIncreaseBankRmb) Reset()                    { *m = ResponseIncreaseBankRmb{} }
func (m *ResponseIncreaseBankRmb) String() string            { return proto.CompactTextString(m) }
func (*ResponseIncreaseBankRmb) ProtoMessage()               {}
func (*ResponseIncreaseBankRmb) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *ResponseIncreaseBankRmb) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseIncreaseBankRmb) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseDeposit struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseDeposit) Reset()                    { *m = ResponseDeposit{} }
func (m *ResponseDeposit) String() string            { return proto.CompactTextString(m) }
func (*ResponseDeposit) ProtoMessage()               {}
func (*ResponseDeposit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *ResponseDeposit) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseDeposit) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseWithdraw struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseWithdraw) Reset()                    { *m = ResponseWithdraw{} }
func (m *ResponseWithdraw) String() string            { return proto.CompactTextString(m) }
func (*ResponseWithdraw) ProtoMessage()               {}
func (*ResponseWithdraw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *ResponseWithdraw) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseWithdraw) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type Admin struct {
	AdminType AdminType `protobuf:"varint,1,opt,name=adminType,enum=supplychain.AdminType" json:"adminType,omitempty"`
	AdminAddr []byte    `protobuf:"bytes,2,opt,name=adminAddr,proto3" json:"adminAddr,omitempty"`
}

func (m *Admin) Reset()                    { *m = Admin{} }
func (m *Admin) String() string            { return proto.CompactTextString(m) }
func (*Admin) ProtoMessage()               {}
func (*Admin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *Admin) GetAdminType() AdminType {
	if m != nil {
		return m.AdminType
	}
	return AdminType_A_UNK
}

func (m *Admin) GetAdminAddr() []byte {
	if m != nil {
		return m.AdminAddr
	}
	return nil
}

type Admins struct {
	Admins []*Admin `protobuf:"bytes,1,rep,name=admins" json:"admins,omitempty"`
}

func (m *Admins) Reset()                    { *m = Admins{} }
func (m *Admins) String() string            { return proto.CompactTextString(m) }
func (*Admins) ProtoMessage()               {}
func (*Admins) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *Admins) GetAdmins() []*Admin {
	if m != nil {
		return m.Admins
	}
	return nil
}

type User struct {
	Pubkey       []byte       `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Credit       int64        `protobuf:"varint,2,opt,name=credit" json:"credit,omitempty"`
	Guarantee    int64        `protobuf:"varint,3,opt,name=guarantee" json:"guarantee,omitempty"`
	Type         UserType     `protobuf:"varint,4,opt,name=type,enum=supplychain.UserType" json:"type,omitempty"`
	Info         []byte       `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	LoanIds      []int64      `protobuf:"varint,6,rep,packed,name=loanIds" json:"loanIds,omitempty"`
	GuaranteeIds []int64      `protobuf:"varint,7,rep,packed,name=guaranteeIds" json:"guaranteeIds,omitempty"`
	BuyIds       []int64      `protobuf:"varint,8,rep,packed,name=buyIds" json:"buyIds,omitempty"`
	Rmb          int64        `protobuf:"varint,9,opt,name=rmb" json:"rmb,omitempty"`
	State        AccountState `protobuf:"varint,10,opt,name=state,enum=supplychain.AccountState" json:"state,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *User) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *User) GetCredit() int64 {
	if m != nil {
		return m.Credit
	}
	return 0
}

func (m *User) GetGuarantee() int64 {
	if m != nil {
		return m.Guarantee
	}
	return 0
}

func (m *User) GetType() UserType {
	if m != nil {
		return m.Type
	}
	return UserType_U_UNK
}

func (m *User) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *User) GetLoanIds() []int64 {
	if m != nil {
		return m.LoanIds
	}
	return nil
}

func (m *User) GetGuaranteeIds() []int64 {
	if m != nil {
		return m.GuaranteeIds
	}
	return nil
}

func (m *User) GetBuyIds() []int64 {
	if m != nil {
		return m.BuyIds
	}
	return nil
}

func (m *User) GetRmb() int64 {
	if m != nil {
		return m.Rmb
	}
	return 0
}

func (m *User) GetState() AccountState {
	if m != nil {
		return m.State
	}
	return AccountState_ACC_UNK
}

type Loan struct {
	LoanId      string    `protobuf:"bytes,1,opt,name=loanId" json:"loanId,omitempty"`
	Amount      int64     `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Rate        int32     `protobuf:"varint,3,opt,name=rate" json:"rate,omitempty"`
	Expiration  int64     `protobuf:"varint,4,opt,name=expiration" json:"expiration,omitempty"`
	Type        LoanType  `protobuf:"varint,5,opt,name=type,enum=supplychain.LoanType" json:"type,omitempty"`
	GuaranteeId string    `protobuf:"bytes,6,opt,name=guaranteeId" json:"guaranteeId,omitempty"`
	Info        []byte    `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
	State       LoanState `protobuf:"varint,8,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	BuyId       string    `protobuf:"bytes,9,opt,name=buyId" json:"buyId,omitempty"`
	RepayAmount int64     `protobuf:"varint,10,opt,name=repayAmount" json:"repayAmount,omitempty"`
}

func (m *Loan) Reset()                    { *m = Loan{} }
func (m *Loan) String() string            { return proto.CompactTextString(m) }
func (*Loan) ProtoMessage()               {}
func (*Loan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *Loan) GetLoanId() string {
	if m != nil {
		return m.LoanId
	}
	return ""
}

func (m *Loan) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Loan) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Loan) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *Loan) GetType() LoanType {
	if m != nil {
		return m.Type
	}
	return LoanType_LT_UNK
}

func (m *Loan) GetGuaranteeId() string {
	if m != nil {
		return m.GuaranteeId
	}
	return ""
}

func (m *Loan) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Loan) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *Loan) GetBuyId() string {
	if m != nil {
		return m.BuyId
	}
	return ""
}

func (m *Loan) GetRepayAmount() int64 {
	if m != nil {
		return m.RepayAmount
	}
	return 0
}

type Bank struct {
	Rmb int64 `protobuf:"varint,1,opt,name=rmb" json:"rmb,omitempty"`
}

func (m *Bank) Reset()                    { *m = Bank{} }
func (m *Bank) String() string            { return proto.CompactTextString(m) }
func (*Bank) ProtoMessage()               {}
func (*Bank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *Bank) GetRmb() int64 {
	if m != nil {
		return m.Rmb
	}
	return 0
}

type Event struct {
	// Types that are valid to be assigned to Value:
	//	*Event_UserCreate
	//	*Event_UserPaid
	//	*Event_ChangePubkey
	//	*Event_ChangeCredit
	//	*Event_CreateLoan
	//	*Event_ApplyCredit
	//	*Event_ApplyGuarantee
	//	*Event_GuaranteeFeedback
	//	*Event_CreditFeedback
	//	*Event_EditCredit
	//	*Event_IssueLoan
	//	*Event_CancelLoan
	//	*Event_Pay
	//	*Event_ConfirmReceive
	//	*Event_RepayAdvance
	//	*Event_Repay
	//	*Event_ConfirmRepay
	//	*Event_CreateAdmin
	//	*Event_SetGuarantee
	//	*Event_IncreaseBankRmb
	//	*Event_Deposit
	//	*Event_Withdraw
	Value isEvent_Value `protobuf_oneof:"value"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

type isEvent_Value interface {
	isEvent_Value()
}

type Event_UserCreate struct {
	UserCreate *EventUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Event_UserPaid struct {
	UserPaid *EventUserPaid `protobuf:"bytes,2,opt,name=userPaid,oneof"`
}
type Event_ChangePubkey struct {
	ChangePubkey *EventChangePubkey `protobuf:"bytes,3,opt,name=changePubkey,oneof"`
}
type Event_ChangeCredit struct {
	ChangeCredit *EventChangeCredit `protobuf:"bytes,4,opt,name=changeCredit,oneof"`
}
type Event_CreateLoan struct {
	CreateLoan *EventCreateLoan `protobuf:"bytes,5,opt,name=createLoan,oneof"`
}
type Event_ApplyCredit struct {
	ApplyCredit *EventApplyCredit `protobuf:"bytes,6,opt,name=applyCredit,oneof"`
}
type Event_ApplyGuarantee struct {
	ApplyGuarantee *EventApplyGuarantee `protobuf:"bytes,7,opt,name=applyGuarantee,oneof"`
}
type Event_GuaranteeFeedback struct {
	GuaranteeFeedback *EventGuaranteeFeedback `protobuf:"bytes,8,opt,name=guaranteeFeedback,oneof"`
}
type Event_CreditFeedback struct {
	CreditFeedback *EventCreditFeedback `protobuf:"bytes,9,opt,name=creditFeedback,oneof"`
}
type Event_EditCredit struct {
	EditCredit *EventEditCredit `protobuf:"bytes,10,opt,name=editCredit,oneof"`
}
type Event_IssueLoan struct {
	IssueLoan *EventIssueLoan `protobuf:"bytes,11,opt,name=issueLoan,oneof"`
}
type Event_CancelLoan struct {
	CancelLoan *EventCancelLoan `protobuf:"bytes,12,opt,name=cancelLoan,oneof"`
}
type Event_Pay struct {
	Pay *EventPay `protobuf:"bytes,13,opt,name=pay,oneof"`
}
type Event_ConfirmReceive struct {
	ConfirmReceive *EventConfirmReceive `protobuf:"bytes,14,opt,name=confirmReceive,oneof"`
}
type Event_RepayAdvance struct {
	RepayAdvance *EventRepayAdvance `protobuf:"bytes,15,opt,name=repayAdvance,oneof"`
}
type Event_Repay struct {
	Repay *EventRepay `protobuf:"bytes,16,opt,name=repay,oneof"`
}
type Event_ConfirmRepay struct {
	ConfirmRepay *EventConfirmRepay `protobuf:"bytes,17,opt,name=confirmRepay,oneof"`
}
type Event_CreateAdmin struct {
	CreateAdmin *EventCreateAdmin `protobuf:"bytes,18,opt,name=createAdmin,oneof"`
}
type Event_SetGuarantee struct {
	SetGuarantee *EventSetGuarantee `protobuf:"bytes,19,opt,name=setGuarantee,oneof"`
}
type Event_IncreaseBankRmb struct {
	IncreaseBankRmb *EventIncreaseBankRmb `protobuf:"bytes,20,opt,name=increaseBankRmb,oneof"`
}
type Event_Deposit struct {
	Deposit *EventDeposit `protobuf:"bytes,21,opt,name=deposit,oneof"`
}
type Event_Withdraw struct {
	Withdraw *EventWithdraw `protobuf:"bytes,22,opt,name=withdraw,oneof"`
}

func (*Event_UserCreate) isEvent_Value()        {}
func (*Event_UserPaid) isEvent_Value()          {}
func (*Event_ChangePubkey) isEvent_Value()      {}
func (*Event_ChangeCredit) isEvent_Value()      {}
func (*Event_CreateLoan) isEvent_Value()        {}
func (*Event_ApplyCredit) isEvent_Value()       {}
func (*Event_ApplyGuarantee) isEvent_Value()    {}
func (*Event_GuaranteeFeedback) isEvent_Value() {}
func (*Event_CreditFeedback) isEvent_Value()    {}
func (*Event_EditCredit) isEvent_Value()        {}
func (*Event_IssueLoan) isEvent_Value()         {}
func (*Event_CancelLoan) isEvent_Value()        {}
func (*Event_Pay) isEvent_Value()               {}
func (*Event_ConfirmReceive) isEvent_Value()    {}
func (*Event_RepayAdvance) isEvent_Value()      {}
func (*Event_Repay) isEvent_Value()             {}
func (*Event_ConfirmRepay) isEvent_Value()      {}
func (*Event_CreateAdmin) isEvent_Value()       {}
func (*Event_SetGuarantee) isEvent_Value()      {}
func (*Event_IncreaseBankRmb) isEvent_Value()   {}
func (*Event_Deposit) isEvent_Value()           {}
func (*Event_Withdraw) isEvent_Value()          {}

func (m *Event) GetValue() isEvent_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Event) GetUserCreate() *EventUserCreate {
	if x, ok := m.GetValue().(*Event_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Event) GetUserPaid() *EventUserPaid {
	if x, ok := m.GetValue().(*Event_UserPaid); ok {
		return x.UserPaid
	}
	return nil
}

func (m *Event) GetChangePubkey() *EventChangePubkey {
	if x, ok := m.GetValue().(*Event_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Event) GetChangeCredit() *EventChangeCredit {
	if x, ok := m.GetValue().(*Event_ChangeCredit); ok {
		return x.ChangeCredit
	}
	return nil
}

func (m *Event) GetCreateLoan() *EventCreateLoan {
	if x, ok := m.GetValue().(*Event_CreateLoan); ok {
		return x.CreateLoan
	}
	return nil
}

func (m *Event) GetApplyCredit() *EventApplyCredit {
	if x, ok := m.GetValue().(*Event_ApplyCredit); ok {
		return x.ApplyCredit
	}
	return nil
}

func (m *Event) GetApplyGuarantee() *EventApplyGuarantee {
	if x, ok := m.GetValue().(*Event_ApplyGuarantee); ok {
		return x.ApplyGuarantee
	}
	return nil
}

func (m *Event) GetGuaranteeFeedback() *EventGuaranteeFeedback {
	if x, ok := m.GetValue().(*Event_GuaranteeFeedback); ok {
		return x.GuaranteeFeedback
	}
	return nil
}

func (m *Event) GetCreditFeedback() *EventCreditFeedback {
	if x, ok := m.GetValue().(*Event_CreditFeedback); ok {
		return x.CreditFeedback
	}
	return nil
}

func (m *Event) GetEditCredit() *EventEditCredit {
	if x, ok := m.GetValue().(*Event_EditCredit); ok {
		return x.EditCredit
	}
	return nil
}

func (m *Event) GetIssueLoan() *EventIssueLoan {
	if x, ok := m.GetValue().(*Event_IssueLoan); ok {
		return x.IssueLoan
	}
	return nil
}

func (m *Event) GetCancelLoan() *EventCancelLoan {
	if x, ok := m.GetValue().(*Event_CancelLoan); ok {
		return x.CancelLoan
	}
	return nil
}

func (m *Event) GetPay() *EventPay {
	if x, ok := m.GetValue().(*Event_Pay); ok {
		return x.Pay
	}
	return nil
}

func (m *Event) GetConfirmReceive() *EventConfirmReceive {
	if x, ok := m.GetValue().(*Event_ConfirmReceive); ok {
		return x.ConfirmReceive
	}
	return nil
}

func (m *Event) GetRepayAdvance() *EventRepayAdvance {
	if x, ok := m.GetValue().(*Event_RepayAdvance); ok {
		return x.RepayAdvance
	}
	return nil
}

func (m *Event) GetRepay() *EventRepay {
	if x, ok := m.GetValue().(*Event_Repay); ok {
		return x.Repay
	}
	return nil
}

func (m *Event) GetConfirmRepay() *EventConfirmRepay {
	if x, ok := m.GetValue().(*Event_ConfirmRepay); ok {
		return x.ConfirmRepay
	}
	return nil
}

func (m *Event) GetCreateAdmin() *EventCreateAdmin {
	if x, ok := m.GetValue().(*Event_CreateAdmin); ok {
		return x.CreateAdmin
	}
	return nil
}

func (m *Event) GetSetGuarantee() *EventSetGuarantee {
	if x, ok := m.GetValue().(*Event_SetGuarantee); ok {
		return x.SetGuarantee
	}
	return nil
}

func (m *Event) GetIncreaseBankRmb() *EventIncreaseBankRmb {
	if x, ok := m.GetValue().(*Event_IncreaseBankRmb); ok {
		return x.IncreaseBankRmb
	}
	return nil
}

func (m *Event) GetDeposit() *EventDeposit {
	if x, ok := m.GetValue().(*Event_Deposit); ok {
		return x.Deposit
	}
	return nil
}

func (m *Event) GetWithdraw() *EventWithdraw {
	if x, ok := m.GetValue().(*Event_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_UserCreate)(nil),
		(*Event_UserPaid)(nil),
		(*Event_ChangePubkey)(nil),
		(*Event_ChangeCredit)(nil),
		(*Event_CreateLoan)(nil),
		(*Event_ApplyCredit)(nil),
		(*Event_ApplyGuarantee)(nil),
		(*Event_GuaranteeFeedback)(nil),
		(*Event_CreditFeedback)(nil),
		(*Event_EditCredit)(nil),
		(*Event_IssueLoan)(nil),
		(*Event_CancelLoan)(nil),
		(*Event_Pay)(nil),
		(*Event_ConfirmReceive)(nil),
		(*Event_RepayAdvance)(nil),
		(*Event_Repay)(nil),
		(*Event_ConfirmRepay)(nil),
		(*Event_CreateAdmin)(nil),
		(*Event_SetGuarantee)(nil),
		(*Event_IncreaseBankRmb)(nil),
		(*Event_Deposit)(nil),
		(*Event_Withdraw)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// value
	switch x := m.Value.(type) {
	case *Event_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Event_UserPaid:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserPaid); err != nil {
			return err
		}
	case *Event_ChangePubkey:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Event_ChangeCredit:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangeCredit); err != nil {
			return err
		}
	case *Event_CreateLoan:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateLoan); err != nil {
			return err
		}
	case *Event_ApplyCredit:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApplyCredit); err != nil {
			return err
		}
	case *Event_ApplyGuarantee:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApplyGuarantee); err != nil {
			return err
		}
	case *Event_GuaranteeFeedback:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GuaranteeFeedback); err != nil {
			return err
		}
	case *Event_CreditFeedback:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreditFeedback); err != nil {
			return err
		}
	case *Event_EditCredit:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EditCredit); err != nil {
			return err
		}
	case *Event_IssueLoan:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IssueLoan); err != nil {
			return err
		}
	case *Event_CancelLoan:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelLoan); err != nil {
			return err
		}
	case *Event_Pay:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pay); err != nil {
			return err
		}
	case *Event_ConfirmReceive:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmReceive); err != nil {
			return err
		}
	case *Event_RepayAdvance:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepayAdvance); err != nil {
			return err
		}
	case *Event_Repay:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Repay); err != nil {
			return err
		}
	case *Event_ConfirmRepay:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmRepay); err != nil {
			return err
		}
	case *Event_CreateAdmin:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateAdmin); err != nil {
			return err
		}
	case *Event_SetGuarantee:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetGuarantee); err != nil {
			return err
		}
	case *Event_IncreaseBankRmb:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IncreaseBankRmb); err != nil {
			return err
		}
	case *Event_Deposit:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deposit); err != nil {
			return err
		}
	case *Event_Withdraw:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Value has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Event_UserCreate{msg}
		return true, err
	case 2: // value.userPaid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventUserPaid)
		err := b.DecodeMessage(msg)
		m.Value = &Event_UserPaid{msg}
		return true, err
	case 3: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ChangePubkey{msg}
		return true, err
	case 4: // value.changeCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventChangeCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ChangeCredit{msg}
		return true, err
	case 5: // value.createLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventCreateLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Event_CreateLoan{msg}
		return true, err
	case 6: // value.applyCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventApplyCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ApplyCredit{msg}
		return true, err
	case 7: // value.applyGuarantee
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventApplyGuarantee)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ApplyGuarantee{msg}
		return true, err
	case 8: // value.guaranteeFeedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventGuaranteeFeedback)
		err := b.DecodeMessage(msg)
		m.Value = &Event_GuaranteeFeedback{msg}
		return true, err
	case 9: // value.creditFeedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventCreditFeedback)
		err := b.DecodeMessage(msg)
		m.Value = &Event_CreditFeedback{msg}
		return true, err
	case 10: // value.editCredit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventEditCredit)
		err := b.DecodeMessage(msg)
		m.Value = &Event_EditCredit{msg}
		return true, err
	case 11: // value.issueLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventIssueLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Event_IssueLoan{msg}
		return true, err
	case 12: // value.cancelLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventCancelLoan)
		err := b.DecodeMessage(msg)
		m.Value = &Event_CancelLoan{msg}
		return true, err
	case 13: // value.pay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventPay)
		err := b.DecodeMessage(msg)
		m.Value = &Event_Pay{msg}
		return true, err
	case 14: // value.confirmReceive
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventConfirmReceive)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ConfirmReceive{msg}
		return true, err
	case 15: // value.repayAdvance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventRepayAdvance)
		err := b.DecodeMessage(msg)
		m.Value = &Event_RepayAdvance{msg}
		return true, err
	case 16: // value.repay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventRepay)
		err := b.DecodeMessage(msg)
		m.Value = &Event_Repay{msg}
		return true, err
	case 17: // value.confirmRepay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventConfirmRepay)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ConfirmRepay{msg}
		return true, err
	case 18: // value.createAdmin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventCreateAdmin)
		err := b.DecodeMessage(msg)
		m.Value = &Event_CreateAdmin{msg}
		return true, err
	case 19: // value.setGuarantee
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventSetGuarantee)
		err := b.DecodeMessage(msg)
		m.Value = &Event_SetGuarantee{msg}
		return true, err
	case 20: // value.increaseBankRmb
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventIncreaseBankRmb)
		err := b.DecodeMessage(msg)
		m.Value = &Event_IncreaseBankRmb{msg}
		return true, err
	case 21: // value.deposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventDeposit)
		err := b.DecodeMessage(msg)
		m.Value = &Event_Deposit{msg}
		return true, err
	case 22: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &Event_Withdraw{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// value
	switch x := m.Value.(type) {
	case *Event_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_UserPaid:
		s := proto.Size(x.UserPaid)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ChangeCredit:
		s := proto.Size(x.ChangeCredit)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_CreateLoan:
		s := proto.Size(x.CreateLoan)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ApplyCredit:
		s := proto.Size(x.ApplyCredit)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ApplyGuarantee:
		s := proto.Size(x.ApplyGuarantee)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_GuaranteeFeedback:
		s := proto.Size(x.GuaranteeFeedback)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_CreditFeedback:
		s := proto.Size(x.CreditFeedback)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_EditCredit:
		s := proto.Size(x.EditCredit)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_IssueLoan:
		s := proto.Size(x.IssueLoan)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_CancelLoan:
		s := proto.Size(x.CancelLoan)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Pay:
		s := proto.Size(x.Pay)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ConfirmReceive:
		s := proto.Size(x.ConfirmReceive)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_RepayAdvance:
		s := proto.Size(x.RepayAdvance)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Repay:
		s := proto.Size(x.Repay)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ConfirmRepay:
		s := proto.Size(x.ConfirmRepay)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_CreateAdmin:
		s := proto.Size(x.CreateAdmin)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_SetGuarantee:
		s := proto.Size(x.SetGuarantee)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_IncreaseBankRmb:
		s := proto.Size(x.IncreaseBankRmb)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Deposit:
		s := proto.Size(x.Deposit)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EventUserCreate struct {
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *EventUserCreate) Reset()                    { *m = EventUserCreate{} }
func (m *EventUserCreate) String() string            { return proto.CompactTextString(m) }
func (*EventUserCreate) ProtoMessage()               {}
func (*EventUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *EventUserCreate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type EventUserPaid struct {
	State AccountState `protobuf:"varint,1,opt,name=state,enum=supplychain.AccountState" json:"state,omitempty"`
}

func (m *EventUserPaid) Reset()                    { *m = EventUserPaid{} }
func (m *EventUserPaid) String() string            { return proto.CompactTextString(m) }
func (*EventUserPaid) ProtoMessage()               {}
func (*EventUserPaid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *EventUserPaid) GetState() AccountState {
	if m != nil {
		return m.State
	}
	return AccountState_ACC_UNK
}

type EventChangePubkey struct {
	NewPubkey []byte `protobuf:"bytes,1,opt,name=newPubkey,proto3" json:"newPubkey,omitempty"`
	Uid       string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *EventChangePubkey) Reset()                    { *m = EventChangePubkey{} }
func (m *EventChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*EventChangePubkey) ProtoMessage()               {}
func (*EventChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *EventChangePubkey) GetNewPubkey() []byte {
	if m != nil {
		return m.NewPubkey
	}
	return nil
}

func (m *EventChangePubkey) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type EventChangeCredit struct {
	Credit int64 `protobuf:"varint,1,opt,name=credit" json:"credit,omitempty"`
}

func (m *EventChangeCredit) Reset()                    { *m = EventChangeCredit{} }
func (m *EventChangeCredit) String() string            { return proto.CompactTextString(m) }
func (*EventChangeCredit) ProtoMessage()               {}
func (*EventChangeCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *EventChangeCredit) GetCredit() int64 {
	if m != nil {
		return m.Credit
	}
	return 0
}

type EventCreateLoan struct {
	LoanId int64     `protobuf:"varint,1,opt,name=loanId" json:"loanId,omitempty"`
	State  LoanState `protobuf:"varint,2,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
}

func (m *EventCreateLoan) Reset()                    { *m = EventCreateLoan{} }
func (m *EventCreateLoan) String() string            { return proto.CompactTextString(m) }
func (*EventCreateLoan) ProtoMessage()               {}
func (*EventCreateLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *EventCreateLoan) GetLoanId() int64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

func (m *EventCreateLoan) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

type EventApplyCredit struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
}

func (m *EventApplyCredit) Reset()                    { *m = EventApplyCredit{} }
func (m *EventApplyCredit) String() string            { return proto.CompactTextString(m) }
func (*EventApplyCredit) ProtoMessage()               {}
func (*EventApplyCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *EventApplyCredit) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

type EventApplyGuarantee struct {
	State       LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	GuaranteeId string    `protobuf:"bytes,2,opt,name=guaranteeId" json:"guaranteeId,omitempty"`
}

func (m *EventApplyGuarantee) Reset()                    { *m = EventApplyGuarantee{} }
func (m *EventApplyGuarantee) String() string            { return proto.CompactTextString(m) }
func (*EventApplyGuarantee) ProtoMessage()               {}
func (*EventApplyGuarantee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *EventApplyGuarantee) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventApplyGuarantee) GetGuaranteeId() string {
	if m != nil {
		return m.GuaranteeId
	}
	return ""
}

type EventGuaranteeFeedback struct {
	State     LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	Guarantee int64     `protobuf:"varint,2,opt,name=guarantee" json:"guarantee,omitempty"`
}

func (m *EventGuaranteeFeedback) Reset()                    { *m = EventGuaranteeFeedback{} }
func (m *EventGuaranteeFeedback) String() string            { return proto.CompactTextString(m) }
func (*EventGuaranteeFeedback) ProtoMessage()               {}
func (*EventGuaranteeFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *EventGuaranteeFeedback) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventGuaranteeFeedback) GetGuarantee() int64 {
	if m != nil {
		return m.Guarantee
	}
	return 0
}

type EventCreditFeedback struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
}

func (m *EventCreditFeedback) Reset()                    { *m = EventCreditFeedback{} }
func (m *EventCreditFeedback) String() string            { return proto.CompactTextString(m) }
func (*EventCreditFeedback) ProtoMessage()               {}
func (*EventCreditFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *EventCreditFeedback) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

type EventEditCredit struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
}

func (m *EventEditCredit) Reset()                    { *m = EventEditCredit{} }
func (m *EventEditCredit) String() string            { return proto.CompactTextString(m) }
func (*EventEditCredit) ProtoMessage()               {}
func (*EventEditCredit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *EventEditCredit) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

type EventIssueLoan struct {
	State  LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	Credit int64     `protobuf:"varint,2,opt,name=credit" json:"credit,omitempty"`
}

func (m *EventIssueLoan) Reset()                    { *m = EventIssueLoan{} }
func (m *EventIssueLoan) String() string            { return proto.CompactTextString(m) }
func (*EventIssueLoan) ProtoMessage()               {}
func (*EventIssueLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *EventIssueLoan) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventIssueLoan) GetCredit() int64 {
	if m != nil {
		return m.Credit
	}
	return 0
}

type EventCancelLoan struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
}

func (m *EventCancelLoan) Reset()                    { *m = EventCancelLoan{} }
func (m *EventCancelLoan) String() string            { return proto.CompactTextString(m) }
func (*EventCancelLoan) ProtoMessage()               {}
func (*EventCancelLoan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *EventCancelLoan) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

type EventPay struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	Rmb   int64     `protobuf:"varint,2,opt,name=rmb" json:"rmb,omitempty"`
}

func (m *EventPay) Reset()                    { *m = EventPay{} }
func (m *EventPay) String() string            { return proto.CompactTextString(m) }
func (*EventPay) ProtoMessage()               {}
func (*EventPay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *EventPay) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventPay) GetRmb() int64 {
	if m != nil {
		return m.Rmb
	}
	return 0
}

type EventConfirmReceive struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	Rmb   int64     `protobuf:"varint,2,opt,name=rmb" json:"rmb,omitempty"`
}

func (m *EventConfirmReceive) Reset()                    { *m = EventConfirmReceive{} }
func (m *EventConfirmReceive) String() string            { return proto.CompactTextString(m) }
func (*EventConfirmReceive) ProtoMessage()               {}
func (*EventConfirmReceive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *EventConfirmReceive) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventConfirmReceive) GetRmb() int64 {
	if m != nil {
		return m.Rmb
	}
	return 0
}

type EventRepayAdvance struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	Rmb   int64     `protobuf:"varint,2,opt,name=rmb" json:"rmb,omitempty"`
}

func (m *EventRepayAdvance) Reset()                    { *m = EventRepayAdvance{} }
func (m *EventRepayAdvance) String() string            { return proto.CompactTextString(m) }
func (*EventRepayAdvance) ProtoMessage()               {}
func (*EventRepayAdvance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *EventRepayAdvance) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventRepayAdvance) GetRmb() int64 {
	if m != nil {
		return m.Rmb
	}
	return 0
}

type EventRepay struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	Rmb   int64     `protobuf:"varint,2,opt,name=rmb" json:"rmb,omitempty"`
}

func (m *EventRepay) Reset()                    { *m = EventRepay{} }
func (m *EventRepay) String() string            { return proto.CompactTextString(m) }
func (*EventRepay) ProtoMessage()               {}
func (*EventRepay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *EventRepay) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventRepay) GetRmb() int64 {
	if m != nil {
		return m.Rmb
	}
	return 0
}

type EventConfirmRepay struct {
	State LoanState `protobuf:"varint,1,opt,name=state,enum=supplychain.LoanState" json:"state,omitempty"`
	Rmb   int64     `protobuf:"varint,2,opt,name=rmb" json:"rmb,omitempty"`
}

func (m *EventConfirmRepay) Reset()                    { *m = EventConfirmRepay{} }
func (m *EventConfirmRepay) String() string            { return proto.CompactTextString(m) }
func (*EventConfirmRepay) ProtoMessage()               {}
func (*EventConfirmRepay) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *EventConfirmRepay) GetState() LoanState {
	if m != nil {
		return m.State
	}
	return LoanState_L_UNK
}

func (m *EventConfirmRepay) GetRmb() int64 {
	if m != nil {
		return m.Rmb
	}
	return 0
}

type EventCreateAdmin struct {
	AdminPubkey []byte `protobuf:"bytes,1,opt,name=adminPubkey,proto3" json:"adminPubkey,omitempty"`
}

func (m *EventCreateAdmin) Reset()                    { *m = EventCreateAdmin{} }
func (m *EventCreateAdmin) String() string            { return proto.CompactTextString(m) }
func (*EventCreateAdmin) ProtoMessage()               {}
func (*EventCreateAdmin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *EventCreateAdmin) GetAdminPubkey() []byte {
	if m != nil {
		return m.AdminPubkey
	}
	return nil
}

type EventSetGuarantee struct {
	Guarantee int64 `protobuf:"varint,1,opt,name=guarantee" json:"guarantee,omitempty"`
}

func (m *EventSetGuarantee) Reset()                    { *m = EventSetGuarantee{} }
func (m *EventSetGuarantee) String() string            { return proto.CompactTextString(m) }
func (*EventSetGuarantee) ProtoMessage()               {}
func (*EventSetGuarantee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *EventSetGuarantee) GetGuarantee() int64 {
	if m != nil {
		return m.Guarantee
	}
	return 0
}

type EventIncreaseBankRmb struct {
	Balance int64 `protobuf:"varint,1,opt,name=balance" json:"balance,omitempty"`
}

func (m *EventIncreaseBankRmb) Reset()                    { *m = EventIncreaseBankRmb{} }
func (m *EventIncreaseBankRmb) String() string            { return proto.CompactTextString(m) }
func (*EventIncreaseBankRmb) ProtoMessage()               {}
func (*EventIncreaseBankRmb) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *EventIncreaseBankRmb) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type EventDeposit struct {
	Balance int64 `protobuf:"varint,1,opt,name=balance" json:"balance,omitempty"`
}

func (m *EventDeposit) Reset()                    { *m = EventDeposit{} }
func (m *EventDeposit) String() string            { return proto.CompactTextString(m) }
func (*EventDeposit) ProtoMessage()               {}
func (*EventDeposit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *EventDeposit) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type EventWithdraw struct {
	Balance int64 `protobuf:"varint,1,opt,name=balance" json:"balance,omitempty"`
}

func (m *EventWithdraw) Reset()                    { *m = EventWithdraw{} }
func (m *EventWithdraw) String() string            { return proto.CompactTextString(m) }
func (*EventWithdraw) ProtoMessage()               {}
func (*EventWithdraw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *EventWithdraw) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "supplychain.Request")
	proto.RegisterType((*RequestUserCreate)(nil), "supplychain.RequestUserCreate")
	proto.RegisterType((*RequestUserPaid)(nil), "supplychain.RequestUserPaid")
	proto.RegisterType((*RequestChangePubkey)(nil), "supplychain.RequestChangePubkey")
	proto.RegisterType((*RequestChangeCredit)(nil), "supplychain.RequestChangeCredit")
	proto.RegisterType((*RequestCreateLoan)(nil), "supplychain.RequestCreateLoan")
	proto.RegisterType((*RequestApplyCredit)(nil), "supplychain.RequestApplyCredit")
	proto.RegisterType((*RequestApplyGuarantee)(nil), "supplychain.RequestApplyGuarantee")
	proto.RegisterType((*RequestCreditFeedback)(nil), "supplychain.RequestCreditFeedback")
	proto.RegisterType((*RequestGuaranteeFeedback)(nil), "supplychain.RequestGuaranteeFeedback")
	proto.RegisterType((*RequestEditCredit)(nil), "supplychain.RequestEditCredit")
	proto.RegisterType((*RequestIssueLoan)(nil), "supplychain.RequestIssueLoan")
	proto.RegisterType((*RequestCancelLoan)(nil), "supplychain.RequestCancelLoan")
	proto.RegisterType((*RequestPrepareBuy)(nil), "supplychain.RequestPrepareBuy")
	proto.RegisterType((*RequestPay)(nil), "supplychain.RequestPay")
	proto.RegisterType((*RequestConfirmReceive)(nil), "supplychain.RequestConfirmReceive")
	proto.RegisterType((*RequestRepayAdvance)(nil), "supplychain.RequestRepayAdvance")
	proto.RegisterType((*RequestRepay)(nil), "supplychain.RequestRepay")
	proto.RegisterType((*RequestConfirmRepay)(nil), "supplychain.RequestConfirmRepay")
	proto.RegisterType((*RequestCreateAdmin)(nil), "supplychain.RequestCreateAdmin")
	proto.RegisterType((*RequestSetGuarantee)(nil), "supplychain.RequestSetGuarantee")
	proto.RegisterType((*RequestIncreaseBankRmb)(nil), "supplychain.RequestIncreaseBankRmb")
	proto.RegisterType((*RequestDeposit)(nil), "supplychain.RequestDeposit")
	proto.RegisterType((*RequestWithdraw)(nil), "supplychain.RequestWithdraw")
	proto.RegisterType((*Response)(nil), "supplychain.Response")
	proto.RegisterType((*ResponseException)(nil), "supplychain.ResponseException")
	proto.RegisterType((*ResponseOK)(nil), "supplychain.ResponseOK")
	proto.RegisterType((*Receipt)(nil), "supplychain.Receipt")
	proto.RegisterType((*ResponseUserCreate)(nil), "supplychain.ResponseUserCreate")
	proto.RegisterType((*ResponseUserPaid)(nil), "supplychain.ResponseUserPaid")
	proto.RegisterType((*ResponseChangePubkey)(nil), "supplychain.ResponseChangePubkey")
	proto.RegisterType((*ResponseChangeCredit)(nil), "supplychain.ResponseChangeCredit")
	proto.RegisterType((*ResponseCreateLoan)(nil), "supplychain.ResponseCreateLoan")
	proto.RegisterType((*ResponseApplyCredit)(nil), "supplychain.ResponseApplyCredit")
	proto.RegisterType((*ResponseApplyGuarantee)(nil), "supplychain.ResponseApplyGuarantee")
	proto.RegisterType((*ResponseCreditFeedback)(nil), "supplychain.ResponseCreditFeedback")
	proto.RegisterType((*ResponseGuaranteeFeedback)(nil), "supplychain.ResponseGuaranteeFeedback")
	proto.RegisterType((*ResponseEditCredit)(nil), "supplychain.ResponseEditCredit")
	proto.RegisterType((*ResponseIssueLoan)(nil), "supplychain.ResponseIssueLoan")
	proto.RegisterType((*ResponseCancelLoan)(nil), "supplychain.ResponseCancelLoan")
	proto.RegisterType((*ResponsePrepareBuy)(nil), "supplychain.ResponsePrepareBuy")
	proto.RegisterType((*ResponsePay)(nil), "supplychain.ResponsePay")
	proto.RegisterType((*ResponseConfirmReceive)(nil), "supplychain.ResponseConfirmReceive")
	proto.RegisterType((*ResponseRepayAdvance)(nil), "supplychain.ResponseRepayAdvance")
	proto.RegisterType((*ResponseRepay)(nil), "supplychain.ResponseRepay")
	proto.RegisterType((*ResponseConfirmRepay)(nil), "supplychain.ResponseConfirmRepay")
	proto.RegisterType((*ResponseCreateAdmin)(nil), "supplychain.ResponseCreateAdmin")
	proto.RegisterType((*ResponseSetGuarantee)(nil), "supplychain.ResponseSetGuarantee")
	proto.RegisterType((*ResponseIncreaseBankRmb)(nil), "supplychain.ResponseIncreaseBankRmb")
	proto.RegisterType((*ResponseDeposit)(nil), "supplychain.ResponseDeposit")
	proto.RegisterType((*ResponseWithdraw)(nil), "supplychain.ResponseWithdraw")
	proto.RegisterType((*Admin)(nil), "supplychain.Admin")
	proto.RegisterType((*Admins)(nil), "supplychain.Admins")
	proto.RegisterType((*User)(nil), "supplychain.User")
	proto.RegisterType((*Loan)(nil), "supplychain.Loan")
	proto.RegisterType((*Bank)(nil), "supplychain.Bank")
	proto.RegisterType((*Event)(nil), "supplychain.Event")
	proto.RegisterType((*EventUserCreate)(nil), "supplychain.EventUserCreate")
	proto.RegisterType((*EventUserPaid)(nil), "supplychain.EventUserPaid")
	proto.RegisterType((*EventChangePubkey)(nil), "supplychain.EventChangePubkey")
	proto.RegisterType((*EventChangeCredit)(nil), "supplychain.EventChangeCredit")
	proto.RegisterType((*EventCreateLoan)(nil), "supplychain.EventCreateLoan")
	proto.RegisterType((*EventApplyCredit)(nil), "supplychain.EventApplyCredit")
	proto.RegisterType((*EventApplyGuarantee)(nil), "supplychain.EventApplyGuarantee")
	proto.RegisterType((*EventGuaranteeFeedback)(nil), "supplychain.EventGuaranteeFeedback")
	proto.RegisterType((*EventCreditFeedback)(nil), "supplychain.EventCreditFeedback")
	proto.RegisterType((*EventEditCredit)(nil), "supplychain.EventEditCredit")
	proto.RegisterType((*EventIssueLoan)(nil), "supplychain.EventIssueLoan")
	proto.RegisterType((*EventCancelLoan)(nil), "supplychain.EventCancelLoan")
	proto.RegisterType((*EventPay)(nil), "supplychain.EventPay")
	proto.RegisterType((*EventConfirmReceive)(nil), "supplychain.EventConfirmReceive")
	proto.RegisterType((*EventRepayAdvance)(nil), "supplychain.EventRepayAdvance")
	proto.RegisterType((*EventRepay)(nil), "supplychain.EventRepay")
	proto.RegisterType((*EventConfirmRepay)(nil), "supplychain.EventConfirmRepay")
	proto.RegisterType((*EventCreateAdmin)(nil), "supplychain.EventCreateAdmin")
	proto.RegisterType((*EventSetGuarantee)(nil), "supplychain.EventSetGuarantee")
	proto.RegisterType((*EventIncreaseBankRmb)(nil), "supplychain.EventIncreaseBankRmb")
	proto.RegisterType((*EventDeposit)(nil), "supplychain.EventDeposit")
	proto.RegisterType((*EventWithdraw)(nil), "supplychain.EventWithdraw")
	proto.RegisterEnum("supplychain.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("supplychain.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("supplychain.AccountState", AccountState_name, AccountState_value)
	proto.RegisterEnum("supplychain.LoanState", LoanState_name, LoanState_value)
	proto.RegisterEnum("supplychain.LoanType", LoanType_name, LoanType_value)
	proto.RegisterEnum("supplychain.AdminType", AdminType_name, AdminType_value)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2696 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x5a, 0x5f, 0x73, 0x13, 0xc9,
	0x11, 0x3f, 0x49, 0x96, 0x2d, 0xb5, 0x64, 0x79, 0xbd, 0xd8, 0x66, 0x01, 0x1f, 0xf1, 0x2d, 0x24,
	0x75, 0x18, 0x02, 0x39, 0x1f, 0xa9, 0x23, 0x50, 0x01, 0x16, 0x49, 0x38, 0xe2, 0xe4, 0x3f, 0xb5,
	0x46, 0x90, 0xab, 0x54, 0xa2, 0x5a, 0x4b, 0x8b, 0x51, 0x61, 0x24, 0x45, 0x2b, 0xc1, 0xf9, 0x33,
	0xe4, 0x35, 0x4f, 0xf9, 0x0c, 0x79, 0x49, 0xe5, 0x0b, 0xe4, 0x39, 0x1f, 0x2a, 0x95, 0xe9, 0xd9,
	0xd9, 0x9d, 0x19, 0xed, 0xcc, 0xda, 0x2e, 0xa4, 0x27, 0xef, 0xf4, 0x76, 0xf7, 0xf4, 0xf4, 0xce,
	0x74, 0xcf, 0xef, 0x27, 0x43, 0xd1, 0x1b, 0xf6, 0xee, 0x0f, 0x47, 0x83, 0xf1, 0xc0, 0x2c, 0x05,
	0x93, 0xe1, 0xf0, 0xf4, 0xac, 0xf3, 0xde, 0xeb, 0xf5, 0xed, 0xff, 0x2e, 0xc3, 0x92, 0xeb, 0xff,
	0x75, 0xe2, 0x07, 0x63, 0xf3, 0x39, 0xc0, 0x24, 0xf0, 0x47, 0xd5, 0x91, 0xef, 0x8d, 0x7d, 0x2b,
	0xb3, 0x95, 0xf9, 0xb6, 0xb4, 0x73, 0xf3, 0xbe, 0xa0, 0x7d, 0x9f, 0x69, 0xb6, 0x62, 0xad, 0x3f,
	0x7c, 0xe5, 0x0a, 0x36, 0xe6, 0x63, 0x28, 0xe0, 0xe8, 0xd0, 0xeb, 0x75, 0xad, 0x2c, 0xb5, 0xdf,
	0xd4, 0xd9, 0xa3, 0x0e, 0xb1, 0x8e, 0xf5, 0xcd, 0x97, 0x50, 0x26, 0x4a, 0xfd, 0x13, 0xff, 0x70,
	0x72, 0xfc, 0xc1, 0x3f, 0xb3, 0x72, 0xd4, 0x7e, 0x4b, 0x65, 0x5f, 0x15, 0xf4, 0x88, 0x0f, 0xc9,
	0x8e, 0xfb, 0x21, 0x31, 0x75, 0x7b, 0x63, 0x6b, 0xe1, 0x3c, 0x3f, 0xa1, 0x1e, 0xf7, 0x13, 0x8e,
	0x31, 0x1b, 0x1d, 0xba, 0xaa, 0xe6, 0xc0, 0xeb, 0x5b, 0x79, 0x7d, 0x36, 0xaa, 0xb1, 0x16, 0x66,
	0x83, 0xdb, 0x98, 0x55, 0x28, 0x79, 0xa8, 0xcd, 0x02, 0x59, 0xa4, 0x2e, 0x7e, 0xa1, 0x72, 0xe1,
	0x70, 0x35, 0xe2, 0x43, 0xb4, 0x32, 0x9b, 0x50, 0xa1, 0xc3, 0xdd, 0x89, 0x37, 0xf2, 0xfa, 0x63,
	0xdf, 0xb7, 0x96, 0xa8, 0x1f, 0x5b, 0xeb, 0x27, 0xd6, 0x24, 0xae, 0xa6, 0x6c, 0xcd, 0x16, 0xac,
	0x9e, 0x44, 0x83, 0x97, 0xbe, 0xdf, 0x3d, 0xf6, 0x3a, 0x1f, 0xac, 0x02, 0x75, 0xf8, 0x4b, 0x95,
	0xc3, 0xdd, 0x69, 0x65, 0xe2, 0x33, 0xe9, 0x01, 0x83, 0xec, 0xd0, 0x70, 0x63, 0x9f, 0x45, 0x7d,
	0x90, 0x55, 0x49, 0x13, 0x83, 0x94, 0x6d, 0x31, 0xf3, 0x38, 0x66, 0x69, 0x03, 0x7d, 0xe6, 0xeb,
	0xb1, 0x16, 0x66, 0x9e, 0xdb, 0x98, 0xbf, 0x87, 0x62, 0x2f, 0x08, 0x26, 0xe1, 0xa7, 0x2b, 0x51,
	0x07, 0x5f, 0xab, 0x1c, 0x34, 0x22, 0x25, 0x62, 0xcf, 0x2d, 0xe8, 0xa7, 0xf7, 0xfa, 0x1d, 0xff,
	0x94, 0xda, 0x97, 0x53, 0x3e, 0x7d, 0xac, 0x45, 0x3f, 0x7d, 0x3c, 0x42, 0x0f, 0xc3, 0x91, 0x3f,
	0xf4, 0x46, 0xfe, 0x8b, 0xc9, 0x99, 0xb5, 0xac, 0xf7, 0x70, 0x18, 0x6b, 0xa1, 0x07, 0x6e, 0x63,
	0xde, 0x85, 0xdc, 0xd0, 0x3b, 0xb3, 0x2a, 0xd4, 0xf4, 0xaa, 0xd2, 0xd4, 0x43, 0x1b, 0xd4, 0xa2,
	0xf9, 0x1f, 0xf4, 0xdf, 0xf5, 0x46, 0x1f, 0x5d, 0xbf, 0xe3, 0xf7, 0x3e, 0xf9, 0xd6, 0x4a, 0x4a,
	0xfe, 0x25, 0x4d, 0x9a, 0x7f, 0x49, 0x82, 0x27, 0x08, 0xe3, 0x38, 0x73, 0xba, 0x9f, 0x70, 0x45,
	0x96, 0xa1, 0x3f, 0x41, 0xae, 0xa0, 0x87, 0x27, 0x48, 0xb4, 0x33, 0xbf, 0x83, 0x3c, 0x1d, 0x5b,
	0xab, 0xd4, 0xc1, 0x35, 0xad, 0x03, 0x62, 0x19, 0x6a, 0xd2, 0xc3, 0x1b, 0x05, 0x83, 0x96, 0x66,
	0xca, 0xe1, 0x15, 0xf4, 0xe8, 0xe1, 0x15, 0xc6, 0x78, 0xf4, 0xc2, 0x83, 0xe8, 0x74, 0x3f, 0xf6,
	0xfa, 0xd6, 0x15, 0xfd, 0xd1, 0xab, 0x72, 0x35, 0x3c, 0x7a, 0x82, 0x15, 0x06, 0x13, 0xf8, 0xfc,
	0x08, 0x58, 0x6b, 0xfa, 0x60, 0x8e, 0x04, 0x3d, 0x0c, 0x46, 0xb4, 0x33, 0x0f, 0x60, 0xa5, 0xd7,
	0x47, 0xc7, 0x81, 0xff, 0xc2, 0xeb, 0x7f, 0x70, 0x3f, 0x1e, 0x5b, 0xeb, 0xd4, 0xd5, 0x2d, 0xe5,
	0x9e, 0x94, 0x55, 0x89, 0xb7, 0x69, 0x6b, 0xf3, 0x07, 0x58, 0xea, 0xfa, 0xc3, 0x41, 0x40, 0x4e,
	0xc7, 0x06, 0x75, 0x74, 0x43, 0xe5, 0xa8, 0x16, 0xaa, 0x10, 0x07, 0x91, 0x36, 0xd6, 0xe7, 0xcf,
	0xbd, 0xf1, 0xfb, 0xee, 0xc8, 0xfb, 0x6c, 0x5d, 0xd5, 0xd7, 0xe7, 0xb7, 0x4c, 0x07, 0xeb, 0x73,
	0xa4, 0x6f, 0x1a, 0x90, 0x9b, 0x90, 0xb2, 0x6e, 0x11, 0xb3, 0xa2, 0x8b, 0x8f, 0xe6, 0x6d, 0x58,
	0xee, 0xf5, 0x83, 0xf1, 0x68, 0xd2, 0x19, 0xf7, 0x06, 0xfd, 0x46, 0xd7, 0xba, 0x46, 0xde, 0xe5,
	0x5c, 0x59, 0x68, 0x6e, 0xc0, 0xe2, 0x30, 0xac, 0xe8, 0xd7, 0xc9, 0xeb, 0xb2, 0xcb, 0x46, 0xa6,
	0x09, 0x0b, 0x41, 0xef, 0xa4, 0x6f, 0xdd, 0xa0, 0x52, 0xfa, 0x6c, 0x3e, 0x84, 0x82, 0x17, 0x39,
	0xdb, 0x24, 0xf2, 0xca, 0x8e, 0x25, 0xc5, 0xb7, 0xe7, 0x07, 0x81, 0x77, 0xe2, 0xbf, 0x3e, 0x1b,
	0xfa, 0x6e, 0xac, 0xf9, 0x62, 0x09, 0xf2, 0x9f, 0xbc, 0xd3, 0x89, 0x6f, 0xff, 0x3d, 0x03, 0xab,
	0x89, 0x16, 0x15, 0x05, 0x9e, 0xe1, 0x81, 0xf3, 0x90, 0xb2, 0x52, 0x48, 0x44, 0x1e, 0x96, 0x22,
	0xda, 0x7c, 0x72, 0x2e, 0x1b, 0x99, 0x77, 0x60, 0x61, 0x4c, 0xa6, 0xa4, 0xad, 0xa4, 0xb2, 0xb3,
	0x2e, 0x85, 0x84, 0x13, 0xd1, 0x78, 0xa8, 0x0a, 0xae, 0xaa, 0xd7, 0x7f, 0x37, 0xa0, 0xfd, 0x82,
	0xac, 0x0a, 0x9f, 0xed, 0x27, 0xb0, 0x32, 0xd5, 0xf8, 0x2e, 0x1e, 0x93, 0xfd, 0x3d, 0x5c, 0x51,
	0x74, 0x3d, 0x73, 0x13, 0x8a, 0x7d, 0xff, 0x33, 0x6b, 0x95, 0x19, 0x6a, 0xc1, 0x05, 0xf6, 0xb3,
	0x29, 0x23, 0x56, 0x16, 0x95, 0xb3, 0xb2, 0x15, 0x67, 0xc5, 0x15, 0xdb, 0x7f, 0xe3, 0x99, 0xe4,
	0xed, 0x0d, 0xb5, 0x4f, 0xc9, 0xdf, 0x46, 0xe8, 0x82, 0x68, 0x87, 0x23, 0x94, 0x7b, 0x1f, 0x07,
	0x93, 0x7e, 0xec, 0x25, 0x1c, 0x61, 0x32, 0x46, 0x78, 0x95, 0xc0, 0x6c, 0xe6, 0x5d, 0xfa, 0x6c,
	0xde, 0x24, 0xc5, 0xfd, 0xe7, 0x61, 0x8f, 0x3c, 0x93, 0x8f, 0x47, 0x33, 0x9a, 0x73, 0x05, 0x89,
	0x32, 0x81, 0xf7, 0xc0, 0x4c, 0x36, 0x4a, 0x5d, 0x34, 0xf6, 0x11, 0xac, 0x2b, 0xdb, 0xa1, 0x36,
	0x7c, 0x1b, 0xca, 0x71, 0x4b, 0x6b, 0xb1, 0x9b, 0x4b, 0xd1, 0x95, 0x64, 0xf6, 0x83, 0xd8, 0xa9,
	0xdc, 0xbe, 0xb4, 0x51, 0xec, 0x80, 0xa5, 0xeb, 0xa1, 0x5a, 0x9b, 0x67, 0x71, 0xd2, 0x79, 0x67,
	0xd3, 0x46, 0x1d, 0x25, 0x2a, 0x2b, 0x24, 0x6a, 0x1b, 0x8c, 0xe9, 0xce, 0xa6, 0x9d, 0xec, 0x2e,
	0xff, 0xc2, 0xbc, 0x6f, 0x9d, 0xaf, 0xcc, 0x1b, 0x96, 0x56, 0xf9, 0x36, 0x00, 0x6f, 0x51, 0x5a,
	0x2d, 0x21, 0xa3, 0x72, 0xfb, 0xd1, 0x19, 0xd4, 0xe3, 0x4d, 0x2d, 0x76, 0x9d, 0xcb, 0x6e, 0x4a,
	0xfb, 0x29, 0x94, 0x45, 0x37, 0x97, 0xb6, 0xff, 0x35, 0x3f, 0x5b, 0x62, 0xc7, 0xd1, 0x45, 0xfd,
	0xc7, 0x78, 0xef, 0x0a, 0x9d, 0x46, 0x38, 0xed, 0x19, 0xa9, 0x02, 0x6d, 0xb3, 0x4a, 0x93, 0xa5,
	0x95, 0x66, 0x43, 0xaa, 0x34, 0xd4, 0x92, 0x97, 0x1a, 0x21, 0x1f, 0x62, 0xf7, 0x51, 0x1c, 0x72,
	0x52, 0x2b, 0xe2, 0xbd, 0xcc, 0x16, 0xc3, 0x05, 0xf6, 0x73, 0xd8, 0x50, 0x77, 0x1e, 0xdc, 0x61,
	0x1d, 0x2f, 0x78, 0xcf, 0x16, 0x44, 0x9f, 0x51, 0x76, 0x4c, 0x5e, 0x47, 0xbb, 0x0e, 0x9f, 0xed,
	0xbf, 0x40, 0x45, 0x6e, 0x39, 0x4a, 0x4b, 0x0b, 0x96, 0xf0, 0xae, 0xcf, 0x0f, 0x58, 0x34, 0xc4,
	0x92, 0x40, 0x51, 0x00, 0xbf, 0xf7, 0x97, 0x5d, 0x41, 0x62, 0xff, 0x2e, 0xae, 0x9f, 0x51, 0x63,
	0xba, 0x70, 0x68, 0xff, 0x5e, 0x86, 0x82, 0xeb, 0x07, 0xc3, 0x41, 0x3f, 0xf0, 0x4d, 0x47, 0x81,
	0x6f, 0xa6, 0xef, 0x04, 0xa1, 0xaa, 0x16, 0xe0, 0x3c, 0x49, 0x00, 0x9c, 0xaf, 0xb5, 0x0e, 0x12,
	0x08, 0x67, 0x57, 0x89, 0x70, 0xbe, 0x51, 0x3a, 0x48, 0x85, 0x38, 0xbb, 0x4a, 0x88, 0x93, 0xe6,
	0x48, 0x83, 0x71, 0x1c, 0x05, 0xc6, 0x51, 0x67, 0x44, 0x0b, 0x72, 0x6a, 0x2a, 0x90, 0xb3, 0xa5,
	0xf4, 0x91, 0x82, 0x72, 0xf6, 0x34, 0x28, 0xe7, 0x96, 0xde, 0x51, 0x1a, 0xcc, 0x79, 0xa3, 0x87,
	0x39, 0xbf, 0x52, 0x7a, 0xbc, 0x20, 0xce, 0xd9, 0xd3, 0xe0, 0x9c, 0x5b, 0xba, 0x9c, 0xa5, 0x03,
	0x1d, 0x47, 0x01, 0x74, 0xd4, 0xe9, 0xd7, 0x22, 0x9d, 0xa7, 0x49, 0xa4, 0x73, 0x53, 0xe9, 0x41,
	0x03, 0x75, 0x1c, 0x05, 0xd4, 0xd1, 0xec, 0x00, 0x1d, 0xd6, 0x71, 0x14, 0x58, 0x47, 0xed, 0x42,
	0x0b, 0x76, 0xee, 0x89, 0x60, 0xc7, 0x52, 0xdb, 0x72, 0xb4, 0xb3, 0xa7, 0x41, 0x3b, 0x9a, 0xaf,
	0x70, 0x1e, 0xdc, 0xd9, 0x55, 0xc2, 0x1d, 0xf5, 0x69, 0x4a, 0xc5, 0x3b, 0x3b, 0x32, 0xde, 0xb9,
	0xae, 0xf7, 0xc0, 0x01, 0xcf, 0xae, 0x12, 0xf0, 0x7c, 0x93, 0xbe, 0x12, 0x15, 0xe2, 0xa9, 0xa9,
	0x10, 0xcf, 0x56, 0xca, 0x59, 0x56, 0x42, 0x9e, 0x5d, 0x25, 0xe4, 0x51, 0x87, 0x93, 0x8a, 0x79,
	0x0e, 0x75, 0x98, 0xe7, 0xb6, 0x7a, 0x77, 0x9e, 0x0f, 0x7a, 0x1e, 0x4d, 0x83, 0x9e, 0x4d, 0xa5,
	0x27, 0x05, 0xea, 0x79, 0x92, 0x40, 0x3d, 0xea, 0xa2, 0xad, 0x84, 0x3d, 0x77, 0x20, 0x3b, 0xf8,
	0x40, 0x51, 0x4f, 0x12, 0x86, 0x87, 0x66, 0x07, 0x3f, 0x12, 0x03, 0xa2, 0x84, 0x67, 0xd1, 0xff,
	0xb9, 0xe3, 0x0f, 0xe9, 0xcd, 0xf6, 0x5a, 0xca, 0x59, 0xac, 0x47, 0x5a, 0x78, 0x16, 0x63, 0x13,
	0x8e, 0x63, 0xee, 0xe0, 0x6d, 0x6b, 0x4a, 0xd5, 0x5c, 0x83, 0xbc, 0x3f, 0x1a, 0x0d, 0x46, 0xac,
	0xb3, 0x87, 0x03, 0x7b, 0x13, 0xef, 0x5a, 0x51, 0x1c, 0x66, 0x85, 0x06, 0x8b, 0x0a, 0x05, 0x8c,
	0x88, 0xdc, 0xb1, 0x96, 0xe8, 0x2e, 0x1f, 0xd2, 0x96, 0xdc, 0x0b, 0x0e, 0xa2, 0x97, 0xf4, 0x19,
	0xaf, 0x0a, 0xc4, 0x0b, 0x6b, 0x98, 0xf8, 0x68, 0x77, 0xf1, 0xb6, 0x32, 0xdd, 0x03, 0x93, 0x40,
	0x2f, 0xa3, 0x02, 0x7a, 0xdf, 0x92, 0x00, 0x3f, 0xf9, 0xec, 0xbe, 0x54, 0xda, 0x31, 0xa5, 0xa5,
	0xd7, 0xf1, 0x8d, 0x1b, 0x2a, 0xd8, 0xc7, 0x78, 0x4d, 0x95, 0x1b, 0xe5, 0xcc, 0xe7, 0x78, 0x07,
	0x6b, 0xaa, 0x5e, 0x3a, 0xff, 0x79, 0x58, 0x61, 0x9e, 0xf5, 0x3c, 0xc2, 0x97, 0x11, 0x10, 0xd9,
	0xac, 0x67, 0xf1, 0xf1, 0x4e, 0x99, 0xe8, 0xd6, 0x33, 0x9f, 0xe6, 0x3d, 0xde, 0x39, 0x55, 0xbd,
	0x7c, 0x9e, 0x33, 0x4d, 0x01, 0xb7, 0x59, 0xcf, 0xf4, 0x01, 0xae, 0x69, 0x6f, 0x13, 0xf3, 0xdc,
	0x0d, 0x02, 0x54, 0x9c, 0xf5, 0x2c, 0x1d, 0x5e, 0x87, 0x38, 0x9e, 0x9c, 0xe7, 0xc6, 0xe6, 0x97,
	0x8a, 0x59, 0xcf, 0xf2, 0x98, 0xcf, 0x22, 0x20, 0xd8, 0x0b, 0xcd, 0x62, 0xff, 0x19, 0x4a, 0xc2,
	0x2d, 0x64, 0xae, 0x5b, 0x54, 0xbe, 0x99, 0xcc, 0xb1, 0x56, 0x49, 0x10, 0x7a, 0xd6, 0xf3, 0xb4,
	0x61, 0x59, 0x9a, 0x67, 0xae, 0x45, 0x57, 0xbc, 0x04, 0xcd, 0xb1, 0x1c, 0x8a, 0xe8, 0x7d, 0x8e,
	0xcb, 0x91, 0xa0, 0xfc, 0xac, 0xe7, 0xe9, 0xc1, 0x55, 0xcd, 0x85, 0x6b, 0xe6, 0x53, 0x79, 0x88,
	0xd9, 0xa5, 0x1b, 0xd9, 0x3c, 0x6f, 0x11, 0x31, 0x2f, 0x30, 0xeb, 0x39, 0xfe, 0x04, 0xf9, 0xf0,
	0x93, 0x3f, 0x84, 0xa2, 0x17, 0xf1, 0x2f, 0xd4, 0xa9, 0x9e, 0x9d, 0xe1, 0x8a, 0xc8, 0xbc, 0xd0,
	0x81, 0xd3, 0xed, 0x46, 0xd7, 0x2c, 0x2e, 0xb0, 0x1f, 0xc2, 0x22, 0xb5, 0x0a, 0xcc, 0x6d, 0x58,
	0xa4, 0xe2, 0x80, 0xb8, 0xce, 0x25, 0x22, 0xa2, 0x4a, 0x2e, 0xd3, 0xb0, 0xff, 0x99, 0x85, 0x05,
	0xbc, 0x35, 0x69, 0x39, 0x24, 0x0d, 0xa7, 0x2b, 0xd3, 0x40, 0xb9, 0x29, 0x1a, 0xe8, 0x0b, 0x39,
	0x6e, 0x64, 0x77, 0x42, 0xc2, 0x2b, 0xb0, 0x16, 0xc9, 0x12, 0x72, 0x6e, 0x34, 0x94, 0xd8, 0x55,
	0x7c, 0xbd, 0x44, 0x5f, 0x4b, 0x32, 0x0c, 0xf9, 0x78, 0x72, 0x86, 0x6f, 0x0b, 0xf4, 0x2d, 0x1b,
	0xe1, 0x05, 0x75, 0x44, 0x90, 0x43, 0x91, 0x06, 0x8b, 0x8f, 0xe6, 0x03, 0xc8, 0x07, 0x63, 0xa4,
	0x6f, 0x80, 0xc6, 0x29, 0xff, 0xa6, 0xe4, 0x74, 0x3a, 0x48, 0xd1, 0x1d, 0xa1, 0x82, 0x1b, 0xea,
	0xd9, 0xff, 0x22, 0xe9, 0x52, 0x50, 0x9b, 0xc5, 0xb9, 0x90, 0xd7, 0x51, 0x12, 0xf3, 0x8a, 0x24,
	0x62, 0x10, 0x42, 0x12, 0xb7, 0xa0, 0x24, 0xa4, 0x80, 0xf2, 0x26, 0x45, 0x57, 0x14, 0xc5, 0x69,
	0x5e, 0x12, 0xd2, 0x7c, 0x2f, 0x5a, 0x7e, 0x41, 0xb1, 0x05, 0x71, 0x06, 0x71, 0xed, 0x08, 0x19,
	0x68, 0x22, 0x69, 0x02, 0x09, 0x64, 0xa0, 0x03, 0x9c, 0x39, 0x84, 0xad, 0xe1, 0xaa, 0x81, 0xae,
	0x42, 0x14, 0xd9, 0x16, 0x2c, 0x60, 0x5d, 0x88, 0xd2, 0x9f, 0x89, 0xd3, 0x6f, 0xff, 0xa7, 0x04,
	0x79, 0x7a, 0x40, 0x08, 0xd8, 0x49, 0x92, 0x69, 0x9b, 0xc9, 0x83, 0xa4, 0x65, 0xd2, 0x1e, 0x25,
	0x98, 0xb4, 0xeb, 0x6a, 0xeb, 0x04, 0x8d, 0x56, 0x53, 0xd2, 0x68, 0x37, 0x93, 0xd6, 0xa9, 0x1c,
	0x5a, 0x4d, 0xc9, 0xa1, 0x69, 0xbd, 0x68, 0x08, 0xb4, 0xa7, 0x0a, 0x02, 0x4d, 0x91, 0x05, 0x2d,
	0x7b, 0xe6, 0xa8, 0xd8, 0xb3, 0xaf, 0x93, 0x0e, 0x52, 0xa8, 0xb3, 0x57, 0x1a, 0xea, 0x6c, 0x4b,
	0xe3, 0x25, 0x8d, 0x37, 0x3b, 0xd2, 0xf3, 0x66, 0xb7, 0x92, 0xee, 0x2e, 0x48, 0x9a, 0xbd, 0xd2,
	0x90, 0x66, 0x5b, 0xca, 0x3c, 0xa5, 0x33, 0x66, 0x4f, 0x15, 0x8c, 0x99, 0x22, 0xdf, 0x5a, 0xba,
	0xec, 0x49, 0x92, 0x2e, 0xbb, 0x91, 0x34, 0xd7, 0x70, 0x65, 0x4f, 0x15, 0x5c, 0x99, 0xea, 0x63,
	0xeb, 0x88, 0xb2, 0x3b, 0x21, 0xcb, 0x15, 0x32, 0x64, 0xeb, 0x49, 0x43, 0x81, 0xe2, 0x7a, 0x95,
	0xa0, 0xb8, 0x2a, 0xda, 0x9c, 0x9d, 0xc7, 0x6f, 0xd5, 0xa6, 0xf8, 0xad, 0x15, 0xdd, 0x4e, 0x4f,
	0x25, 0xb7, 0x1e, 0x44, 0xe4, 0x96, 0xa1, 0xa0, 0x42, 0xb8, 0x39, 0x67, 0xb6, 0x6a, 0x53, 0xcc,
	0xd6, 0xaa, 0xf6, 0x80, 0xa5, 0xd1, 0x5a, 0x8e, 0x4c, 0x6b, 0x99, 0xba, 0x03, 0x92, 0xc2, 0x69,
	0xd5, 0xa6, 0x38, 0xad, 0x2b, 0xba, 0x40, 0x52, 0x09, 0xad, 0xbd, 0x24, 0xa1, 0xa5, 0x22, 0xc7,
	0xc2, 0xfd, 0x73, 0x3e, 0x9b, 0xf5, 0x5b, 0xce, 0x66, 0xad, 0x2b, 0xfe, 0x3b, 0x82, 0xba, 0x51,
	0x50, 0x59, 0x8f, 0x04, 0x2a, 0x6b, 0x43, 0x57, 0x35, 0x55, 0x3c, 0x16, 0x27, 0x97, 0x6e, 0xc1,
	0xca, 0x54, 0x65, 0x4e, 0xfe, 0x64, 0x64, 0x3f, 0x87, 0x65, 0xa9, 0x00, 0xf3, 0xbe, 0x9b, 0xb9,
	0x60, 0xdf, 0xad, 0xc2, 0x6a, 0xa2, 0x08, 0xa7, 0xff, 0x6a, 0x1d, 0x85, 0x91, 0xe5, 0x61, 0xdc,
	0x95, 0x9c, 0xf0, 0x1f, 0x44, 0xd9, 0xfd, 0x26, 0x23, 0xfd, 0x66, 0xfd, 0x96, 0x2d, 0xec, 0x02,
	0x3f, 0x58, 0xc7, 0x6d, 0x34, 0x7b, 0x81, 0x36, 0x4a, 0x92, 0x61, 0x4c, 0x17, 0x61, 0xee, 0x21,
	0x73, 0x11, 0x0f, 0x04, 0x47, 0x28, 0x0a, 0xf0, 0xe5, 0x9c, 0x4c, 0xdf, 0x18, 0xb2, 0x89, 0x1b,
	0x03, 0x81, 0xd2, 0x1b, 0xea, 0xc2, 0x7c, 0xc9, 0x99, 0xd2, 0x7f, 0x30, 0xac, 0xb2, 0xc5, 0x4c,
	0xf1, 0x29, 0x97, 0xcb, 0xc8, 0x33, 0xf6, 0xb1, 0x04, 0xf6, 0xe2, 0x72, 0x0e, 0xde, 0x40, 0x45,
	0xae, 0xd5, 0x97, 0x5c, 0xa3, 0xee, 0x3f, 0x1f, 0xa2, 0xc0, 0x04, 0x2e, 0xe2, 0x72, 0x81, 0xbd,
	0x82, 0x42, 0x54, 0xcd, 0x2f, 0x19, 0x12, 0xbb, 0x6e, 0x65, 0xf9, 0x75, 0xab, 0x15, 0xa5, 0x5a,
	0xae, 0xe8, 0x5f, 0xea, 0xf6, 0x88, 0x1d, 0x2b, 0x89, 0x04, 0xf8, 0x52, 0xa7, 0x4d, 0x00, 0xee,
	0x74, 0x66, 0x21, 0x4a, 0xf0, 0xfe, 0x4b, 0x9d, 0x3e, 0x64, 0x07, 0x59, 0xc4, 0xf2, 0xe4, 0x54,
	0x51, 0x60, 0x25, 0x15, 0x25, 0x51, 0x64, 0x7f, 0xc7, 0x42, 0x91, 0xa0, 0xb9, 0x74, 0x44, 0x32,
	0xd3, 0x47, 0xe4, 0x37, 0xb0, 0xa6, 0x6a, 0x04, 0x88, 0x92, 0x8e, 0xbd, 0x53, 0xda, 0x85, 0x43,
	0x9b, 0x68, 0x68, 0x7f, 0x0b, 0x65, 0xb1, 0xe6, 0xa7, 0x68, 0xde, 0x61, 0xa5, 0x39, 0xc6, 0xbc,
	0x5a, 0xd5, 0xed, 0x7f, 0x2c, 0x40, 0x49, 0xf8, 0x97, 0x29, 0xb3, 0x0c, 0x85, 0xbd, 0xe0, 0xa4,
	0x8e, 0x3f, 0x1c, 0x18, 0x5f, 0x99, 0x25, 0x58, 0x22, 0xa3, 0x46, 0xbf, 0x37, 0x36, 0x32, 0xe6,
	0x0a, 0xd1, 0x0c, 0x4e, 0x8e, 0xde, 0x4f, 0xc6, 0xb5, 0xc1, 0xe7, 0xbe, 0x91, 0x65, 0xba, 0xd5,
	0xd3, 0x41, 0xe0, 0x1b, 0x39, 0x73, 0x15, 0x96, 0xc9, 0x88, 0xb7, 0x0c, 0x63, 0x81, 0x59, 0x44,
	0x0d, 0xc2, 0xc8, 0x9b, 0x57, 0x60, 0x05, 0x2d, 0x84, 0x7a, 0x6f, 0x2c, 0x4a, 0xc2, 0xf0, 0x9c,
	0x1b, 0x4b, 0xcc, 0x1b, 0xaf, 0xd3, 0x46, 0x81, 0x80, 0x9d, 0x0a, 0x11, 0x09, 0x15, 0xd6, 0x28,
	0x9a, 0xeb, 0xb0, 0x1a, 0xc9, 0xe2, 0xc4, 0x1b, 0x40, 0xd6, 0xbb, 0x46, 0xc4, 0x89, 0x1a, 0x67,
	0x94, 0x98, 0x81, 0x5c, 0x97, 0x8c, 0x32, 0x9b, 0x8e, 0x57, 0x1a, 0x63, 0x99, 0xec, 0x8d, 0x32,
	0xae, 0x3d, 0xaa, 0x1d, 0x46, 0x25, 0x8a, 0x29, 0x3e, 0xf5, 0xc6, 0x0a, 0x13, 0x71, 0xba, 0xd0,
	0x30, 0x4c, 0x80, 0x45, 0x14, 0x79, 0x67, 0xc6, 0x6a, 0x34, 0x9b, 0x74, 0x34, 0x0d, 0x93, 0xad,
	0x58, 0x3c, 0x5a, 0xc6, 0x15, 0x96, 0x4d, 0x2a, 0x34, 0xd6, 0xa2, 0xa4, 0x08, 0x5b, 0xdb, 0x58,
	0x67, 0x19, 0x10, 0xb6, 0xa6, 0xb1, 0xc1, 0x14, 0xc5, 0x8d, 0x67, 0x5c, 0x25, 0x95, 0xcb, 0xa4,
	0xdf, 0x4d, 0xda, 0x5a, 0x86, 0x65, 0x56, 0x00, 0x88, 0x9c, 0x6d, 0x20, 0xe3, 0x1a, 0xfb, 0x40,
	0xd1, 0x36, 0x31, 0xae, 0x47, 0x9f, 0x14, 0x5b, 0xb5, 0x71, 0x63, 0xfb, 0x39, 0x14, 0x22, 0x5c,
	0x6f, 0x16, 0x21, 0xdf, 0x6a, 0xb7, 0xf6, 0x7f, 0x24, 0xbb, 0x82, 0x78, 0x69, 0xb5, 0x5f, 0x1c,
	0xb8, 0xee, 0xc1, 0xdb, 0xba, 0x4b, 0x36, 0xc6, 0x32, 0x14, 0x5b, 0xed, 0x97, 0xad, 0xfd, 0x5a,
	0x63, 0x7f, 0x97, 0x6c, 0x0b, 0x92, 0x80, 0x56, 0xbb, 0x7a, 0xe0, 0xd6, 0x8d, 0xdc, 0xf6, 0x63,
	0x28, 0x8b, 0x9d, 0x1f, 0x37, 0x94, 0x53, 0xad, 0x32, 0x3f, 0x64, 0x76, 0x1c, 0x54, 0xdd, 0xba,
	0xf3, 0xba, 0x5e, 0x23, 0x8e, 0xc8, 0xec, 0x28, 0x38, 0x74, 0x1a, 0x35, 0x23, 0xbb, 0xfd, 0xbf,
	0x0c, 0x14, 0xe3, 0x13, 0x8b, 0xf3, 0x37, 0x99, 0x1d, 0x99, 0xaf, 0x29, 0x58, 0x91, 0xac, 0x34,
	0xdb, 0xce, 0xe1, 0x61, 0xf3, 0x27, 0x14, 0xd6, 0x1a, 0xaf, 0x49, 0x0c, 0x24, 0xf1, 0x91, 0x6c,
	0xb7, 0xe5, 0xb8, 0xce, 0xfe, 0xeb, 0x3a, 0x09, 0x27, 0x14, 0xc7, 0x82, 0xb6, 0xb3, 0xeb, 0x12,
	0xf1, 0x02, 0x7e, 0x45, 0xa2, 0x5d, 0xdb, 0x6b, 0xec, 0x33, 0x51, 0x1e, 0x17, 0xd1, 0x6c, 0x53,
	0x67, 0x8b, 0x18, 0x74, 0xb3, 0xdd, 0x38, 0x3a, 0x6a, 0xd5, 0xc9, 0xc6, 0x24, 0x8b, 0x27, 0x93,
	0x3b, 0xfb, 0xd5, 0x7a, 0x93, 0xcc, 0x5e, 0x08, 0x5f, 0x1e, 0x3a, 0x3f, 0x91, 0x41, 0x31, 0xf4,
	0x5f, 0x3d, 0xd8, 0x7f, 0xd9, 0x70, 0xf7, 0xda, 0x6e, 0xbd, 0x5a, 0x6f, 0xbc, 0xa9, 0x93, 0xed,
	0x48, 0xbe, 0x51, 0x93, 0x0c, 0x89, 0x16, 0x99, 0xe5, 0x0d, 0xda, 0x92, 0x9d, 0x48, 0x0d, 0xa9,
	0x90, 0xec, 0x3f, 0xaa, 0xc1, 0x0d, 0x51, 0xb8, 0xbc, 0xfd, 0x03, 0x14, 0x22, 0x46, 0x80, 0xc6,
	0xf3, 0x9a, 0xad, 0x9f, 0xec, 0x4c, 0xf2, 0xcc, 0xd7, 0x45, 0xbf, 0x00, 0x91, 0x44, 0xab, 0xdf,
	0xbe, 0x0d, 0xc5, 0x98, 0x6b, 0xc2, 0xc4, 0x39, 0xcc, 0x10, 0xf3, 0xdb, 0xde, 0x3f, 0x70, 0xf7,
	0x9c, 0xa6, 0x91, 0x39, 0x5e, 0xa4, 0xff, 0xeb, 0xff, 0xfd, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0x14, 0xb0, 0x39, 0xf8, 0x2f, 0x00, 0x00,
}
