/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gwpoints.CompanyStatistics', null, global);
goog.exportSymbol('proto.gwpoints.Event', null, global);
goog.exportSymbol('proto.gwpoints.EventBuyGoods', null, global);
goog.exportSymbol('proto.gwpoints.EventBuyGwpoints', null, global);
goog.exportSymbol('proto.gwpoints.EventChangePubkey', null, global);
goog.exportSymbol('proto.gwpoints.EventClear', null, global);
goog.exportSymbol('proto.gwpoints.EventDistributeGwpoints', null, global);
goog.exportSymbol('proto.gwpoints.EventInitPlatform', null, global);
goog.exportSymbol('proto.gwpoints.EventSellGwPoints', null, global);
goog.exportSymbol('proto.gwpoints.EventSetCompanyExchangeRate', null, global);
goog.exportSymbol('proto.gwpoints.EventSyncPoints', null, global);
goog.exportSymbol('proto.gwpoints.EventUserCreate', null, global);
goog.exportSymbol('proto.gwpoints.MessageType', null, global);
goog.exportSymbol('proto.gwpoints.Order', null, global);
goog.exportSymbol('proto.gwpoints.Platform', null, global);
goog.exportSymbol('proto.gwpoints.Receipt', null, global);
goog.exportSymbol('proto.gwpoints.Request', null, global);
goog.exportSymbol('proto.gwpoints.RequestBuyGoods', null, global);
goog.exportSymbol('proto.gwpoints.RequestBuyGwpoints', null, global);
goog.exportSymbol('proto.gwpoints.RequestChangePubkey', null, global);
goog.exportSymbol('proto.gwpoints.RequestClear', null, global);
goog.exportSymbol('proto.gwpoints.RequestDistributeGwpoints', null, global);
goog.exportSymbol('proto.gwpoints.RequestInitPlatform', null, global);
goog.exportSymbol('proto.gwpoints.RequestSellGwPoints', null, global);
goog.exportSymbol('proto.gwpoints.RequestSetCompanyExchangeRate', null, global);
goog.exportSymbol('proto.gwpoints.RequestSyncPoints', null, global);
goog.exportSymbol('proto.gwpoints.RequestUserCreate', null, global);
goog.exportSymbol('proto.gwpoints.Response', null, global);
goog.exportSymbol('proto.gwpoints.ResponseBuyGoods', null, global);
goog.exportSymbol('proto.gwpoints.ResponseBuyGwpoints', null, global);
goog.exportSymbol('proto.gwpoints.ResponseChangePubkey', null, global);
goog.exportSymbol('proto.gwpoints.ResponseClear', null, global);
goog.exportSymbol('proto.gwpoints.ResponseDistributeGwpoints', null, global);
goog.exportSymbol('proto.gwpoints.ResponseException', null, global);
goog.exportSymbol('proto.gwpoints.ResponseInitPlatform', null, global);
goog.exportSymbol('proto.gwpoints.ResponseOK', null, global);
goog.exportSymbol('proto.gwpoints.ResponseSellGwPoints', null, global);
goog.exportSymbol('proto.gwpoints.ResponseSetCompanyExchangeRate', null, global);
goog.exportSymbol('proto.gwpoints.ResponseSyncPoints', null, global);
goog.exportSymbol('proto.gwpoints.ResponseUserCreate', null, global);
goog.exportSymbol('proto.gwpoints.User', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.Order.displayName = 'proto.gwpoints.Order';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.Order} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    num: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.Order}
 */
proto.gwpoints.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.Order;
  return proto.gwpoints.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.Order}
 */
proto.gwpoints.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.Order} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Order.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Order.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getNum();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gwpoints.Order.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gwpoints.Order.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.gwpoints.Order.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gwpoints.Order.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 num = 3;
 * @return {number}
 */
proto.gwpoints.Order.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gwpoints.Order.prototype.setNum = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gwpoints.User.repeatedFields_, null);
};
goog.inherits(proto.gwpoints.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.User.displayName = 'proto.gwpoints.User';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gwpoints.User.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.User.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.User} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64(),
    gwpoints: jspb.Message.getFieldWithDefault(msg, 2, 0),
    info: msg.getInfo_asB64(),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.gwpoints.Order.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.User}
 */
proto.gwpoints.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.User;
  return proto.gwpoints.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.User}
 */
proto.gwpoints.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    case 4:
      var value = new proto.gwpoints.Order;
      reader.readMessage(value,proto.gwpoints.Order.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.User} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.User.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.User.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = this.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gwpoints.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.User.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gwpoints.User.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.User.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.User.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 gwPoints = 2;
 * @return {number}
 */
proto.gwpoints.User.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gwpoints.User.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes info = 3;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.User.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes info = 3;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gwpoints.User.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gwpoints.User.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.User.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated Order orders = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.gwpoints.Order>}
 */
proto.gwpoints.User.prototype.getOrdersList = function() {
  return /** @type{!Array.<!proto.gwpoints.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gwpoints.Order, 4));
};


/** @param {!Array.<!proto.gwpoints.Order>} value */
proto.gwpoints.User.prototype.setOrdersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gwpoints.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gwpoints.Order}
 */
proto.gwpoints.User.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gwpoints.Order, opt_index);
};


proto.gwpoints.User.prototype.clearOrdersList = function() {
  this.setOrdersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.CompanyStatistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.CompanyStatistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.CompanyStatistics.displayName = 'proto.gwpoints.CompanyStatistics';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.CompanyStatistics.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.CompanyStatistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.CompanyStatistics} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.CompanyStatistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    companynum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gwnum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    companypoints: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pb_in: jspb.Message.getFieldWithDefault(msg, 5, 0),
    out: jspb.Message.getFieldWithDefault(msg, 6, 0),
    gwpoints: jspb.Message.getFieldWithDefault(msg, 7, 0),
    info: msg.getInfo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.CompanyStatistics}
 */
proto.gwpoints.CompanyStatistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.CompanyStatistics;
  return proto.gwpoints.CompanyStatistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.CompanyStatistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.CompanyStatistics}
 */
proto.gwpoints.CompanyStatistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanynum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGwnum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanypoints(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIn(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOut(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.CompanyStatistics} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.CompanyStatistics.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.CompanyStatistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.CompanyStatistics.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getCompanynum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getGwnum();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getCompanypoints();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getIn();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = this.getOut();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.gwpoints.CompanyStatistics.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.CompanyStatistics.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 companyNum = 2;
 * @return {number}
 */
proto.gwpoints.CompanyStatistics.prototype.getCompanynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gwpoints.CompanyStatistics.prototype.setCompanynum = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 gwNum = 3;
 * @return {number}
 */
proto.gwpoints.CompanyStatistics.prototype.getGwnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gwpoints.CompanyStatistics.prototype.setGwnum = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 companyPoints = 4;
 * @return {number}
 */
proto.gwpoints.CompanyStatistics.prototype.getCompanypoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gwpoints.CompanyStatistics.prototype.setCompanypoints = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int64 in = 5;
 * @return {number}
 */
proto.gwpoints.CompanyStatistics.prototype.getIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.gwpoints.CompanyStatistics.prototype.setIn = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 out = 6;
 * @return {number}
 */
proto.gwpoints.CompanyStatistics.prototype.getOut = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.gwpoints.CompanyStatistics.prototype.setOut = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int64 gwPoints = 7;
 * @return {number}
 */
proto.gwpoints.CompanyStatistics.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.gwpoints.CompanyStatistics.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional bytes info = 8;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.CompanyStatistics.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes info = 8;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gwpoints.CompanyStatistics.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gwpoints.CompanyStatistics.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.CompanyStatistics.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.Platform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gwpoints.Platform.repeatedFields_, null);
};
goog.inherits(proto.gwpoints.Platform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.Platform.displayName = 'proto.gwpoints.Platform';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gwpoints.Platform.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.Platform.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.Platform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.Platform} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.Platform.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64(),
    companystatisticsList: jspb.Message.toObjectList(msg.getCompanystatisticsList(),
    proto.gwpoints.CompanyStatistics.toObject, includeInstance),
    info: msg.getInfo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.Platform}
 */
proto.gwpoints.Platform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.Platform;
  return proto.gwpoints.Platform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.Platform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.Platform}
 */
proto.gwpoints.Platform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 2:
      var value = new proto.gwpoints.CompanyStatistics;
      reader.readMessage(value,proto.gwpoints.CompanyStatistics.deserializeBinaryFromReader);
      msg.addCompanystatistics(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.Platform} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Platform.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.Platform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Platform.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getCompanystatisticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gwpoints.CompanyStatistics.serializeBinaryToWriter
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.Platform.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gwpoints.Platform.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.Platform.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.Platform.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated CompanyStatistics companyStatistics = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.gwpoints.CompanyStatistics>}
 */
proto.gwpoints.Platform.prototype.getCompanystatisticsList = function() {
  return /** @type{!Array.<!proto.gwpoints.CompanyStatistics>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gwpoints.CompanyStatistics, 2));
};


/** @param {!Array.<!proto.gwpoints.CompanyStatistics>} value */
proto.gwpoints.Platform.prototype.setCompanystatisticsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gwpoints.CompanyStatistics=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gwpoints.CompanyStatistics}
 */
proto.gwpoints.Platform.prototype.addCompanystatistics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gwpoints.CompanyStatistics, opt_index);
};


proto.gwpoints.Platform.prototype.clearCompanystatisticsList = function() {
  this.setCompanystatisticsList([]);
};


/**
 * optional bytes info = 3;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.Platform.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes info = 3;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gwpoints.Platform.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gwpoints.Platform.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.Platform.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gwpoints.Request.oneofGroups_);
};
goog.inherits(proto.gwpoints.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.Request.displayName = 'proto.gwpoints.Request';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gwpoints.Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.gwpoints.Request.ValueCase = {
  VALUE_NOT_SET: 0,
  INITPLATFORM: 1,
  USERCREATE: 2,
  CHANGEPUBKEY: 3,
  DISTRIBUTEGWPOINTS: 4,
  SETCOMPANYEXCHANGERATE: 5,
  BUYGWPOINTS: 6,
  SELLGWPOINTS: 7,
  BUYGOODS: 8,
  CLEAR: 9,
  SYNCPOINTS: 10
};

/**
 * @return {proto.gwpoints.Request.ValueCase}
 */
proto.gwpoints.Request.prototype.getValueCase = function() {
  return /** @type {proto.gwpoints.Request.ValueCase} */(jspb.Message.computeOneofCase(this, proto.gwpoints.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.Request} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    initplatform: (f = msg.getInitplatform()) && proto.gwpoints.RequestInitPlatform.toObject(includeInstance, f),
    usercreate: (f = msg.getUsercreate()) && proto.gwpoints.RequestUserCreate.toObject(includeInstance, f),
    changepubkey: (f = msg.getChangepubkey()) && proto.gwpoints.RequestChangePubkey.toObject(includeInstance, f),
    distributegwpoints: (f = msg.getDistributegwpoints()) && proto.gwpoints.RequestDistributeGwpoints.toObject(includeInstance, f),
    setcompanyexchangerate: (f = msg.getSetcompanyexchangerate()) && proto.gwpoints.RequestSetCompanyExchangeRate.toObject(includeInstance, f),
    buygwpoints: (f = msg.getBuygwpoints()) && proto.gwpoints.RequestBuyGwpoints.toObject(includeInstance, f),
    sellgwpoints: (f = msg.getSellgwpoints()) && proto.gwpoints.RequestSellGwPoints.toObject(includeInstance, f),
    buygoods: (f = msg.getBuygoods()) && proto.gwpoints.RequestBuyGoods.toObject(includeInstance, f),
    clear: (f = msg.getClear()) && proto.gwpoints.RequestClear.toObject(includeInstance, f),
    syncpoints: (f = msg.getSyncpoints()) && proto.gwpoints.RequestSyncPoints.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 11, 0),
    instructionid: jspb.Message.getFieldWithDefault(msg, 12, 0),
    pubkey: msg.getPubkey_asB64(),
    sign: msg.getSign_asB64(),
    actionid: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.Request}
 */
proto.gwpoints.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.Request;
  return proto.gwpoints.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.Request}
 */
proto.gwpoints.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gwpoints.RequestInitPlatform;
      reader.readMessage(value,proto.gwpoints.RequestInitPlatform.deserializeBinaryFromReader);
      msg.setInitplatform(value);
      break;
    case 2:
      var value = new proto.gwpoints.RequestUserCreate;
      reader.readMessage(value,proto.gwpoints.RequestUserCreate.deserializeBinaryFromReader);
      msg.setUsercreate(value);
      break;
    case 3:
      var value = new proto.gwpoints.RequestChangePubkey;
      reader.readMessage(value,proto.gwpoints.RequestChangePubkey.deserializeBinaryFromReader);
      msg.setChangepubkey(value);
      break;
    case 4:
      var value = new proto.gwpoints.RequestDistributeGwpoints;
      reader.readMessage(value,proto.gwpoints.RequestDistributeGwpoints.deserializeBinaryFromReader);
      msg.setDistributegwpoints(value);
      break;
    case 5:
      var value = new proto.gwpoints.RequestSetCompanyExchangeRate;
      reader.readMessage(value,proto.gwpoints.RequestSetCompanyExchangeRate.deserializeBinaryFromReader);
      msg.setSetcompanyexchangerate(value);
      break;
    case 6:
      var value = new proto.gwpoints.RequestBuyGwpoints;
      reader.readMessage(value,proto.gwpoints.RequestBuyGwpoints.deserializeBinaryFromReader);
      msg.setBuygwpoints(value);
      break;
    case 7:
      var value = new proto.gwpoints.RequestSellGwPoints;
      reader.readMessage(value,proto.gwpoints.RequestSellGwPoints.deserializeBinaryFromReader);
      msg.setSellgwpoints(value);
      break;
    case 8:
      var value = new proto.gwpoints.RequestBuyGoods;
      reader.readMessage(value,proto.gwpoints.RequestBuyGoods.deserializeBinaryFromReader);
      msg.setBuygoods(value);
      break;
    case 9:
      var value = new proto.gwpoints.RequestClear;
      reader.readMessage(value,proto.gwpoints.RequestClear.deserializeBinaryFromReader);
      msg.setClear(value);
      break;
    case 10:
      var value = new proto.gwpoints.RequestSyncPoints;
      reader.readMessage(value,proto.gwpoints.RequestSyncPoints.deserializeBinaryFromReader);
      msg.setSyncpoints(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUid(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSign(value);
      break;
    case 15:
      var value = /** @type {!proto.gwpoints.MessageType} */ (reader.readEnum());
      msg.setActionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.Request} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Request.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Request.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInitplatform();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gwpoints.RequestInitPlatform.serializeBinaryToWriter
    );
  }
  f = this.getUsercreate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.RequestUserCreate.serializeBinaryToWriter
    );
  }
  f = this.getChangepubkey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gwpoints.RequestChangePubkey.serializeBinaryToWriter
    );
  }
  f = this.getDistributegwpoints();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gwpoints.RequestDistributeGwpoints.serializeBinaryToWriter
    );
  }
  f = this.getSetcompanyexchangerate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gwpoints.RequestSetCompanyExchangeRate.serializeBinaryToWriter
    );
  }
  f = this.getBuygwpoints();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gwpoints.RequestBuyGwpoints.serializeBinaryToWriter
    );
  }
  f = this.getSellgwpoints();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gwpoints.RequestSellGwPoints.serializeBinaryToWriter
    );
  }
  f = this.getBuygoods();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gwpoints.RequestBuyGoods.serializeBinaryToWriter
    );
  }
  f = this.getClear();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gwpoints.RequestClear.serializeBinaryToWriter
    );
  }
  f = this.getSyncpoints();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gwpoints.RequestSyncPoints.serializeBinaryToWriter
    );
  }
  f = this.getUid();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = this.getSign_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = this.getActionid();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
};


/**
 * optional RequestInitPlatform initPlatform = 1;
 * @return {?proto.gwpoints.RequestInitPlatform}
 */
proto.gwpoints.Request.prototype.getInitplatform = function() {
  return /** @type{?proto.gwpoints.RequestInitPlatform} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestInitPlatform, 1));
};


/** @param {?proto.gwpoints.RequestInitPlatform|undefined} value */
proto.gwpoints.Request.prototype.setInitplatform = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearInitplatform = function() {
  this.setInitplatform(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasInitplatform = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequestUserCreate userCreate = 2;
 * @return {?proto.gwpoints.RequestUserCreate}
 */
proto.gwpoints.Request.prototype.getUsercreate = function() {
  return /** @type{?proto.gwpoints.RequestUserCreate} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestUserCreate, 2));
};


/** @param {?proto.gwpoints.RequestUserCreate|undefined} value */
proto.gwpoints.Request.prototype.setUsercreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearUsercreate = function() {
  this.setUsercreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasUsercreate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequestChangePubkey changePubkey = 3;
 * @return {?proto.gwpoints.RequestChangePubkey}
 */
proto.gwpoints.Request.prototype.getChangepubkey = function() {
  return /** @type{?proto.gwpoints.RequestChangePubkey} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestChangePubkey, 3));
};


/** @param {?proto.gwpoints.RequestChangePubkey|undefined} value */
proto.gwpoints.Request.prototype.setChangepubkey = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearChangepubkey = function() {
  this.setChangepubkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasChangepubkey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RequestDistributeGwpoints distributeGwpoints = 4;
 * @return {?proto.gwpoints.RequestDistributeGwpoints}
 */
proto.gwpoints.Request.prototype.getDistributegwpoints = function() {
  return /** @type{?proto.gwpoints.RequestDistributeGwpoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestDistributeGwpoints, 4));
};


/** @param {?proto.gwpoints.RequestDistributeGwpoints|undefined} value */
proto.gwpoints.Request.prototype.setDistributegwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearDistributegwpoints = function() {
  this.setDistributegwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasDistributegwpoints = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RequestSetCompanyExchangeRate setCompanyExchangeRate = 5;
 * @return {?proto.gwpoints.RequestSetCompanyExchangeRate}
 */
proto.gwpoints.Request.prototype.getSetcompanyexchangerate = function() {
  return /** @type{?proto.gwpoints.RequestSetCompanyExchangeRate} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestSetCompanyExchangeRate, 5));
};


/** @param {?proto.gwpoints.RequestSetCompanyExchangeRate|undefined} value */
proto.gwpoints.Request.prototype.setSetcompanyexchangerate = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearSetcompanyexchangerate = function() {
  this.setSetcompanyexchangerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasSetcompanyexchangerate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RequestBuyGwpoints buyGwpoints = 6;
 * @return {?proto.gwpoints.RequestBuyGwpoints}
 */
proto.gwpoints.Request.prototype.getBuygwpoints = function() {
  return /** @type{?proto.gwpoints.RequestBuyGwpoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestBuyGwpoints, 6));
};


/** @param {?proto.gwpoints.RequestBuyGwpoints|undefined} value */
proto.gwpoints.Request.prototype.setBuygwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearBuygwpoints = function() {
  this.setBuygwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasBuygwpoints = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RequestSellGwPoints sellGwPoints = 7;
 * @return {?proto.gwpoints.RequestSellGwPoints}
 */
proto.gwpoints.Request.prototype.getSellgwpoints = function() {
  return /** @type{?proto.gwpoints.RequestSellGwPoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestSellGwPoints, 7));
};


/** @param {?proto.gwpoints.RequestSellGwPoints|undefined} value */
proto.gwpoints.Request.prototype.setSellgwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearSellgwpoints = function() {
  this.setSellgwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasSellgwpoints = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RequestBuyGoods buyGoods = 8;
 * @return {?proto.gwpoints.RequestBuyGoods}
 */
proto.gwpoints.Request.prototype.getBuygoods = function() {
  return /** @type{?proto.gwpoints.RequestBuyGoods} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestBuyGoods, 8));
};


/** @param {?proto.gwpoints.RequestBuyGoods|undefined} value */
proto.gwpoints.Request.prototype.setBuygoods = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearBuygoods = function() {
  this.setBuygoods(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasBuygoods = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RequestClear clear = 9;
 * @return {?proto.gwpoints.RequestClear}
 */
proto.gwpoints.Request.prototype.getClear = function() {
  return /** @type{?proto.gwpoints.RequestClear} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestClear, 9));
};


/** @param {?proto.gwpoints.RequestClear|undefined} value */
proto.gwpoints.Request.prototype.setClear = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearClear = function() {
  this.setClear(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasClear = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional RequestSyncPoints syncPoints = 10;
 * @return {?proto.gwpoints.RequestSyncPoints}
 */
proto.gwpoints.Request.prototype.getSyncpoints = function() {
  return /** @type{?proto.gwpoints.RequestSyncPoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.RequestSyncPoints, 10));
};


/** @param {?proto.gwpoints.RequestSyncPoints|undefined} value */
proto.gwpoints.Request.prototype.setSyncpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gwpoints.Request.oneofGroups_[0], value);
};


proto.gwpoints.Request.prototype.clearSyncpoints = function() {
  this.setSyncpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Request.prototype.hasSyncpoints = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 uid = 11;
 * @return {number}
 */
proto.gwpoints.Request.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.gwpoints.Request.prototype.setUid = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional int64 instructionId = 12;
 * @return {number}
 */
proto.gwpoints.Request.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.gwpoints.Request.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional bytes pubkey = 13;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.Request.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes pubkey = 13;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gwpoints.Request.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.Request.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.Request.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional bytes sign = 14;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.Request.prototype.getSign = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes sign = 14;
 * This is a type-conversion wrapper around `getSign()`
 * @return {string}
 */
proto.gwpoints.Request.prototype.getSign_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSign()));
};


/**
 * optional bytes sign = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSign()`
 * @return {!Uint8Array}
 */
proto.gwpoints.Request.prototype.getSign_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSign()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.Request.prototype.setSign = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional MessageType actionId = 15;
 * @return {!proto.gwpoints.MessageType}
 */
proto.gwpoints.Request.prototype.getActionid = function() {
  return /** @type {!proto.gwpoints.MessageType} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {!proto.gwpoints.MessageType} value */
proto.gwpoints.Request.prototype.setActionid = function(value) {
  jspb.Message.setField(this, 15, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestInitPlatform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestInitPlatform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestInitPlatform.displayName = 'proto.gwpoints.RequestInitPlatform';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestInitPlatform.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestInitPlatform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestInitPlatform} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestInitPlatform.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64(),
    info: msg.getInfo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestInitPlatform}
 */
proto.gwpoints.RequestInitPlatform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestInitPlatform;
  return proto.gwpoints.RequestInitPlatform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestInitPlatform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestInitPlatform}
 */
proto.gwpoints.RequestInitPlatform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestInitPlatform} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestInitPlatform.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestInitPlatform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestInitPlatform.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestInitPlatform.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gwpoints.RequestInitPlatform.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestInitPlatform.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestInitPlatform.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes info = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestInitPlatform.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes info = 2;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gwpoints.RequestInitPlatform.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestInitPlatform.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestInitPlatform.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestUserCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestUserCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestUserCreate.displayName = 'proto.gwpoints.RequestUserCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestUserCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestUserCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestUserCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestUserCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    useruid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userpubkey: msg.getUserpubkey_asB64(),
    info: msg.getInfo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestUserCreate}
 */
proto.gwpoints.RequestUserCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestUserCreate;
  return proto.gwpoints.RequestUserCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestUserCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestUserCreate}
 */
proto.gwpoints.RequestUserCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseruid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUserpubkey(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestUserCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestUserCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestUserCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestUserCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUseruid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getUserpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional int64 userUid = 1;
 * @return {number}
 */
proto.gwpoints.RequestUserCreate.prototype.getUseruid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestUserCreate.prototype.setUseruid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes userPubkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestUserCreate.prototype.getUserpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes userPubkey = 2;
 * This is a type-conversion wrapper around `getUserpubkey()`
 * @return {string}
 */
proto.gwpoints.RequestUserCreate.prototype.getUserpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUserpubkey()));
};


/**
 * optional bytes userPubkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUserpubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestUserCreate.prototype.getUserpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUserpubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestUserCreate.prototype.setUserpubkey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes info = 3;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestUserCreate.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes info = 3;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gwpoints.RequestUserCreate.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestUserCreate.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestUserCreate.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestChangePubkey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestChangePubkey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestChangePubkey.displayName = 'proto.gwpoints.RequestChangePubkey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestChangePubkey.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestChangePubkey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestChangePubkey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestChangePubkey.toObject = function(includeInstance, msg) {
  var f, obj = {
    newpubkey: msg.getNewpubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestChangePubkey}
 */
proto.gwpoints.RequestChangePubkey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestChangePubkey;
  return proto.gwpoints.RequestChangePubkey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestChangePubkey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestChangePubkey}
 */
proto.gwpoints.RequestChangePubkey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNewpubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestChangePubkey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestChangePubkey.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestChangePubkey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestChangePubkey.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getNewpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes newPubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestChangePubkey.prototype.getNewpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes newPubkey = 1;
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {string}
 */
proto.gwpoints.RequestChangePubkey.prototype.getNewpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNewpubkey()));
};


/**
 * optional bytes newPubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestChangePubkey.prototype.getNewpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNewpubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestChangePubkey.prototype.setNewpubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestDistributeGwpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestDistributeGwpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestDistributeGwpoints.displayName = 'proto.gwpoints.RequestDistributeGwpoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestDistributeGwpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestDistributeGwpoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestDistributeGwpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    useruid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userpubkey: msg.getUserpubkey_asB64(),
    gwpoints: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestDistributeGwpoints}
 */
proto.gwpoints.RequestDistributeGwpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestDistributeGwpoints;
  return proto.gwpoints.RequestDistributeGwpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestDistributeGwpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestDistributeGwpoints}
 */
proto.gwpoints.RequestDistributeGwpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseruid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUserpubkey(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestDistributeGwpoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestDistributeGwpoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUseruid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getUserpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 userUid = 1;
 * @return {number}
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.getUseruid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestDistributeGwpoints.prototype.setUseruid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes userPubkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.getUserpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes userPubkey = 2;
 * This is a type-conversion wrapper around `getUserpubkey()`
 * @return {string}
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.getUserpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUserpubkey()));
};


/**
 * optional bytes userPubkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUserpubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.getUserpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUserpubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestDistributeGwpoints.prototype.setUserpubkey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 gwPoints = 3;
 * @return {number}
 */
proto.gwpoints.RequestDistributeGwpoints.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gwpoints.RequestDistributeGwpoints.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestSetCompanyExchangeRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestSetCompanyExchangeRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestSetCompanyExchangeRate.displayName = 'proto.gwpoints.RequestSetCompanyExchangeRate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestSetCompanyExchangeRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestSetCompanyExchangeRate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    companynum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gwnum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    info: msg.getInfo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestSetCompanyExchangeRate}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestSetCompanyExchangeRate;
  return proto.gwpoints.RequestSetCompanyExchangeRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestSetCompanyExchangeRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestSetCompanyExchangeRate}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanynum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGwnum(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestSetCompanyExchangeRate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestSetCompanyExchangeRate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getCompanynum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getGwnum();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 companyNum = 2;
 * @return {number}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.getCompanynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.setCompanynum = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 gwNum = 3;
 * @return {number}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.getGwnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.setGwnum = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bytes info = 4;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes info = 4;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestSetCompanyExchangeRate.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestBuyGwpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestBuyGwpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestBuyGwpoints.displayName = 'proto.gwpoints.RequestBuyGwpoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestBuyGwpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestBuyGwpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestBuyGwpoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestBuyGwpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    companypoints: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestBuyGwpoints}
 */
proto.gwpoints.RequestBuyGwpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestBuyGwpoints;
  return proto.gwpoints.RequestBuyGwpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestBuyGwpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestBuyGwpoints}
 */
proto.gwpoints.RequestBuyGwpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanyid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanypoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestBuyGwpoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestBuyGwpoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestBuyGwpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestBuyGwpoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCompanyid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getCompanypoints();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 companyId = 1;
 * @return {number}
 */
proto.gwpoints.RequestBuyGwpoints.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestBuyGwpoints.prototype.setCompanyid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 companyPoints = 2;
 * @return {number}
 */
proto.gwpoints.RequestBuyGwpoints.prototype.getCompanypoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gwpoints.RequestBuyGwpoints.prototype.setCompanypoints = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestSellGwPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestSellGwPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestSellGwPoints.displayName = 'proto.gwpoints.RequestSellGwPoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestSellGwPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestSellGwPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestSellGwPoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestSellGwPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    companypoints: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestSellGwPoints}
 */
proto.gwpoints.RequestSellGwPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestSellGwPoints;
  return proto.gwpoints.RequestSellGwPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestSellGwPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestSellGwPoints}
 */
proto.gwpoints.RequestSellGwPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanyid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanypoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestSellGwPoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestSellGwPoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestSellGwPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestSellGwPoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCompanyid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getCompanypoints();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 companyId = 1;
 * @return {number}
 */
proto.gwpoints.RequestSellGwPoints.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSellGwPoints.prototype.setCompanyid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 companyPoints = 2;
 * @return {number}
 */
proto.gwpoints.RequestSellGwPoints.prototype.getCompanypoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSellGwPoints.prototype.setCompanypoints = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestBuyGoods = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestBuyGoods, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestBuyGoods.displayName = 'proto.gwpoints.RequestBuyGoods';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestBuyGoods.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestBuyGoods.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestBuyGoods} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestBuyGoods.toObject = function(includeInstance, msg) {
  var f, obj = {
    gwpoints: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    productnum: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestBuyGoods}
 */
proto.gwpoints.RequestBuyGoods.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestBuyGoods;
  return proto.gwpoints.RequestBuyGoods.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestBuyGoods} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestBuyGoods}
 */
proto.gwpoints.RequestBuyGoods.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProductnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestBuyGoods} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestBuyGoods.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestBuyGoods.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestBuyGoods.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getProductname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getProductnum();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 gwPoints = 1;
 * @return {number}
 */
proto.gwpoints.RequestBuyGoods.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestBuyGoods.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string orderId = 2;
 * @return {string}
 */
proto.gwpoints.RequestBuyGoods.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gwpoints.RequestBuyGoods.prototype.setOrderid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string productName = 3;
 * @return {string}
 */
proto.gwpoints.RequestBuyGoods.prototype.getProductname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gwpoints.RequestBuyGoods.prototype.setProductname = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 productNum = 4;
 * @return {number}
 */
proto.gwpoints.RequestBuyGoods.prototype.getProductnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gwpoints.RequestBuyGoods.prototype.setProductnum = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestClear = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestClear, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestClear.displayName = 'proto.gwpoints.RequestClear';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestClear.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestClear.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestClear} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestClear.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestClear}
 */
proto.gwpoints.RequestClear.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestClear;
  return proto.gwpoints.RequestClear.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestClear} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestClear}
 */
proto.gwpoints.RequestClear.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanyid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestClear} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestClear.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestClear.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestClear.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCompanyid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 companyId = 1;
 * @return {number}
 */
proto.gwpoints.RequestClear.prototype.getCompanyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestClear.prototype.setCompanyid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.RequestSyncPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.RequestSyncPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.RequestSyncPoints.displayName = 'proto.gwpoints.RequestSyncPoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.RequestSyncPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.RequestSyncPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.RequestSyncPoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.RequestSyncPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    useruid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userpubkey: msg.getUserpubkey_asB64(),
    gwpoints: jspb.Message.getFieldWithDefault(msg, 3, 0),
    added: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.RequestSyncPoints}
 */
proto.gwpoints.RequestSyncPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.RequestSyncPoints;
  return proto.gwpoints.RequestSyncPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.RequestSyncPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.RequestSyncPoints}
 */
proto.gwpoints.RequestSyncPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseruid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUserpubkey(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.RequestSyncPoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestSyncPoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestSyncPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.RequestSyncPoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUseruid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getUserpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getAdded();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 userUid = 1;
 * @return {number}
 */
proto.gwpoints.RequestSyncPoints.prototype.getUseruid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSyncPoints.prototype.setUseruid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes userPubkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.RequestSyncPoints.prototype.getUserpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes userPubkey = 2;
 * This is a type-conversion wrapper around `getUserpubkey()`
 * @return {string}
 */
proto.gwpoints.RequestSyncPoints.prototype.getUserpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUserpubkey()));
};


/**
 * optional bytes userPubkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUserpubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.RequestSyncPoints.prototype.getUserpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUserpubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.RequestSyncPoints.prototype.setUserpubkey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 gwPoints = 3;
 * @return {number}
 */
proto.gwpoints.RequestSyncPoints.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSyncPoints.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 added = 4;
 * @return {number}
 */
proto.gwpoints.RequestSyncPoints.prototype.getAdded = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gwpoints.RequestSyncPoints.prototype.setAdded = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gwpoints.Response.oneofGroups_);
};
goog.inherits(proto.gwpoints.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.Response.displayName = 'proto.gwpoints.Response';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gwpoints.Response.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.gwpoints.Response.ValueCase = {
  VALUE_NOT_SET: 0,
  INITPLATFORM: 1,
  USERCREATE: 2,
  CHANGEPUBKEY: 3,
  DISTRIBUTEGWPOINTS: 4,
  SETCOMPANYEXCHANGERATE: 5,
  BUYGWPOINTS: 6,
  SELLGWPOINTS: 7,
  BUYGOODS: 8,
  CLEAR: 9,
  SYNCPOINTS: 10,
  OK: 11,
  EXCEPTION: 12
};

/**
 * @return {proto.gwpoints.Response.ValueCase}
 */
proto.gwpoints.Response.prototype.getValueCase = function() {
  return /** @type {proto.gwpoints.Response.ValueCase} */(jspb.Message.computeOneofCase(this, proto.gwpoints.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    initplatform: (f = msg.getInitplatform()) && proto.gwpoints.ResponseInitPlatform.toObject(includeInstance, f),
    usercreate: (f = msg.getUsercreate()) && proto.gwpoints.ResponseUserCreate.toObject(includeInstance, f),
    changepubkey: (f = msg.getChangepubkey()) && proto.gwpoints.ResponseChangePubkey.toObject(includeInstance, f),
    distributegwpoints: (f = msg.getDistributegwpoints()) && proto.gwpoints.ResponseDistributeGwpoints.toObject(includeInstance, f),
    setcompanyexchangerate: (f = msg.getSetcompanyexchangerate()) && proto.gwpoints.ResponseSetCompanyExchangeRate.toObject(includeInstance, f),
    buygwpoints: (f = msg.getBuygwpoints()) && proto.gwpoints.ResponseBuyGwpoints.toObject(includeInstance, f),
    sellgwpoints: (f = msg.getSellgwpoints()) && proto.gwpoints.ResponseSellGwPoints.toObject(includeInstance, f),
    buygoods: (f = msg.getBuygoods()) && proto.gwpoints.ResponseBuyGoods.toObject(includeInstance, f),
    clear: (f = msg.getClear()) && proto.gwpoints.ResponseClear.toObject(includeInstance, f),
    syncpoints: (f = msg.getSyncpoints()) && proto.gwpoints.ResponseSyncPoints.toObject(includeInstance, f),
    ok: (f = msg.getOk()) && proto.gwpoints.ResponseOK.toObject(includeInstance, f),
    exception: (f = msg.getException()) && proto.gwpoints.ResponseException.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.Response}
 */
proto.gwpoints.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.Response;
  return proto.gwpoints.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.Response}
 */
proto.gwpoints.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gwpoints.ResponseInitPlatform;
      reader.readMessage(value,proto.gwpoints.ResponseInitPlatform.deserializeBinaryFromReader);
      msg.setInitplatform(value);
      break;
    case 2:
      var value = new proto.gwpoints.ResponseUserCreate;
      reader.readMessage(value,proto.gwpoints.ResponseUserCreate.deserializeBinaryFromReader);
      msg.setUsercreate(value);
      break;
    case 3:
      var value = new proto.gwpoints.ResponseChangePubkey;
      reader.readMessage(value,proto.gwpoints.ResponseChangePubkey.deserializeBinaryFromReader);
      msg.setChangepubkey(value);
      break;
    case 4:
      var value = new proto.gwpoints.ResponseDistributeGwpoints;
      reader.readMessage(value,proto.gwpoints.ResponseDistributeGwpoints.deserializeBinaryFromReader);
      msg.setDistributegwpoints(value);
      break;
    case 5:
      var value = new proto.gwpoints.ResponseSetCompanyExchangeRate;
      reader.readMessage(value,proto.gwpoints.ResponseSetCompanyExchangeRate.deserializeBinaryFromReader);
      msg.setSetcompanyexchangerate(value);
      break;
    case 6:
      var value = new proto.gwpoints.ResponseBuyGwpoints;
      reader.readMessage(value,proto.gwpoints.ResponseBuyGwpoints.deserializeBinaryFromReader);
      msg.setBuygwpoints(value);
      break;
    case 7:
      var value = new proto.gwpoints.ResponseSellGwPoints;
      reader.readMessage(value,proto.gwpoints.ResponseSellGwPoints.deserializeBinaryFromReader);
      msg.setSellgwpoints(value);
      break;
    case 8:
      var value = new proto.gwpoints.ResponseBuyGoods;
      reader.readMessage(value,proto.gwpoints.ResponseBuyGoods.deserializeBinaryFromReader);
      msg.setBuygoods(value);
      break;
    case 9:
      var value = new proto.gwpoints.ResponseClear;
      reader.readMessage(value,proto.gwpoints.ResponseClear.deserializeBinaryFromReader);
      msg.setClear(value);
      break;
    case 10:
      var value = new proto.gwpoints.ResponseSyncPoints;
      reader.readMessage(value,proto.gwpoints.ResponseSyncPoints.deserializeBinaryFromReader);
      msg.setSyncpoints(value);
      break;
    case 11:
      var value = new proto.gwpoints.ResponseOK;
      reader.readMessage(value,proto.gwpoints.ResponseOK.deserializeBinaryFromReader);
      msg.setOk(value);
      break;
    case 12:
      var value = new proto.gwpoints.ResponseException;
      reader.readMessage(value,proto.gwpoints.ResponseException.deserializeBinaryFromReader);
      msg.setException(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInitplatform();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gwpoints.ResponseInitPlatform.serializeBinaryToWriter
    );
  }
  f = this.getUsercreate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.ResponseUserCreate.serializeBinaryToWriter
    );
  }
  f = this.getChangepubkey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gwpoints.ResponseChangePubkey.serializeBinaryToWriter
    );
  }
  f = this.getDistributegwpoints();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gwpoints.ResponseDistributeGwpoints.serializeBinaryToWriter
    );
  }
  f = this.getSetcompanyexchangerate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gwpoints.ResponseSetCompanyExchangeRate.serializeBinaryToWriter
    );
  }
  f = this.getBuygwpoints();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gwpoints.ResponseBuyGwpoints.serializeBinaryToWriter
    );
  }
  f = this.getSellgwpoints();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gwpoints.ResponseSellGwPoints.serializeBinaryToWriter
    );
  }
  f = this.getBuygoods();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gwpoints.ResponseBuyGoods.serializeBinaryToWriter
    );
  }
  f = this.getClear();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gwpoints.ResponseClear.serializeBinaryToWriter
    );
  }
  f = this.getSyncpoints();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gwpoints.ResponseSyncPoints.serializeBinaryToWriter
    );
  }
  f = this.getOk();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gwpoints.ResponseOK.serializeBinaryToWriter
    );
  }
  f = this.getException();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.gwpoints.ResponseException.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseInitPlatform initPlatform = 1;
 * @return {?proto.gwpoints.ResponseInitPlatform}
 */
proto.gwpoints.Response.prototype.getInitplatform = function() {
  return /** @type{?proto.gwpoints.ResponseInitPlatform} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseInitPlatform, 1));
};


/** @param {?proto.gwpoints.ResponseInitPlatform|undefined} value */
proto.gwpoints.Response.prototype.setInitplatform = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearInitplatform = function() {
  this.setInitplatform(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasInitplatform = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResponseUserCreate userCreate = 2;
 * @return {?proto.gwpoints.ResponseUserCreate}
 */
proto.gwpoints.Response.prototype.getUsercreate = function() {
  return /** @type{?proto.gwpoints.ResponseUserCreate} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseUserCreate, 2));
};


/** @param {?proto.gwpoints.ResponseUserCreate|undefined} value */
proto.gwpoints.Response.prototype.setUsercreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearUsercreate = function() {
  this.setUsercreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasUsercreate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResponseChangePubkey changePubkey = 3;
 * @return {?proto.gwpoints.ResponseChangePubkey}
 */
proto.gwpoints.Response.prototype.getChangepubkey = function() {
  return /** @type{?proto.gwpoints.ResponseChangePubkey} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseChangePubkey, 3));
};


/** @param {?proto.gwpoints.ResponseChangePubkey|undefined} value */
proto.gwpoints.Response.prototype.setChangepubkey = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearChangepubkey = function() {
  this.setChangepubkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasChangepubkey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResponseDistributeGwpoints distributeGwpoints = 4;
 * @return {?proto.gwpoints.ResponseDistributeGwpoints}
 */
proto.gwpoints.Response.prototype.getDistributegwpoints = function() {
  return /** @type{?proto.gwpoints.ResponseDistributeGwpoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseDistributeGwpoints, 4));
};


/** @param {?proto.gwpoints.ResponseDistributeGwpoints|undefined} value */
proto.gwpoints.Response.prototype.setDistributegwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearDistributegwpoints = function() {
  this.setDistributegwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasDistributegwpoints = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ResponseSetCompanyExchangeRate setCompanyExchangeRate = 5;
 * @return {?proto.gwpoints.ResponseSetCompanyExchangeRate}
 */
proto.gwpoints.Response.prototype.getSetcompanyexchangerate = function() {
  return /** @type{?proto.gwpoints.ResponseSetCompanyExchangeRate} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseSetCompanyExchangeRate, 5));
};


/** @param {?proto.gwpoints.ResponseSetCompanyExchangeRate|undefined} value */
proto.gwpoints.Response.prototype.setSetcompanyexchangerate = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearSetcompanyexchangerate = function() {
  this.setSetcompanyexchangerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasSetcompanyexchangerate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ResponseBuyGwpoints buyGwpoints = 6;
 * @return {?proto.gwpoints.ResponseBuyGwpoints}
 */
proto.gwpoints.Response.prototype.getBuygwpoints = function() {
  return /** @type{?proto.gwpoints.ResponseBuyGwpoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseBuyGwpoints, 6));
};


/** @param {?proto.gwpoints.ResponseBuyGwpoints|undefined} value */
proto.gwpoints.Response.prototype.setBuygwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearBuygwpoints = function() {
  this.setBuygwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasBuygwpoints = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ResponseSellGwPoints sellGwPoints = 7;
 * @return {?proto.gwpoints.ResponseSellGwPoints}
 */
proto.gwpoints.Response.prototype.getSellgwpoints = function() {
  return /** @type{?proto.gwpoints.ResponseSellGwPoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseSellGwPoints, 7));
};


/** @param {?proto.gwpoints.ResponseSellGwPoints|undefined} value */
proto.gwpoints.Response.prototype.setSellgwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearSellgwpoints = function() {
  this.setSellgwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasSellgwpoints = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ResponseBuyGoods buyGoods = 8;
 * @return {?proto.gwpoints.ResponseBuyGoods}
 */
proto.gwpoints.Response.prototype.getBuygoods = function() {
  return /** @type{?proto.gwpoints.ResponseBuyGoods} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseBuyGoods, 8));
};


/** @param {?proto.gwpoints.ResponseBuyGoods|undefined} value */
proto.gwpoints.Response.prototype.setBuygoods = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearBuygoods = function() {
  this.setBuygoods(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasBuygoods = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ResponseClear clear = 9;
 * @return {?proto.gwpoints.ResponseClear}
 */
proto.gwpoints.Response.prototype.getClear = function() {
  return /** @type{?proto.gwpoints.ResponseClear} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseClear, 9));
};


/** @param {?proto.gwpoints.ResponseClear|undefined} value */
proto.gwpoints.Response.prototype.setClear = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearClear = function() {
  this.setClear(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasClear = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ResponseSyncPoints syncPoints = 10;
 * @return {?proto.gwpoints.ResponseSyncPoints}
 */
proto.gwpoints.Response.prototype.getSyncpoints = function() {
  return /** @type{?proto.gwpoints.ResponseSyncPoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseSyncPoints, 10));
};


/** @param {?proto.gwpoints.ResponseSyncPoints|undefined} value */
proto.gwpoints.Response.prototype.setSyncpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearSyncpoints = function() {
  this.setSyncpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasSyncpoints = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ResponseOK ok = 11;
 * @return {?proto.gwpoints.ResponseOK}
 */
proto.gwpoints.Response.prototype.getOk = function() {
  return /** @type{?proto.gwpoints.ResponseOK} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseOK, 11));
};


/** @param {?proto.gwpoints.ResponseOK|undefined} value */
proto.gwpoints.Response.prototype.setOk = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearOk = function() {
  this.setOk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasOk = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ResponseException exception = 12;
 * @return {?proto.gwpoints.ResponseException}
 */
proto.gwpoints.Response.prototype.getException = function() {
  return /** @type{?proto.gwpoints.ResponseException} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.ResponseException, 12));
};


/** @param {?proto.gwpoints.ResponseException|undefined} value */
proto.gwpoints.Response.prototype.setException = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.gwpoints.Response.oneofGroups_[0], value);
};


proto.gwpoints.Response.prototype.clearException = function() {
  this.setException(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Response.prototype.hasException = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseException = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseException, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseException.displayName = 'proto.gwpoints.ResponseException';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseException.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseException.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseException} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseException.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseException}
 */
proto.gwpoints.ResponseException.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseException;
  return proto.gwpoints.ResponseException.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseException} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseException}
 */
proto.gwpoints.ResponseException.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseException} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseException.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseException.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseException.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.gwpoints.ResponseException.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gwpoints.ResponseException.prototype.setError = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseOK = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseOK, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseOK.displayName = 'proto.gwpoints.ResponseOK';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseOK.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseOK.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseOK} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseOK.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseOK}
 */
proto.gwpoints.ResponseOK.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseOK;
  return proto.gwpoints.ResponseOK.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseOK} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseOK}
 */
proto.gwpoints.ResponseOK.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseOK} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseOK.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseOK.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseOK.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gwpoints.ResponseOK.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.gwpoints.ResponseOK.prototype.setOk = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.Receipt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.Receipt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.Receipt.displayName = 'proto.gwpoints.Receipt';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.Receipt.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.Receipt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.Receipt} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.Receipt.toObject = function(includeInstance, msg) {
  var f, obj = {
    isok: jspb.Message.getFieldWithDefault(msg, 1, false),
    err: msg.getErr_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.Receipt}
 */
proto.gwpoints.Receipt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.Receipt;
  return proto.gwpoints.Receipt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.Receipt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.Receipt}
 */
proto.gwpoints.Receipt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsok(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.Receipt} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Receipt.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.Receipt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Receipt.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIsok();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = this.getErr_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bool isOk = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gwpoints.Receipt.prototype.getIsok = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.gwpoints.Receipt.prototype.setIsok = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes err = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.Receipt.prototype.getErr = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes err = 2;
 * This is a type-conversion wrapper around `getErr()`
 * @return {string}
 */
proto.gwpoints.Receipt.prototype.getErr_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErr()));
};


/**
 * optional bytes err = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErr()`
 * @return {!Uint8Array}
 */
proto.gwpoints.Receipt.prototype.getErr_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErr()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.Receipt.prototype.setErr = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseInitPlatform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseInitPlatform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseInitPlatform.displayName = 'proto.gwpoints.ResponseInitPlatform';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseInitPlatform.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseInitPlatform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseInitPlatform} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseInitPlatform.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseInitPlatform}
 */
proto.gwpoints.ResponseInitPlatform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseInitPlatform;
  return proto.gwpoints.ResponseInitPlatform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseInitPlatform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseInitPlatform}
 */
proto.gwpoints.ResponseInitPlatform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseInitPlatform} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseInitPlatform.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseInitPlatform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseInitPlatform.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseInitPlatform.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseInitPlatform.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseInitPlatform.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseInitPlatform.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseInitPlatform.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseInitPlatform.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseUserCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseUserCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseUserCreate.displayName = 'proto.gwpoints.ResponseUserCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseUserCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseUserCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseUserCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseUserCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseUserCreate}
 */
proto.gwpoints.ResponseUserCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseUserCreate;
  return proto.gwpoints.ResponseUserCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseUserCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseUserCreate}
 */
proto.gwpoints.ResponseUserCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseUserCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseUserCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseUserCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseUserCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseUserCreate.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseUserCreate.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseUserCreate.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseUserCreate.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseUserCreate.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseUserCreate.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseChangePubkey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseChangePubkey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseChangePubkey.displayName = 'proto.gwpoints.ResponseChangePubkey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseChangePubkey.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseChangePubkey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseChangePubkey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseChangePubkey.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseChangePubkey}
 */
proto.gwpoints.ResponseChangePubkey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseChangePubkey;
  return proto.gwpoints.ResponseChangePubkey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseChangePubkey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseChangePubkey}
 */
proto.gwpoints.ResponseChangePubkey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseChangePubkey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseChangePubkey.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseChangePubkey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseChangePubkey.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseChangePubkey.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseChangePubkey.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseChangePubkey.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseChangePubkey.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseChangePubkey.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseChangePubkey.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseDistributeGwpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseDistributeGwpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseDistributeGwpoints.displayName = 'proto.gwpoints.ResponseDistributeGwpoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseDistributeGwpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseDistributeGwpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseDistributeGwpoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseDistributeGwpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseDistributeGwpoints}
 */
proto.gwpoints.ResponseDistributeGwpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseDistributeGwpoints;
  return proto.gwpoints.ResponseDistributeGwpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseDistributeGwpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseDistributeGwpoints}
 */
proto.gwpoints.ResponseDistributeGwpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseDistributeGwpoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseDistributeGwpoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseDistributeGwpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseDistributeGwpoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseDistributeGwpoints.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseDistributeGwpoints.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseDistributeGwpoints.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseDistributeGwpoints.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseDistributeGwpoints.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseDistributeGwpoints.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseSetCompanyExchangeRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseSetCompanyExchangeRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseSetCompanyExchangeRate.displayName = 'proto.gwpoints.ResponseSetCompanyExchangeRate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseSetCompanyExchangeRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseSetCompanyExchangeRate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseSetCompanyExchangeRate}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseSetCompanyExchangeRate;
  return proto.gwpoints.ResponseSetCompanyExchangeRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseSetCompanyExchangeRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseSetCompanyExchangeRate}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseSetCompanyExchangeRate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseSetCompanyExchangeRate.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseBuyGwpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseBuyGwpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseBuyGwpoints.displayName = 'proto.gwpoints.ResponseBuyGwpoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseBuyGwpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseBuyGwpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseBuyGwpoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseBuyGwpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseBuyGwpoints}
 */
proto.gwpoints.ResponseBuyGwpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseBuyGwpoints;
  return proto.gwpoints.ResponseBuyGwpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseBuyGwpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseBuyGwpoints}
 */
proto.gwpoints.ResponseBuyGwpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseBuyGwpoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseBuyGwpoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseBuyGwpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseBuyGwpoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseBuyGwpoints.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseBuyGwpoints.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseBuyGwpoints.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseBuyGwpoints.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseBuyGwpoints.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseBuyGwpoints.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseSellGwPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseSellGwPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseSellGwPoints.displayName = 'proto.gwpoints.ResponseSellGwPoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseSellGwPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseSellGwPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseSellGwPoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseSellGwPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseSellGwPoints}
 */
proto.gwpoints.ResponseSellGwPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseSellGwPoints;
  return proto.gwpoints.ResponseSellGwPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseSellGwPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseSellGwPoints}
 */
proto.gwpoints.ResponseSellGwPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseSellGwPoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseSellGwPoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseSellGwPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseSellGwPoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseSellGwPoints.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseSellGwPoints.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseSellGwPoints.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseSellGwPoints.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseSellGwPoints.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseSellGwPoints.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseBuyGoods = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseBuyGoods, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseBuyGoods.displayName = 'proto.gwpoints.ResponseBuyGoods';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseBuyGoods.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseBuyGoods.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseBuyGoods} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseBuyGoods.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseBuyGoods}
 */
proto.gwpoints.ResponseBuyGoods.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseBuyGoods;
  return proto.gwpoints.ResponseBuyGoods.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseBuyGoods} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseBuyGoods}
 */
proto.gwpoints.ResponseBuyGoods.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseBuyGoods} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseBuyGoods.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseBuyGoods.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseBuyGoods.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseBuyGoods.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseBuyGoods.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseBuyGoods.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseBuyGoods.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseBuyGoods.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseBuyGoods.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseClear = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseClear, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseClear.displayName = 'proto.gwpoints.ResponseClear';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseClear.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseClear.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseClear} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseClear.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseClear}
 */
proto.gwpoints.ResponseClear.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseClear;
  return proto.gwpoints.ResponseClear.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseClear} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseClear}
 */
proto.gwpoints.ResponseClear.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseClear} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseClear.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseClear.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseClear.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseClear.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseClear.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseClear.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseClear.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseClear.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseClear.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.ResponseSyncPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.ResponseSyncPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.ResponseSyncPoints.displayName = 'proto.gwpoints.ResponseSyncPoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.ResponseSyncPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.ResponseSyncPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.ResponseSyncPoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.ResponseSyncPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gwpoints.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.ResponseSyncPoints}
 */
proto.gwpoints.ResponseSyncPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.ResponseSyncPoints;
  return proto.gwpoints.ResponseSyncPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.ResponseSyncPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.ResponseSyncPoints}
 */
proto.gwpoints.ResponseSyncPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gwpoints.Event;
      reader.readMessage(value,proto.gwpoints.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.ResponseSyncPoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseSyncPoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.ResponseSyncPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.ResponseSyncPoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gwpoints.ResponseSyncPoints.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.ResponseSyncPoints.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gwpoints.Event}
 */
proto.gwpoints.ResponseSyncPoints.prototype.getEvent = function() {
  return /** @type{?proto.gwpoints.Event} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.Event, 2));
};


/** @param {?proto.gwpoints.Event|undefined} value */
proto.gwpoints.ResponseSyncPoints.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gwpoints.ResponseSyncPoints.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.ResponseSyncPoints.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gwpoints.Event.oneofGroups_);
};
goog.inherits(proto.gwpoints.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.Event.displayName = 'proto.gwpoints.Event';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gwpoints.Event.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10]];

/**
 * @enum {number}
 */
proto.gwpoints.Event.ValueCase = {
  VALUE_NOT_SET: 0,
  INITPLATFORM: 1,
  USERCREATE: 2,
  CHANGEPUBKEY: 3,
  DISTRIBUTEGWPOINTS: 4,
  SETCOMPANYEXCHANGERATE: 5,
  BUYGWPOINTS: 6,
  SELLGWPOINTS: 7,
  BUYGOODS: 8,
  CLEAR: 9,
  SYNCPOINTS: 10
};

/**
 * @return {proto.gwpoints.Event.ValueCase}
 */
proto.gwpoints.Event.prototype.getValueCase = function() {
  return /** @type {proto.gwpoints.Event.ValueCase} */(jspb.Message.computeOneofCase(this, proto.gwpoints.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.Event} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    initplatform: (f = msg.getInitplatform()) && proto.gwpoints.EventInitPlatform.toObject(includeInstance, f),
    usercreate: (f = msg.getUsercreate()) && proto.gwpoints.EventUserCreate.toObject(includeInstance, f),
    changepubkey: (f = msg.getChangepubkey()) && proto.gwpoints.EventChangePubkey.toObject(includeInstance, f),
    distributegwpoints: (f = msg.getDistributegwpoints()) && proto.gwpoints.EventDistributeGwpoints.toObject(includeInstance, f),
    setcompanyexchangerate: (f = msg.getSetcompanyexchangerate()) && proto.gwpoints.EventSetCompanyExchangeRate.toObject(includeInstance, f),
    buygwpoints: (f = msg.getBuygwpoints()) && proto.gwpoints.EventBuyGwpoints.toObject(includeInstance, f),
    sellgwpoints: (f = msg.getSellgwpoints()) && proto.gwpoints.EventSellGwPoints.toObject(includeInstance, f),
    buygoods: (f = msg.getBuygoods()) && proto.gwpoints.EventBuyGoods.toObject(includeInstance, f),
    clear: (f = msg.getClear()) && proto.gwpoints.EventClear.toObject(includeInstance, f),
    syncpoints: (f = msg.getSyncpoints()) && proto.gwpoints.EventSyncPoints.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.Event}
 */
proto.gwpoints.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.Event;
  return proto.gwpoints.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.Event}
 */
proto.gwpoints.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gwpoints.EventInitPlatform;
      reader.readMessage(value,proto.gwpoints.EventInitPlatform.deserializeBinaryFromReader);
      msg.setInitplatform(value);
      break;
    case 2:
      var value = new proto.gwpoints.EventUserCreate;
      reader.readMessage(value,proto.gwpoints.EventUserCreate.deserializeBinaryFromReader);
      msg.setUsercreate(value);
      break;
    case 3:
      var value = new proto.gwpoints.EventChangePubkey;
      reader.readMessage(value,proto.gwpoints.EventChangePubkey.deserializeBinaryFromReader);
      msg.setChangepubkey(value);
      break;
    case 4:
      var value = new proto.gwpoints.EventDistributeGwpoints;
      reader.readMessage(value,proto.gwpoints.EventDistributeGwpoints.deserializeBinaryFromReader);
      msg.setDistributegwpoints(value);
      break;
    case 5:
      var value = new proto.gwpoints.EventSetCompanyExchangeRate;
      reader.readMessage(value,proto.gwpoints.EventSetCompanyExchangeRate.deserializeBinaryFromReader);
      msg.setSetcompanyexchangerate(value);
      break;
    case 6:
      var value = new proto.gwpoints.EventBuyGwpoints;
      reader.readMessage(value,proto.gwpoints.EventBuyGwpoints.deserializeBinaryFromReader);
      msg.setBuygwpoints(value);
      break;
    case 7:
      var value = new proto.gwpoints.EventSellGwPoints;
      reader.readMessage(value,proto.gwpoints.EventSellGwPoints.deserializeBinaryFromReader);
      msg.setSellgwpoints(value);
      break;
    case 8:
      var value = new proto.gwpoints.EventBuyGoods;
      reader.readMessage(value,proto.gwpoints.EventBuyGoods.deserializeBinaryFromReader);
      msg.setBuygoods(value);
      break;
    case 9:
      var value = new proto.gwpoints.EventClear;
      reader.readMessage(value,proto.gwpoints.EventClear.deserializeBinaryFromReader);
      msg.setClear(value);
      break;
    case 10:
      var value = new proto.gwpoints.EventSyncPoints;
      reader.readMessage(value,proto.gwpoints.EventSyncPoints.deserializeBinaryFromReader);
      msg.setSyncpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.Event} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Event.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.Event.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInitplatform();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gwpoints.EventInitPlatform.serializeBinaryToWriter
    );
  }
  f = this.getUsercreate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gwpoints.EventUserCreate.serializeBinaryToWriter
    );
  }
  f = this.getChangepubkey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gwpoints.EventChangePubkey.serializeBinaryToWriter
    );
  }
  f = this.getDistributegwpoints();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gwpoints.EventDistributeGwpoints.serializeBinaryToWriter
    );
  }
  f = this.getSetcompanyexchangerate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gwpoints.EventSetCompanyExchangeRate.serializeBinaryToWriter
    );
  }
  f = this.getBuygwpoints();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gwpoints.EventBuyGwpoints.serializeBinaryToWriter
    );
  }
  f = this.getSellgwpoints();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gwpoints.EventSellGwPoints.serializeBinaryToWriter
    );
  }
  f = this.getBuygoods();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gwpoints.EventBuyGoods.serializeBinaryToWriter
    );
  }
  f = this.getClear();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gwpoints.EventClear.serializeBinaryToWriter
    );
  }
  f = this.getSyncpoints();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gwpoints.EventSyncPoints.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventInitPlatform initPlatform = 1;
 * @return {?proto.gwpoints.EventInitPlatform}
 */
proto.gwpoints.Event.prototype.getInitplatform = function() {
  return /** @type{?proto.gwpoints.EventInitPlatform} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventInitPlatform, 1));
};


/** @param {?proto.gwpoints.EventInitPlatform|undefined} value */
proto.gwpoints.Event.prototype.setInitplatform = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearInitplatform = function() {
  this.setInitplatform(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasInitplatform = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EventUserCreate userCreate = 2;
 * @return {?proto.gwpoints.EventUserCreate}
 */
proto.gwpoints.Event.prototype.getUsercreate = function() {
  return /** @type{?proto.gwpoints.EventUserCreate} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventUserCreate, 2));
};


/** @param {?proto.gwpoints.EventUserCreate|undefined} value */
proto.gwpoints.Event.prototype.setUsercreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearUsercreate = function() {
  this.setUsercreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasUsercreate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EventChangePubkey changePubkey = 3;
 * @return {?proto.gwpoints.EventChangePubkey}
 */
proto.gwpoints.Event.prototype.getChangepubkey = function() {
  return /** @type{?proto.gwpoints.EventChangePubkey} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventChangePubkey, 3));
};


/** @param {?proto.gwpoints.EventChangePubkey|undefined} value */
proto.gwpoints.Event.prototype.setChangepubkey = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearChangepubkey = function() {
  this.setChangepubkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasChangepubkey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EventDistributeGwpoints distributeGwpoints = 4;
 * @return {?proto.gwpoints.EventDistributeGwpoints}
 */
proto.gwpoints.Event.prototype.getDistributegwpoints = function() {
  return /** @type{?proto.gwpoints.EventDistributeGwpoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventDistributeGwpoints, 4));
};


/** @param {?proto.gwpoints.EventDistributeGwpoints|undefined} value */
proto.gwpoints.Event.prototype.setDistributegwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearDistributegwpoints = function() {
  this.setDistributegwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasDistributegwpoints = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EventSetCompanyExchangeRate setCompanyExchangeRate = 5;
 * @return {?proto.gwpoints.EventSetCompanyExchangeRate}
 */
proto.gwpoints.Event.prototype.getSetcompanyexchangerate = function() {
  return /** @type{?proto.gwpoints.EventSetCompanyExchangeRate} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventSetCompanyExchangeRate, 5));
};


/** @param {?proto.gwpoints.EventSetCompanyExchangeRate|undefined} value */
proto.gwpoints.Event.prototype.setSetcompanyexchangerate = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearSetcompanyexchangerate = function() {
  this.setSetcompanyexchangerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasSetcompanyexchangerate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EventBuyGwpoints buyGwpoints = 6;
 * @return {?proto.gwpoints.EventBuyGwpoints}
 */
proto.gwpoints.Event.prototype.getBuygwpoints = function() {
  return /** @type{?proto.gwpoints.EventBuyGwpoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventBuyGwpoints, 6));
};


/** @param {?proto.gwpoints.EventBuyGwpoints|undefined} value */
proto.gwpoints.Event.prototype.setBuygwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearBuygwpoints = function() {
  this.setBuygwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasBuygwpoints = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EventSellGwPoints sellGwPoints = 7;
 * @return {?proto.gwpoints.EventSellGwPoints}
 */
proto.gwpoints.Event.prototype.getSellgwpoints = function() {
  return /** @type{?proto.gwpoints.EventSellGwPoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventSellGwPoints, 7));
};


/** @param {?proto.gwpoints.EventSellGwPoints|undefined} value */
proto.gwpoints.Event.prototype.setSellgwpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearSellgwpoints = function() {
  this.setSellgwpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasSellgwpoints = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EventBuyGoods buyGoods = 8;
 * @return {?proto.gwpoints.EventBuyGoods}
 */
proto.gwpoints.Event.prototype.getBuygoods = function() {
  return /** @type{?proto.gwpoints.EventBuyGoods} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventBuyGoods, 8));
};


/** @param {?proto.gwpoints.EventBuyGoods|undefined} value */
proto.gwpoints.Event.prototype.setBuygoods = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearBuygoods = function() {
  this.setBuygoods(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasBuygoods = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional EventClear clear = 9;
 * @return {?proto.gwpoints.EventClear}
 */
proto.gwpoints.Event.prototype.getClear = function() {
  return /** @type{?proto.gwpoints.EventClear} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventClear, 9));
};


/** @param {?proto.gwpoints.EventClear|undefined} value */
proto.gwpoints.Event.prototype.setClear = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearClear = function() {
  this.setClear(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasClear = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional EventSyncPoints syncPoints = 10;
 * @return {?proto.gwpoints.EventSyncPoints}
 */
proto.gwpoints.Event.prototype.getSyncpoints = function() {
  return /** @type{?proto.gwpoints.EventSyncPoints} */ (
    jspb.Message.getWrapperField(this, proto.gwpoints.EventSyncPoints, 10));
};


/** @param {?proto.gwpoints.EventSyncPoints|undefined} value */
proto.gwpoints.Event.prototype.setSyncpoints = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gwpoints.Event.oneofGroups_[0], value);
};


proto.gwpoints.Event.prototype.clearSyncpoints = function() {
  this.setSyncpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gwpoints.Event.prototype.hasSyncpoints = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventInitPlatform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventInitPlatform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventInitPlatform.displayName = 'proto.gwpoints.EventInitPlatform';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventInitPlatform.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventInitPlatform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventInitPlatform} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventInitPlatform.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventInitPlatform}
 */
proto.gwpoints.EventInitPlatform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventInitPlatform;
  return proto.gwpoints.EventInitPlatform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventInitPlatform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventInitPlatform}
 */
proto.gwpoints.EventInitPlatform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventInitPlatform} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventInitPlatform.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventInitPlatform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventInitPlatform.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.EventInitPlatform.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gwpoints.EventInitPlatform.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.EventInitPlatform.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.EventInitPlatform.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventUserCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventUserCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventUserCreate.displayName = 'proto.gwpoints.EventUserCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventUserCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventUserCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventUserCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventUserCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    useruid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventUserCreate}
 */
proto.gwpoints.EventUserCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventUserCreate;
  return proto.gwpoints.EventUserCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventUserCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventUserCreate}
 */
proto.gwpoints.EventUserCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUseruid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventUserCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventUserCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventUserCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventUserCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUseruid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 userUid = 1;
 * @return {number}
 */
proto.gwpoints.EventUserCreate.prototype.getUseruid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventUserCreate.prototype.setUseruid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventChangePubkey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventChangePubkey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventChangePubkey.displayName = 'proto.gwpoints.EventChangePubkey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventChangePubkey.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventChangePubkey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventChangePubkey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventChangePubkey.toObject = function(includeInstance, msg) {
  var f, obj = {
    newpubkey: msg.getNewpubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventChangePubkey}
 */
proto.gwpoints.EventChangePubkey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventChangePubkey;
  return proto.gwpoints.EventChangePubkey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventChangePubkey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventChangePubkey}
 */
proto.gwpoints.EventChangePubkey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNewpubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventChangePubkey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventChangePubkey.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventChangePubkey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventChangePubkey.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getNewpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes newPubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gwpoints.EventChangePubkey.prototype.getNewpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes newPubkey = 1;
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {string}
 */
proto.gwpoints.EventChangePubkey.prototype.getNewpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNewpubkey()));
};


/**
 * optional bytes newPubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {!Uint8Array}
 */
proto.gwpoints.EventChangePubkey.prototype.getNewpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNewpubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gwpoints.EventChangePubkey.prototype.setNewpubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventDistributeGwpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventDistributeGwpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventDistributeGwpoints.displayName = 'proto.gwpoints.EventDistributeGwpoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventDistributeGwpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventDistributeGwpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventDistributeGwpoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventDistributeGwpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    gwpoints: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventDistributeGwpoints}
 */
proto.gwpoints.EventDistributeGwpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventDistributeGwpoints;
  return proto.gwpoints.EventDistributeGwpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventDistributeGwpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventDistributeGwpoints}
 */
proto.gwpoints.EventDistributeGwpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventDistributeGwpoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventDistributeGwpoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventDistributeGwpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventDistributeGwpoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 gwPoints = 1;
 * @return {number}
 */
proto.gwpoints.EventDistributeGwpoints.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventDistributeGwpoints.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventSetCompanyExchangeRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventSetCompanyExchangeRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventSetCompanyExchangeRate.displayName = 'proto.gwpoints.EventSetCompanyExchangeRate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventSetCompanyExchangeRate.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventSetCompanyExchangeRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventSetCompanyExchangeRate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventSetCompanyExchangeRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    companynum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gwnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventSetCompanyExchangeRate}
 */
proto.gwpoints.EventSetCompanyExchangeRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventSetCompanyExchangeRate;
  return proto.gwpoints.EventSetCompanyExchangeRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventSetCompanyExchangeRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventSetCompanyExchangeRate}
 */
proto.gwpoints.EventSetCompanyExchangeRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCompanynum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGwnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventSetCompanyExchangeRate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventSetCompanyExchangeRate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventSetCompanyExchangeRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventSetCompanyExchangeRate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCompanynum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getGwnum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 companyNum = 1;
 * @return {number}
 */
proto.gwpoints.EventSetCompanyExchangeRate.prototype.getCompanynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventSetCompanyExchangeRate.prototype.setCompanynum = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 gwNum = 2;
 * @return {number}
 */
proto.gwpoints.EventSetCompanyExchangeRate.prototype.getGwnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gwpoints.EventSetCompanyExchangeRate.prototype.setGwnum = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventBuyGwpoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventBuyGwpoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventBuyGwpoints.displayName = 'proto.gwpoints.EventBuyGwpoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventBuyGwpoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventBuyGwpoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventBuyGwpoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventBuyGwpoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    points: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventBuyGwpoints}
 */
proto.gwpoints.EventBuyGwpoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventBuyGwpoints;
  return proto.gwpoints.EventBuyGwpoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventBuyGwpoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventBuyGwpoints}
 */
proto.gwpoints.EventBuyGwpoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventBuyGwpoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventBuyGwpoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventBuyGwpoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventBuyGwpoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 points = 1;
 * @return {number}
 */
proto.gwpoints.EventBuyGwpoints.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventBuyGwpoints.prototype.setPoints = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventSellGwPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventSellGwPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventSellGwPoints.displayName = 'proto.gwpoints.EventSellGwPoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventSellGwPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventSellGwPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventSellGwPoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventSellGwPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    points: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventSellGwPoints}
 */
proto.gwpoints.EventSellGwPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventSellGwPoints;
  return proto.gwpoints.EventSellGwPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventSellGwPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventSellGwPoints}
 */
proto.gwpoints.EventSellGwPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventSellGwPoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventSellGwPoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventSellGwPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventSellGwPoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 points = 1;
 * @return {number}
 */
proto.gwpoints.EventSellGwPoints.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventSellGwPoints.prototype.setPoints = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventBuyGoods = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventBuyGoods, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventBuyGoods.displayName = 'proto.gwpoints.EventBuyGoods';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventBuyGoods.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventBuyGoods.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventBuyGoods} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventBuyGoods.toObject = function(includeInstance, msg) {
  var f, obj = {
    points: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventBuyGoods}
 */
proto.gwpoints.EventBuyGoods.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventBuyGoods;
  return proto.gwpoints.EventBuyGoods.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventBuyGoods} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventBuyGoods}
 */
proto.gwpoints.EventBuyGoods.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventBuyGoods} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventBuyGoods.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventBuyGoods.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventBuyGoods.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 points = 1;
 * @return {number}
 */
proto.gwpoints.EventBuyGoods.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventBuyGoods.prototype.setPoints = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventClear = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventClear, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventClear.displayName = 'proto.gwpoints.EventClear';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventClear.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventClear.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventClear} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventClear.toObject = function(includeInstance, msg) {
  var f, obj = {
    companypoints: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pb_in: jspb.Message.getFieldWithDefault(msg, 2, 0),
    out: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gwpoints: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventClear}
 */
proto.gwpoints.EventClear.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventClear;
  return proto.gwpoints.EventClear.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventClear} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventClear}
 */
proto.gwpoints.EventClear.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompanypoints(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIn(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOut(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventClear} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventClear.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventClear.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventClear.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCompanypoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getIn();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getOut();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 companyPoints = 1;
 * @return {number}
 */
proto.gwpoints.EventClear.prototype.getCompanypoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventClear.prototype.setCompanypoints = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 in = 2;
 * @return {number}
 */
proto.gwpoints.EventClear.prototype.getIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gwpoints.EventClear.prototype.setIn = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 out = 3;
 * @return {number}
 */
proto.gwpoints.EventClear.prototype.getOut = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gwpoints.EventClear.prototype.setOut = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 gwPoints = 4;
 * @return {number}
 */
proto.gwpoints.EventClear.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gwpoints.EventClear.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gwpoints.EventSyncPoints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gwpoints.EventSyncPoints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gwpoints.EventSyncPoints.displayName = 'proto.gwpoints.EventSyncPoints';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gwpoints.EventSyncPoints.prototype.toObject = function(opt_includeInstance) {
  return proto.gwpoints.EventSyncPoints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gwpoints.EventSyncPoints} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gwpoints.EventSyncPoints.toObject = function(includeInstance, msg) {
  var f, obj = {
    gwpoints: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gwpoints.EventSyncPoints}
 */
proto.gwpoints.EventSyncPoints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gwpoints.EventSyncPoints;
  return proto.gwpoints.EventSyncPoints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gwpoints.EventSyncPoints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gwpoints.EventSyncPoints}
 */
proto.gwpoints.EventSyncPoints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGwpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gwpoints.EventSyncPoints} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventSyncPoints.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gwpoints.EventSyncPoints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gwpoints.EventSyncPoints.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGwpoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 gwPoints = 1;
 * @return {number}
 */
proto.gwpoints.EventSyncPoints.prototype.getGwpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gwpoints.EventSyncPoints.prototype.setGwpoints = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.gwpoints.MessageType = {
  MSGERROR: 0,
  MSGINITPLATFORM: 1,
  MSGUSERCREATE: 2,
  MSGCHANGEPUBKEY: 3,
  MSGDISTRIBUTEGWPOINTS: 4,
  MSGSETCOMPANYEXCHANGERATE: 5,
  MSGBUYGWPOINTS: 6,
  MSGSELLGWPOINTS: 7,
  MSGBUYGOODS: 8,
  MSGCLEAR: 9,
  MSGSYNCPOINTS: 10,
  MSGCOUNT: 11
};

goog.object.extend(exports, proto.gwpoints);
