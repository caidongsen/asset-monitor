// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package contract is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Request
	RequestUserCreate
	RequestChangePubkey
	RequestCreateContract
	RequestLaunchSign
	RequestCreatorSign
	RequestEditContract
	RequestRejectContract
	RequestAcceptContract
	RequestRepairContract
	RequestDisuseContract
	Response
	ResponseException
	ResponseOK
	Receipt
	ResponseUserCreate
	ResponseChangePubkey
	ResponseCreateContract
	ResponseLaunchSign
	ResponseCreatorSign
	ResponseEditContract
	ResponseRejectContract
	ResponseAcceptContract
	ResponseRepairContract
	ResponseDisuseContract
	User
	Signer
	Contract
	Event
	EventUserCreate
	EventChangePubkey
	EventCreateContract
	EventLaunchSign
	EventRejectContract
	EventAcceptContract
	EventRepairContract
	EventDisuseContract
*/
package contract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_MsgError          MessageType = 0
	MessageType_MsgInit           MessageType = 1
	MessageType_MsgShutDown       MessageType = 2
	MessageType_MsgClose          MessageType = 3
	MessageType_MsgUserCreate     MessageType = 4
	MessageType_MsgChangePubkey   MessageType = 5
	MessageType_MsgCreateContract MessageType = 6
	MessageType_MsgLaunchSign     MessageType = 7
	MessageType_MsgCreatorSign    MessageType = 8
	MessageType_MsgEditContract   MessageType = 9
	MessageType_MsgRejectContract MessageType = 10
	MessageType_MsgAcceptContract MessageType = 11
	MessageType_MsgRepairContract MessageType = 12
	MessageType_MsgDisuseContract MessageType = 13
	MessageType_MsgCount          MessageType = 14
)

var MessageType_name = map[int32]string{
	0:  "MsgError",
	1:  "MsgInit",
	2:  "MsgShutDown",
	3:  "MsgClose",
	4:  "MsgUserCreate",
	5:  "MsgChangePubkey",
	6:  "MsgCreateContract",
	7:  "MsgLaunchSign",
	8:  "MsgCreatorSign",
	9:  "MsgEditContract",
	10: "MsgRejectContract",
	11: "MsgAcceptContract",
	12: "MsgRepairContract",
	13: "MsgDisuseContract",
	14: "MsgCount",
}
var MessageType_value = map[string]int32{
	"MsgError":          0,
	"MsgInit":           1,
	"MsgShutDown":       2,
	"MsgClose":          3,
	"MsgUserCreate":     4,
	"MsgChangePubkey":   5,
	"MsgCreateContract": 6,
	"MsgLaunchSign":     7,
	"MsgCreatorSign":    8,
	"MsgEditContract":   9,
	"MsgRejectContract": 10,
	"MsgAcceptContract": 11,
	"MsgRepairContract": 12,
	"MsgDisuseContract": 13,
	"MsgCount":          14,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ContractState int32

const (
	ContractState_CSUndefined ContractState = 0
	ContractState_CSCreated   ContractState = 1
	ContractState_CSLaunched  ContractState = 2
	ContractState_CSEdited    ContractState = 3
	ContractState_CSRepaired  ContractState = 4
	ContractState_CSRejected  ContractState = 5
	ContractState_CSEffective ContractState = 6
	ContractState_CSDisuse    ContractState = 7
)

var ContractState_name = map[int32]string{
	0: "CSUndefined",
	1: "CSCreated",
	2: "CSLaunched",
	3: "CSEdited",
	4: "CSRepaired",
	5: "CSRejected",
	6: "CSEffective",
	7: "CSDisuse",
}
var ContractState_value = map[string]int32{
	"CSUndefined": 0,
	"CSCreated":   1,
	"CSLaunched":  2,
	"CSEdited":    3,
	"CSRepaired":  4,
	"CSRejected":  5,
	"CSEffective": 6,
	"CSDisuse":    7,
}

func (x ContractState) String() string {
	return proto.EnumName(ContractState_name, int32(x))
}
func (ContractState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Request struct {
	// Types that are valid to be assigned to Value:
	//	*Request_UserCreate
	//	*Request_ChangePubkey
	//	*Request_CreateContract
	//	*Request_LaunchSign
	//	*Request_CreatorSign
	//	*Request_EditContract
	//	*Request_RejectContract
	//	*Request_AcceptContract
	//	*Request_RepairContract
	//	*Request_DisuseContract
	Value         isRequest_Value `protobuf_oneof:"value"`
	Uid           string          `protobuf:"bytes,11,opt,name=uid" json:"uid,omitempty"`
	InstructionId int64           `protobuf:"varint,12,opt,name=instructionId" json:"instructionId,omitempty"`
	Pubkey        []byte          `protobuf:"bytes,13,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Sign          []byte          `protobuf:"bytes,14,opt,name=sign,proto3" json:"sign,omitempty"`
	ActionId      MessageType     `protobuf:"varint,15,opt,name=actionId,enum=contract.MessageType" json:"actionId,omitempty"`
	OpT           int64           `protobuf:"varint,16,opt,name=opT" json:"opT,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRequest_Value interface {
	isRequest_Value()
}

type Request_UserCreate struct {
	UserCreate *RequestUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Request_ChangePubkey struct {
	ChangePubkey *RequestChangePubkey `protobuf:"bytes,2,opt,name=changePubkey,oneof"`
}
type Request_CreateContract struct {
	CreateContract *RequestCreateContract `protobuf:"bytes,3,opt,name=createContract,oneof"`
}
type Request_LaunchSign struct {
	LaunchSign *RequestLaunchSign `protobuf:"bytes,4,opt,name=launchSign,oneof"`
}
type Request_CreatorSign struct {
	CreatorSign *RequestCreatorSign `protobuf:"bytes,5,opt,name=creatorSign,oneof"`
}
type Request_EditContract struct {
	EditContract *RequestEditContract `protobuf:"bytes,6,opt,name=editContract,oneof"`
}
type Request_RejectContract struct {
	RejectContract *RequestRejectContract `protobuf:"bytes,7,opt,name=rejectContract,oneof"`
}
type Request_AcceptContract struct {
	AcceptContract *RequestAcceptContract `protobuf:"bytes,8,opt,name=acceptContract,oneof"`
}
type Request_RepairContract struct {
	RepairContract *RequestRepairContract `protobuf:"bytes,9,opt,name=repairContract,oneof"`
}
type Request_DisuseContract struct {
	DisuseContract *RequestDisuseContract `protobuf:"bytes,10,opt,name=disuseContract,oneof"`
}

func (*Request_UserCreate) isRequest_Value()     {}
func (*Request_ChangePubkey) isRequest_Value()   {}
func (*Request_CreateContract) isRequest_Value() {}
func (*Request_LaunchSign) isRequest_Value()     {}
func (*Request_CreatorSign) isRequest_Value()    {}
func (*Request_EditContract) isRequest_Value()   {}
func (*Request_RejectContract) isRequest_Value() {}
func (*Request_AcceptContract) isRequest_Value() {}
func (*Request_RepairContract) isRequest_Value() {}
func (*Request_DisuseContract) isRequest_Value() {}

func (m *Request) GetValue() isRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Request) GetUserCreate() *RequestUserCreate {
	if x, ok := m.GetValue().(*Request_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Request) GetChangePubkey() *RequestChangePubkey {
	if x, ok := m.GetValue().(*Request_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Request) GetCreateContract() *RequestCreateContract {
	if x, ok := m.GetValue().(*Request_CreateContract); ok {
		return x.CreateContract
	}
	return nil
}

func (m *Request) GetLaunchSign() *RequestLaunchSign {
	if x, ok := m.GetValue().(*Request_LaunchSign); ok {
		return x.LaunchSign
	}
	return nil
}

func (m *Request) GetCreatorSign() *RequestCreatorSign {
	if x, ok := m.GetValue().(*Request_CreatorSign); ok {
		return x.CreatorSign
	}
	return nil
}

func (m *Request) GetEditContract() *RequestEditContract {
	if x, ok := m.GetValue().(*Request_EditContract); ok {
		return x.EditContract
	}
	return nil
}

func (m *Request) GetRejectContract() *RequestRejectContract {
	if x, ok := m.GetValue().(*Request_RejectContract); ok {
		return x.RejectContract
	}
	return nil
}

func (m *Request) GetAcceptContract() *RequestAcceptContract {
	if x, ok := m.GetValue().(*Request_AcceptContract); ok {
		return x.AcceptContract
	}
	return nil
}

func (m *Request) GetRepairContract() *RequestRepairContract {
	if x, ok := m.GetValue().(*Request_RepairContract); ok {
		return x.RepairContract
	}
	return nil
}

func (m *Request) GetDisuseContract() *RequestDisuseContract {
	if x, ok := m.GetValue().(*Request_DisuseContract); ok {
		return x.DisuseContract
	}
	return nil
}

func (m *Request) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Request) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *Request) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *Request) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *Request) GetActionId() MessageType {
	if m != nil {
		return m.ActionId
	}
	return MessageType_MsgError
}

func (m *Request) GetOpT() int64 {
	if m != nil {
		return m.OpT
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_UserCreate)(nil),
		(*Request_ChangePubkey)(nil),
		(*Request_CreateContract)(nil),
		(*Request_LaunchSign)(nil),
		(*Request_CreatorSign)(nil),
		(*Request_EditContract)(nil),
		(*Request_RejectContract)(nil),
		(*Request_AcceptContract)(nil),
		(*Request_RepairContract)(nil),
		(*Request_DisuseContract)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Request_ChangePubkey:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Request_CreateContract:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateContract); err != nil {
			return err
		}
	case *Request_LaunchSign:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LaunchSign); err != nil {
			return err
		}
	case *Request_CreatorSign:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreatorSign); err != nil {
			return err
		}
	case *Request_EditContract:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EditContract); err != nil {
			return err
		}
	case *Request_RejectContract:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RejectContract); err != nil {
			return err
		}
	case *Request_AcceptContract:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AcceptContract); err != nil {
			return err
		}
	case *Request_RepairContract:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepairContract); err != nil {
			return err
		}
	case *Request_DisuseContract:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisuseContract); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Value has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Request_UserCreate{msg}
		return true, err
	case 2: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ChangePubkey{msg}
		return true, err
	case 3: // value.createContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCreateContract)
		err := b.DecodeMessage(msg)
		m.Value = &Request_CreateContract{msg}
		return true, err
	case 4: // value.launchSign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestLaunchSign)
		err := b.DecodeMessage(msg)
		m.Value = &Request_LaunchSign{msg}
		return true, err
	case 5: // value.creatorSign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCreatorSign)
		err := b.DecodeMessage(msg)
		m.Value = &Request_CreatorSign{msg}
		return true, err
	case 6: // value.editContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestEditContract)
		err := b.DecodeMessage(msg)
		m.Value = &Request_EditContract{msg}
		return true, err
	case 7: // value.rejectContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestRejectContract)
		err := b.DecodeMessage(msg)
		m.Value = &Request_RejectContract{msg}
		return true, err
	case 8: // value.acceptContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestAcceptContract)
		err := b.DecodeMessage(msg)
		m.Value = &Request_AcceptContract{msg}
		return true, err
	case 9: // value.repairContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestRepairContract)
		err := b.DecodeMessage(msg)
		m.Value = &Request_RepairContract{msg}
		return true, err
	case 10: // value.disuseContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestDisuseContract)
		err := b.DecodeMessage(msg)
		m.Value = &Request_DisuseContract{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CreateContract:
		s := proto.Size(x.CreateContract)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_LaunchSign:
		s := proto.Size(x.LaunchSign)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CreatorSign:
		s := proto.Size(x.CreatorSign)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_EditContract:
		s := proto.Size(x.EditContract)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RejectContract:
		s := proto.Size(x.RejectContract)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_AcceptContract:
		s := proto.Size(x.AcceptContract)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RepairContract:
		s := proto.Size(x.RepairContract)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_DisuseContract:
		s := proto.Size(x.DisuseContract)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RequestUserCreate struct {
	Uid    string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Pubkey []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Info   []byte `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestUserCreate) Reset()                    { *m = RequestUserCreate{} }
func (m *RequestUserCreate) String() string            { return proto.CompactTextString(m) }
func (*RequestUserCreate) ProtoMessage()               {}
func (*RequestUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RequestUserCreate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RequestUserCreate) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *RequestUserCreate) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestChangePubkey struct {
	NewPubkey []byte `protobuf:"bytes,1,opt,name=newPubkey,proto3" json:"newPubkey,omitempty"`
}

func (m *RequestChangePubkey) Reset()                    { *m = RequestChangePubkey{} }
func (m *RequestChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*RequestChangePubkey) ProtoMessage()               {}
func (*RequestChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestChangePubkey) GetNewPubkey() []byte {
	if m != nil {
		return m.NewPubkey
	}
	return nil
}

type RequestCreateContract struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Info []byte `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestCreateContract) Reset()                    { *m = RequestCreateContract{} }
func (m *RequestCreateContract) String() string            { return proto.CompactTextString(m) }
func (*RequestCreateContract) ProtoMessage()               {}
func (*RequestCreateContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestCreateContract) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RequestCreateContract) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestLaunchSign struct {
	ContractId string   `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	EndT       int64    `protobuf:"varint,2,opt,name=endT" json:"endT,omitempty"`
	Signers    []string `protobuf:"bytes,3,rep,name=signers" json:"signers,omitempty"`
}

func (m *RequestLaunchSign) Reset()                    { *m = RequestLaunchSign{} }
func (m *RequestLaunchSign) String() string            { return proto.CompactTextString(m) }
func (*RequestLaunchSign) ProtoMessage()               {}
func (*RequestLaunchSign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RequestLaunchSign) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *RequestLaunchSign) GetEndT() int64 {
	if m != nil {
		return m.EndT
	}
	return 0
}

func (m *RequestLaunchSign) GetSigners() []string {
	if m != nil {
		return m.Signers
	}
	return nil
}

type RequestCreatorSign struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestCreatorSign) Reset()                    { *m = RequestCreatorSign{} }
func (m *RequestCreatorSign) String() string            { return proto.CompactTextString(m) }
func (*RequestCreatorSign) ProtoMessage()               {}
func (*RequestCreatorSign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RequestCreatorSign) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestEditContract struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	Info       []byte `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestEditContract) Reset()                    { *m = RequestEditContract{} }
func (m *RequestEditContract) String() string            { return proto.CompactTextString(m) }
func (*RequestEditContract) ProtoMessage()               {}
func (*RequestEditContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RequestEditContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *RequestEditContract) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestRejectContract struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestRejectContract) Reset()                    { *m = RequestRejectContract{} }
func (m *RequestRejectContract) String() string            { return proto.CompactTextString(m) }
func (*RequestRejectContract) ProtoMessage()               {}
func (*RequestRejectContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RequestRejectContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestAcceptContract struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestAcceptContract) Reset()                    { *m = RequestAcceptContract{} }
func (m *RequestAcceptContract) String() string            { return proto.CompactTextString(m) }
func (*RequestAcceptContract) ProtoMessage()               {}
func (*RequestAcceptContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RequestAcceptContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestRepairContract struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	Info       []byte `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	EndT       int64  `protobuf:"varint,3,opt,name=endT" json:"endT,omitempty"`
}

func (m *RequestRepairContract) Reset()                    { *m = RequestRepairContract{} }
func (m *RequestRepairContract) String() string            { return proto.CompactTextString(m) }
func (*RequestRepairContract) ProtoMessage()               {}
func (*RequestRepairContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RequestRepairContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *RequestRepairContract) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *RequestRepairContract) GetEndT() int64 {
	if m != nil {
		return m.EndT
	}
	return 0
}

type RequestDisuseContract struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestDisuseContract) Reset()                    { *m = RequestDisuseContract{} }
func (m *RequestDisuseContract) String() string            { return proto.CompactTextString(m) }
func (*RequestDisuseContract) ProtoMessage()               {}
func (*RequestDisuseContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RequestDisuseContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type Response struct {
	// Types that are valid to be assigned to Value:
	//	*Response_UserCreate
	//	*Response_ChangePubkey
	//	*Response_CreateContract
	//	*Response_LaunchSign
	//	*Response_CreatorSign
	//	*Response_EditContract
	//	*Response_RejectContract
	//	*Response_AcceptContract
	//	*Response_RepairContract
	//	*Response_DisuseContract
	//	*Response_Ok
	//	*Response_Exception
	Value isResponse_Value `protobuf_oneof:"value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type isResponse_Value interface {
	isResponse_Value()
}

type Response_UserCreate struct {
	UserCreate *ResponseUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Response_ChangePubkey struct {
	ChangePubkey *ResponseChangePubkey `protobuf:"bytes,2,opt,name=changePubkey,oneof"`
}
type Response_CreateContract struct {
	CreateContract *ResponseCreateContract `protobuf:"bytes,3,opt,name=createContract,oneof"`
}
type Response_LaunchSign struct {
	LaunchSign *ResponseLaunchSign `protobuf:"bytes,4,opt,name=launchSign,oneof"`
}
type Response_CreatorSign struct {
	CreatorSign *ResponseCreatorSign `protobuf:"bytes,5,opt,name=creatorSign,oneof"`
}
type Response_EditContract struct {
	EditContract *ResponseEditContract `protobuf:"bytes,6,opt,name=editContract,oneof"`
}
type Response_RejectContract struct {
	RejectContract *ResponseRejectContract `protobuf:"bytes,7,opt,name=rejectContract,oneof"`
}
type Response_AcceptContract struct {
	AcceptContract *ResponseAcceptContract `protobuf:"bytes,8,opt,name=acceptContract,oneof"`
}
type Response_RepairContract struct {
	RepairContract *ResponseRepairContract `protobuf:"bytes,9,opt,name=repairContract,oneof"`
}
type Response_DisuseContract struct {
	DisuseContract *ResponseDisuseContract `protobuf:"bytes,10,opt,name=disuseContract,oneof"`
}
type Response_Ok struct {
	Ok *ResponseOK `protobuf:"bytes,11,opt,name=ok,oneof"`
}
type Response_Exception struct {
	Exception *ResponseException `protobuf:"bytes,12,opt,name=exception,oneof"`
}

func (*Response_UserCreate) isResponse_Value()     {}
func (*Response_ChangePubkey) isResponse_Value()   {}
func (*Response_CreateContract) isResponse_Value() {}
func (*Response_LaunchSign) isResponse_Value()     {}
func (*Response_CreatorSign) isResponse_Value()    {}
func (*Response_EditContract) isResponse_Value()   {}
func (*Response_RejectContract) isResponse_Value() {}
func (*Response_AcceptContract) isResponse_Value() {}
func (*Response_RepairContract) isResponse_Value() {}
func (*Response_DisuseContract) isResponse_Value() {}
func (*Response_Ok) isResponse_Value()             {}
func (*Response_Exception) isResponse_Value()      {}

func (m *Response) GetValue() isResponse_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Response) GetUserCreate() *ResponseUserCreate {
	if x, ok := m.GetValue().(*Response_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Response) GetChangePubkey() *ResponseChangePubkey {
	if x, ok := m.GetValue().(*Response_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Response) GetCreateContract() *ResponseCreateContract {
	if x, ok := m.GetValue().(*Response_CreateContract); ok {
		return x.CreateContract
	}
	return nil
}

func (m *Response) GetLaunchSign() *ResponseLaunchSign {
	if x, ok := m.GetValue().(*Response_LaunchSign); ok {
		return x.LaunchSign
	}
	return nil
}

func (m *Response) GetCreatorSign() *ResponseCreatorSign {
	if x, ok := m.GetValue().(*Response_CreatorSign); ok {
		return x.CreatorSign
	}
	return nil
}

func (m *Response) GetEditContract() *ResponseEditContract {
	if x, ok := m.GetValue().(*Response_EditContract); ok {
		return x.EditContract
	}
	return nil
}

func (m *Response) GetRejectContract() *ResponseRejectContract {
	if x, ok := m.GetValue().(*Response_RejectContract); ok {
		return x.RejectContract
	}
	return nil
}

func (m *Response) GetAcceptContract() *ResponseAcceptContract {
	if x, ok := m.GetValue().(*Response_AcceptContract); ok {
		return x.AcceptContract
	}
	return nil
}

func (m *Response) GetRepairContract() *ResponseRepairContract {
	if x, ok := m.GetValue().(*Response_RepairContract); ok {
		return x.RepairContract
	}
	return nil
}

func (m *Response) GetDisuseContract() *ResponseDisuseContract {
	if x, ok := m.GetValue().(*Response_DisuseContract); ok {
		return x.DisuseContract
	}
	return nil
}

func (m *Response) GetOk() *ResponseOK {
	if x, ok := m.GetValue().(*Response_Ok); ok {
		return x.Ok
	}
	return nil
}

func (m *Response) GetException() *ResponseException {
	if x, ok := m.GetValue().(*Response_Exception); ok {
		return x.Exception
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_UserCreate)(nil),
		(*Response_ChangePubkey)(nil),
		(*Response_CreateContract)(nil),
		(*Response_LaunchSign)(nil),
		(*Response_CreatorSign)(nil),
		(*Response_EditContract)(nil),
		(*Response_RejectContract)(nil),
		(*Response_AcceptContract)(nil),
		(*Response_RepairContract)(nil),
		(*Response_DisuseContract)(nil),
		(*Response_Ok)(nil),
		(*Response_Exception)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Response_ChangePubkey:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Response_CreateContract:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateContract); err != nil {
			return err
		}
	case *Response_LaunchSign:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LaunchSign); err != nil {
			return err
		}
	case *Response_CreatorSign:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreatorSign); err != nil {
			return err
		}
	case *Response_EditContract:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EditContract); err != nil {
			return err
		}
	case *Response_RejectContract:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RejectContract); err != nil {
			return err
		}
	case *Response_AcceptContract:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AcceptContract); err != nil {
			return err
		}
	case *Response_RepairContract:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepairContract); err != nil {
			return err
		}
	case *Response_DisuseContract:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisuseContract); err != nil {
			return err
		}
	case *Response_Ok:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ok); err != nil {
			return err
		}
	case *Response_Exception:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Exception); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Value has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Response_UserCreate{msg}
		return true, err
	case 2: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ChangePubkey{msg}
		return true, err
	case 3: // value.createContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseCreateContract)
		err := b.DecodeMessage(msg)
		m.Value = &Response_CreateContract{msg}
		return true, err
	case 4: // value.launchSign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseLaunchSign)
		err := b.DecodeMessage(msg)
		m.Value = &Response_LaunchSign{msg}
		return true, err
	case 5: // value.creatorSign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseCreatorSign)
		err := b.DecodeMessage(msg)
		m.Value = &Response_CreatorSign{msg}
		return true, err
	case 6: // value.editContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseEditContract)
		err := b.DecodeMessage(msg)
		m.Value = &Response_EditContract{msg}
		return true, err
	case 7: // value.rejectContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseRejectContract)
		err := b.DecodeMessage(msg)
		m.Value = &Response_RejectContract{msg}
		return true, err
	case 8: // value.acceptContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseAcceptContract)
		err := b.DecodeMessage(msg)
		m.Value = &Response_AcceptContract{msg}
		return true, err
	case 9: // value.repairContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseRepairContract)
		err := b.DecodeMessage(msg)
		m.Value = &Response_RepairContract{msg}
		return true, err
	case 10: // value.disuseContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseDisuseContract)
		err := b.DecodeMessage(msg)
		m.Value = &Response_DisuseContract{msg}
		return true, err
	case 11: // value.ok
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseOK)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Ok{msg}
		return true, err
	case 12: // value.exception
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseException)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Exception{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_CreateContract:
		s := proto.Size(x.CreateContract)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_LaunchSign:
		s := proto.Size(x.LaunchSign)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_CreatorSign:
		s := proto.Size(x.CreatorSign)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_EditContract:
		s := proto.Size(x.EditContract)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RejectContract:
		s := proto.Size(x.RejectContract)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_AcceptContract:
		s := proto.Size(x.AcceptContract)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RepairContract:
		s := proto.Size(x.RepairContract)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_DisuseContract:
		s := proto.Size(x.DisuseContract)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Ok:
		s := proto.Size(x.Ok)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Exception:
		s := proto.Size(x.Exception)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ResponseException struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseException) Reset()                    { *m = ResponseException{} }
func (m *ResponseException) String() string            { return proto.CompactTextString(m) }
func (*ResponseException) ProtoMessage()               {}
func (*ResponseException) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ResponseException) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ResponseOK struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *ResponseOK) Reset()                    { *m = ResponseOK{} }
func (m *ResponseOK) String() string            { return proto.CompactTextString(m) }
func (*ResponseOK) ProtoMessage()               {}
func (*ResponseOK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ResponseOK) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Receipt struct {
	IsOk bool   `protobuf:"varint,1,opt,name=isOk" json:"isOk,omitempty"`
	Err  []byte `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (m *Receipt) Reset()                    { *m = Receipt{} }
func (m *Receipt) String() string            { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()               {}
func (*Receipt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Receipt) GetIsOk() bool {
	if m != nil {
		return m.IsOk
	}
	return false
}

func (m *Receipt) GetErr() []byte {
	if m != nil {
		return m.Err
	}
	return nil
}

type ResponseUserCreate struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseUserCreate) Reset()                    { *m = ResponseUserCreate{} }
func (m *ResponseUserCreate) String() string            { return proto.CompactTextString(m) }
func (*ResponseUserCreate) ProtoMessage()               {}
func (*ResponseUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ResponseUserCreate) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseUserCreate) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseChangePubkey struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseChangePubkey) Reset()                    { *m = ResponseChangePubkey{} }
func (m *ResponseChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*ResponseChangePubkey) ProtoMessage()               {}
func (*ResponseChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ResponseChangePubkey) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseChangePubkey) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseCreateContract struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseCreateContract) Reset()                    { *m = ResponseCreateContract{} }
func (m *ResponseCreateContract) String() string            { return proto.CompactTextString(m) }
func (*ResponseCreateContract) ProtoMessage()               {}
func (*ResponseCreateContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ResponseCreateContract) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseCreateContract) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseLaunchSign struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseLaunchSign) Reset()                    { *m = ResponseLaunchSign{} }
func (m *ResponseLaunchSign) String() string            { return proto.CompactTextString(m) }
func (*ResponseLaunchSign) ProtoMessage()               {}
func (*ResponseLaunchSign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ResponseLaunchSign) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseLaunchSign) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseCreatorSign struct {
	InstructionId int64 `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
}

func (m *ResponseCreatorSign) Reset()                    { *m = ResponseCreatorSign{} }
func (m *ResponseCreatorSign) String() string            { return proto.CompactTextString(m) }
func (*ResponseCreatorSign) ProtoMessage()               {}
func (*ResponseCreatorSign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ResponseCreatorSign) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

type ResponseEditContract struct {
	InstructionId int64 `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
}

func (m *ResponseEditContract) Reset()                    { *m = ResponseEditContract{} }
func (m *ResponseEditContract) String() string            { return proto.CompactTextString(m) }
func (*ResponseEditContract) ProtoMessage()               {}
func (*ResponseEditContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ResponseEditContract) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

type ResponseRejectContract struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseRejectContract) Reset()                    { *m = ResponseRejectContract{} }
func (m *ResponseRejectContract) String() string            { return proto.CompactTextString(m) }
func (*ResponseRejectContract) ProtoMessage()               {}
func (*ResponseRejectContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ResponseRejectContract) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseRejectContract) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseAcceptContract struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseAcceptContract) Reset()                    { *m = ResponseAcceptContract{} }
func (m *ResponseAcceptContract) String() string            { return proto.CompactTextString(m) }
func (*ResponseAcceptContract) ProtoMessage()               {}
func (*ResponseAcceptContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ResponseAcceptContract) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseAcceptContract) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseRepairContract struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseRepairContract) Reset()                    { *m = ResponseRepairContract{} }
func (m *ResponseRepairContract) String() string            { return proto.CompactTextString(m) }
func (*ResponseRepairContract) ProtoMessage()               {}
func (*ResponseRepairContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ResponseRepairContract) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseRepairContract) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseDisuseContract struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseDisuseContract) Reset()                    { *m = ResponseDisuseContract{} }
func (m *ResponseDisuseContract) String() string            { return proto.CompactTextString(m) }
func (*ResponseDisuseContract) ProtoMessage()               {}
func (*ResponseDisuseContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ResponseDisuseContract) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseDisuseContract) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type User struct {
	Pubkey []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Info   []byte `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *User) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *User) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type Signer struct {
	Uid    string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Signed bool   `protobuf:"varint,2,opt,name=signed" json:"signed,omitempty"`
}

func (m *Signer) Reset()                    { *m = Signer{} }
func (m *Signer) String() string            { return proto.CompactTextString(m) }
func (*Signer) ProtoMessage()               {}
func (*Signer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *Signer) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Signer) GetSigned() bool {
	if m != nil {
		return m.Signed
	}
	return false
}

type Contract struct {
	EndT         int64         `protobuf:"varint,1,opt,name=endT" json:"endT,omitempty"`
	Info         []byte        `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	State        ContractState `protobuf:"varint,3,opt,name=state,enum=contract.ContractState" json:"state,omitempty"`
	CreatorUid   string        `protobuf:"bytes,4,opt,name=creatorUid" json:"creatorUid,omitempty"`
	Signers      []*Signer     `protobuf:"bytes,5,rep,name=signers" json:"signers,omitempty"`
	CreatorSignT int64         `protobuf:"varint,6,opt,name=creatorSignT" json:"creatorSignT,omitempty"`
	HistoryInfos [][]byte      `protobuf:"bytes,7,rep,name=historyInfos,proto3" json:"historyInfos,omitempty"`
	Rejectors    []string      `protobuf:"bytes,8,rep,name=rejectors" json:"rejectors,omitempty"`
}

func (m *Contract) Reset()                    { *m = Contract{} }
func (m *Contract) String() string            { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()               {}
func (*Contract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Contract) GetEndT() int64 {
	if m != nil {
		return m.EndT
	}
	return 0
}

func (m *Contract) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Contract) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

func (m *Contract) GetCreatorUid() string {
	if m != nil {
		return m.CreatorUid
	}
	return ""
}

func (m *Contract) GetSigners() []*Signer {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *Contract) GetCreatorSignT() int64 {
	if m != nil {
		return m.CreatorSignT
	}
	return 0
}

func (m *Contract) GetHistoryInfos() [][]byte {
	if m != nil {
		return m.HistoryInfos
	}
	return nil
}

func (m *Contract) GetRejectors() []string {
	if m != nil {
		return m.Rejectors
	}
	return nil
}

type Event struct {
	// Types that are valid to be assigned to Value:
	//	*Event_UserCreate
	//	*Event_ChangePubkey
	//	*Event_CreateContract
	//	*Event_LaunchSign
	//	*Event_RejectContract
	//	*Event_AcceptContract
	//	*Event_RepairContract
	//	*Event_DisuseContract
	Value isEvent_Value `protobuf_oneof:"value"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

type isEvent_Value interface {
	isEvent_Value()
}

type Event_UserCreate struct {
	UserCreate *EventUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Event_ChangePubkey struct {
	ChangePubkey *EventChangePubkey `protobuf:"bytes,2,opt,name=changePubkey,oneof"`
}
type Event_CreateContract struct {
	CreateContract *EventCreateContract `protobuf:"bytes,3,opt,name=createContract,oneof"`
}
type Event_LaunchSign struct {
	LaunchSign *EventLaunchSign `protobuf:"bytes,4,opt,name=launchSign,oneof"`
}
type Event_RejectContract struct {
	RejectContract *EventRejectContract `protobuf:"bytes,5,opt,name=rejectContract,oneof"`
}
type Event_AcceptContract struct {
	AcceptContract *EventAcceptContract `protobuf:"bytes,6,opt,name=acceptContract,oneof"`
}
type Event_RepairContract struct {
	RepairContract *EventRepairContract `protobuf:"bytes,7,opt,name=repairContract,oneof"`
}
type Event_DisuseContract struct {
	DisuseContract *EventDisuseContract `protobuf:"bytes,8,opt,name=disuseContract,oneof"`
}

func (*Event_UserCreate) isEvent_Value()     {}
func (*Event_ChangePubkey) isEvent_Value()   {}
func (*Event_CreateContract) isEvent_Value() {}
func (*Event_LaunchSign) isEvent_Value()     {}
func (*Event_RejectContract) isEvent_Value() {}
func (*Event_AcceptContract) isEvent_Value() {}
func (*Event_RepairContract) isEvent_Value() {}
func (*Event_DisuseContract) isEvent_Value() {}

func (m *Event) GetValue() isEvent_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Event) GetUserCreate() *EventUserCreate {
	if x, ok := m.GetValue().(*Event_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Event) GetChangePubkey() *EventChangePubkey {
	if x, ok := m.GetValue().(*Event_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Event) GetCreateContract() *EventCreateContract {
	if x, ok := m.GetValue().(*Event_CreateContract); ok {
		return x.CreateContract
	}
	return nil
}

func (m *Event) GetLaunchSign() *EventLaunchSign {
	if x, ok := m.GetValue().(*Event_LaunchSign); ok {
		return x.LaunchSign
	}
	return nil
}

func (m *Event) GetRejectContract() *EventRejectContract {
	if x, ok := m.GetValue().(*Event_RejectContract); ok {
		return x.RejectContract
	}
	return nil
}

func (m *Event) GetAcceptContract() *EventAcceptContract {
	if x, ok := m.GetValue().(*Event_AcceptContract); ok {
		return x.AcceptContract
	}
	return nil
}

func (m *Event) GetRepairContract() *EventRepairContract {
	if x, ok := m.GetValue().(*Event_RepairContract); ok {
		return x.RepairContract
	}
	return nil
}

func (m *Event) GetDisuseContract() *EventDisuseContract {
	if x, ok := m.GetValue().(*Event_DisuseContract); ok {
		return x.DisuseContract
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_UserCreate)(nil),
		(*Event_ChangePubkey)(nil),
		(*Event_CreateContract)(nil),
		(*Event_LaunchSign)(nil),
		(*Event_RejectContract)(nil),
		(*Event_AcceptContract)(nil),
		(*Event_RepairContract)(nil),
		(*Event_DisuseContract)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// value
	switch x := m.Value.(type) {
	case *Event_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Event_ChangePubkey:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Event_CreateContract:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateContract); err != nil {
			return err
		}
	case *Event_LaunchSign:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LaunchSign); err != nil {
			return err
		}
	case *Event_RejectContract:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RejectContract); err != nil {
			return err
		}
	case *Event_AcceptContract:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AcceptContract); err != nil {
			return err
		}
	case *Event_RepairContract:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepairContract); err != nil {
			return err
		}
	case *Event_DisuseContract:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DisuseContract); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Value has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Event_UserCreate{msg}
		return true, err
	case 2: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ChangePubkey{msg}
		return true, err
	case 3: // value.createContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventCreateContract)
		err := b.DecodeMessage(msg)
		m.Value = &Event_CreateContract{msg}
		return true, err
	case 4: // value.launchSign
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventLaunchSign)
		err := b.DecodeMessage(msg)
		m.Value = &Event_LaunchSign{msg}
		return true, err
	case 5: // value.rejectContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventRejectContract)
		err := b.DecodeMessage(msg)
		m.Value = &Event_RejectContract{msg}
		return true, err
	case 6: // value.acceptContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventAcceptContract)
		err := b.DecodeMessage(msg)
		m.Value = &Event_AcceptContract{msg}
		return true, err
	case 7: // value.repairContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventRepairContract)
		err := b.DecodeMessage(msg)
		m.Value = &Event_RepairContract{msg}
		return true, err
	case 8: // value.disuseContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventDisuseContract)
		err := b.DecodeMessage(msg)
		m.Value = &Event_DisuseContract{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// value
	switch x := m.Value.(type) {
	case *Event_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_CreateContract:
		s := proto.Size(x.CreateContract)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_LaunchSign:
		s := proto.Size(x.LaunchSign)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_RejectContract:
		s := proto.Size(x.RejectContract)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_AcceptContract:
		s := proto.Size(x.AcceptContract)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_RepairContract:
		s := proto.Size(x.RepairContract)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_DisuseContract:
		s := proto.Size(x.DisuseContract)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EventUserCreate struct {
	Uid string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *EventUserCreate) Reset()                    { *m = EventUserCreate{} }
func (m *EventUserCreate) String() string            { return proto.CompactTextString(m) }
func (*EventUserCreate) ProtoMessage()               {}
func (*EventUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *EventUserCreate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type EventChangePubkey struct {
	NewPubkey []byte `protobuf:"bytes,1,opt,name=newPubkey,proto3" json:"newPubkey,omitempty"`
	Uid       string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *EventChangePubkey) Reset()                    { *m = EventChangePubkey{} }
func (m *EventChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*EventChangePubkey) ProtoMessage()               {}
func (*EventChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *EventChangePubkey) GetNewPubkey() []byte {
	if m != nil {
		return m.NewPubkey
	}
	return nil
}

func (m *EventChangePubkey) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type EventCreateContract struct {
	ContractId string        `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	State      ContractState `protobuf:"varint,2,opt,name=state,enum=contract.ContractState" json:"state,omitempty"`
}

func (m *EventCreateContract) Reset()                    { *m = EventCreateContract{} }
func (m *EventCreateContract) String() string            { return proto.CompactTextString(m) }
func (*EventCreateContract) ProtoMessage()               {}
func (*EventCreateContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *EventCreateContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *EventCreateContract) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

type EventLaunchSign struct {
	State ContractState `protobuf:"varint,1,opt,name=state,enum=contract.ContractState" json:"state,omitempty"`
}

func (m *EventLaunchSign) Reset()                    { *m = EventLaunchSign{} }
func (m *EventLaunchSign) String() string            { return proto.CompactTextString(m) }
func (*EventLaunchSign) ProtoMessage()               {}
func (*EventLaunchSign) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *EventLaunchSign) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

type EventRejectContract struct {
	State ContractState `protobuf:"varint,1,opt,name=state,enum=contract.ContractState" json:"state,omitempty"`
}

func (m *EventRejectContract) Reset()                    { *m = EventRejectContract{} }
func (m *EventRejectContract) String() string            { return proto.CompactTextString(m) }
func (*EventRejectContract) ProtoMessage()               {}
func (*EventRejectContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *EventRejectContract) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

type EventAcceptContract struct {
	State ContractState `protobuf:"varint,1,opt,name=state,enum=contract.ContractState" json:"state,omitempty"`
}

func (m *EventAcceptContract) Reset()                    { *m = EventAcceptContract{} }
func (m *EventAcceptContract) String() string            { return proto.CompactTextString(m) }
func (*EventAcceptContract) ProtoMessage()               {}
func (*EventAcceptContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *EventAcceptContract) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

type EventRepairContract struct {
	State ContractState `protobuf:"varint,1,opt,name=state,enum=contract.ContractState" json:"state,omitempty"`
}

func (m *EventRepairContract) Reset()                    { *m = EventRepairContract{} }
func (m *EventRepairContract) String() string            { return proto.CompactTextString(m) }
func (*EventRepairContract) ProtoMessage()               {}
func (*EventRepairContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *EventRepairContract) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

type EventDisuseContract struct {
	State ContractState `protobuf:"varint,1,opt,name=state,enum=contract.ContractState" json:"state,omitempty"`
}

func (m *EventDisuseContract) Reset()                    { *m = EventDisuseContract{} }
func (m *EventDisuseContract) String() string            { return proto.CompactTextString(m) }
func (*EventDisuseContract) ProtoMessage()               {}
func (*EventDisuseContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *EventDisuseContract) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

func init() {
	proto.RegisterType((*Request)(nil), "contract.Request")
	proto.RegisterType((*RequestUserCreate)(nil), "contract.RequestUserCreate")
	proto.RegisterType((*RequestChangePubkey)(nil), "contract.RequestChangePubkey")
	proto.RegisterType((*RequestCreateContract)(nil), "contract.RequestCreateContract")
	proto.RegisterType((*RequestLaunchSign)(nil), "contract.RequestLaunchSign")
	proto.RegisterType((*RequestCreatorSign)(nil), "contract.RequestCreatorSign")
	proto.RegisterType((*RequestEditContract)(nil), "contract.RequestEditContract")
	proto.RegisterType((*RequestRejectContract)(nil), "contract.RequestRejectContract")
	proto.RegisterType((*RequestAcceptContract)(nil), "contract.RequestAcceptContract")
	proto.RegisterType((*RequestRepairContract)(nil), "contract.RequestRepairContract")
	proto.RegisterType((*RequestDisuseContract)(nil), "contract.RequestDisuseContract")
	proto.RegisterType((*Response)(nil), "contract.Response")
	proto.RegisterType((*ResponseException)(nil), "contract.ResponseException")
	proto.RegisterType((*ResponseOK)(nil), "contract.ResponseOK")
	proto.RegisterType((*Receipt)(nil), "contract.Receipt")
	proto.RegisterType((*ResponseUserCreate)(nil), "contract.ResponseUserCreate")
	proto.RegisterType((*ResponseChangePubkey)(nil), "contract.ResponseChangePubkey")
	proto.RegisterType((*ResponseCreateContract)(nil), "contract.ResponseCreateContract")
	proto.RegisterType((*ResponseLaunchSign)(nil), "contract.ResponseLaunchSign")
	proto.RegisterType((*ResponseCreatorSign)(nil), "contract.ResponseCreatorSign")
	proto.RegisterType((*ResponseEditContract)(nil), "contract.ResponseEditContract")
	proto.RegisterType((*ResponseRejectContract)(nil), "contract.ResponseRejectContract")
	proto.RegisterType((*ResponseAcceptContract)(nil), "contract.ResponseAcceptContract")
	proto.RegisterType((*ResponseRepairContract)(nil), "contract.ResponseRepairContract")
	proto.RegisterType((*ResponseDisuseContract)(nil), "contract.ResponseDisuseContract")
	proto.RegisterType((*User)(nil), "contract.User")
	proto.RegisterType((*Signer)(nil), "contract.Signer")
	proto.RegisterType((*Contract)(nil), "contract.Contract")
	proto.RegisterType((*Event)(nil), "contract.Event")
	proto.RegisterType((*EventUserCreate)(nil), "contract.EventUserCreate")
	proto.RegisterType((*EventChangePubkey)(nil), "contract.EventChangePubkey")
	proto.RegisterType((*EventCreateContract)(nil), "contract.EventCreateContract")
	proto.RegisterType((*EventLaunchSign)(nil), "contract.EventLaunchSign")
	proto.RegisterType((*EventRejectContract)(nil), "contract.EventRejectContract")
	proto.RegisterType((*EventAcceptContract)(nil), "contract.EventAcceptContract")
	proto.RegisterType((*EventRepairContract)(nil), "contract.EventRepairContract")
	proto.RegisterType((*EventDisuseContract)(nil), "contract.EventDisuseContract")
	proto.RegisterEnum("contract.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("contract.ContractState", ContractState_name, ContractState_value)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x72, 0xe3, 0x34,
	0x14, 0xde, 0xfc, 0x27, 0x27, 0x4d, 0xea, 0xaa, 0xed, 0x12, 0x66, 0xdb, 0x65, 0xc7, 0xfc, 0x0c,
	0x74, 0x86, 0x32, 0x64, 0x99, 0xe1, 0xa2, 0xb0, 0xb3, 0x25, 0xed, 0x94, 0x14, 0x76, 0x16, 0x9c,
	0xf6, 0x9a, 0xf1, 0x3a, 0x6a, 0x6b, 0xb6, 0x63, 0x07, 0xdb, 0xe9, 0xd2, 0x77, 0xe0, 0x8e, 0xd7,
	0xe0, 0x09, 0xb8, 0xe5, 0xb5, 0xb8, 0xe0, 0x48, 0xfe, 0x91, 0x64, 0xcb, 0x75, 0xe9, 0xb4, 0x77,
	0x92, 0x7c, 0xce, 0xa7, 0x73, 0x8e, 0x74, 0xf4, 0x7d, 0x09, 0xf4, 0xec, 0x85, 0xbb, 0xbb, 0x08,
	0xfc, 0xc8, 0x27, 0x5d, 0xc7, 0xf7, 0xa2, 0xc0, 0x76, 0x22, 0xf3, 0xdf, 0x36, 0x74, 0x2c, 0xfa,
	0xdb, 0x92, 0x86, 0x11, 0xf9, 0x16, 0x60, 0x19, 0xd2, 0x60, 0x12, 0x50, 0x3b, 0xa2, 0xa3, 0xda,
	0xb3, 0xda, 0xa7, 0xfd, 0xf1, 0x93, 0xdd, 0xd4, 0x74, 0x37, 0x31, 0x3b, 0xcd, 0x4c, 0xbe, 0x7f,
	0x64, 0x49, 0x0e, 0x64, 0x02, 0x2b, 0xce, 0x85, 0xed, 0x9d, 0xd3, 0x9f, 0x96, 0x6f, 0xde, 0xd2,
	0xeb, 0x51, 0x9d, 0x03, 0x6c, 0x17, 0x00, 0x26, 0x92, 0x11, 0x42, 0x28, 0x4e, 0x64, 0x0a, 0x43,
	0x87, 0xc3, 0x4d, 0x12, 0xaf, 0x51, 0x83, 0xc3, 0x7c, 0x50, 0x84, 0x51, 0xcc, 0x10, 0x28, 0xe7,
	0xc8, 0xd2, 0xb9, 0xb4, 0x97, 0x9e, 0x73, 0x31, 0x73, 0xcf, 0xbd, 0x51, 0xb3, 0x24, 0x9d, 0x1f,
	0x33, 0x13, 0x96, 0x8e, 0x70, 0x20, 0x2f, 0xa1, 0xcf, 0x01, 0xfd, 0x80, 0xfb, 0xb7, 0xb8, 0xff,
	0x96, 0x3e, 0x8c, 0xd8, 0x06, 0x01, 0x64, 0x17, 0x56, 0x10, 0x3a, 0x77, 0xa3, 0x2c, 0x93, 0x76,
	0x49, 0x41, 0x0e, 0x25, 0x23, 0x56, 0x10, 0xd9, 0x89, 0x15, 0x24, 0xa0, 0xbf, 0x52, 0x47, 0xc0,
	0x74, 0x4a, 0x0a, 0x62, 0x29, 0x66, 0xac, 0x20, 0xaa, 0x23, 0x83, 0xb2, 0x1d, 0x87, 0x2e, 0x04,
	0x54, 0xb7, 0x04, 0x6a, 0x5f, 0x31, 0x63, 0x50, 0xaa, 0x63, 0x1c, 0xd5, 0xc2, 0x76, 0x83, 0x0c,
	0xaa, 0x57, 0x1a, 0x95, 0x6c, 0x16, 0x47, 0x25, 0xaf, 0x30, 0xa8, 0xb9, 0x1b, 0xe2, 0x3d, 0xca,
	0xa0, 0xa0, 0x04, 0xea, 0x40, 0x31, 0x63, 0x50, 0xaa, 0x23, 0x31, 0xa0, 0xb1, 0x74, 0xe7, 0xa3,
	0x3e, 0xfa, 0xf7, 0x2c, 0x36, 0x24, 0x1f, 0xc1, 0xc0, 0xf5, 0xc2, 0x28, 0x58, 0x3a, 0x91, 0xeb,
	0x7b, 0xd3, 0xf9, 0x68, 0x05, 0xbf, 0x35, 0x2c, 0x75, 0x91, 0x3c, 0x86, 0xf6, 0x22, 0xbe, 0xb3,
	0x03, 0xfc, 0xbc, 0x62, 0x25, 0x33, 0x42, 0xa0, 0x19, 0xb2, 0xb3, 0x1f, 0xf2, 0x55, 0x3e, 0x26,
	0x5f, 0x42, 0xd7, 0x4e, 0xc1, 0x56, 0x71, 0x7d, 0x38, 0xde, 0x14, 0x81, 0xbe, 0xa2, 0x61, 0x68,
	0x9f, 0xd3, 0x93, 0xeb, 0x05, 0xb5, 0x32, 0x33, 0x16, 0x96, 0xbf, 0x38, 0x19, 0x19, 0x7c, 0x6b,
	0x36, 0xfc, 0xae, 0x03, 0xad, 0x2b, 0xfb, 0x72, 0x49, 0xcd, 0x9f, 0x61, 0xad, 0xd0, 0x56, 0x69,
	0x1a, 0x35, 0x91, 0x86, 0x08, 0xb0, 0x9e, 0x0f, 0xd0, 0xf5, 0xce, 0x7c, 0xde, 0x23, 0x18, 0x20,
	0x1b, 0x9b, 0xcf, 0x61, 0x5d, 0xd3, 0x68, 0x64, 0x0b, 0x7a, 0x1e, 0x7d, 0x97, 0xb4, 0x66, 0x8d,
	0xdb, 0x8b, 0x05, 0x73, 0x0f, 0x36, 0xb5, 0x6d, 0x45, 0x86, 0x50, 0xcf, 0x42, 0xc1, 0x51, 0xb6,
	0x63, 0x5d, 0xda, 0xd1, 0xce, 0x92, 0x10, 0xcd, 0x44, 0x9e, 0x02, 0xa4, 0x65, 0x99, 0xa6, 0x00,
	0xd2, 0x0a, 0x03, 0xa2, 0xde, 0xfc, 0x84, 0x03, 0x35, 0x2c, 0x3e, 0x26, 0x23, 0xe8, 0xb0, 0x1a,
	0xd3, 0x20, 0xc4, 0x8c, 0x1a, 0xe8, 0x90, 0x4e, 0xcd, 0xaf, 0x80, 0x14, 0xfb, 0xad, 0x6a, 0x0f,
	0x73, 0x9a, 0x95, 0x42, 0x6e, 0xb1, 0xdb, 0x84, 0x56, 0xc8, 0xf1, 0xeb, 0xac, 0x40, 0x6a, 0x9b,
	0x55, 0xc6, 0x20, 0x1c, 0xd5, 0xa6, 0xaa, 0x74, 0xfc, 0x45, 0xda, 0x51, 0x69, 0x98, 0x3b, 0x84,
	0x9f, 0x55, 0xbb, 0x21, 0xaa, 0x2d, 0x45, 0xa6, 0x36, 0x56, 0x65, 0x64, 0xff, 0xb4, 0xa1, 0x6b,
	0xd1, 0x70, 0xe1, 0x7b, 0x21, 0x25, 0x2f, 0x34, 0xa4, 0xa1, 0xbc, 0x92, 0xb1, 0x5d, 0x29, 0x6b,
	0x1c, 0x68, 0x59, 0xe3, 0x69, 0x11, 0xe1, 0x46, 0xda, 0x38, 0x2e, 0xa1, 0x8d, 0x67, 0x1a, 0x9c,
	0x2a, 0xde, 0x78, 0xa1, 0xe1, 0x0d, 0x4d, 0x46, 0xa5, 0xc4, 0xb1, 0xaf, 0x23, 0x8e, 0xed, 0x92,
	0x40, 0xf4, 0xcc, 0x71, 0xa0, 0x65, 0x0e, 0x4d, 0x51, 0x6e, 0xa4, 0x8e, 0xe3, 0x12, 0xea, 0xd0,
	0x14, 0xa5, 0x92, 0x3b, 0x8e, 0x4b, 0xb8, 0x43, 0x83, 0x55, 0x49, 0x1e, 0xc7, 0x25, 0xe4, 0xa1,
	0x8d, 0xab, 0x82, 0x3d, 0x8e, 0x4b, 0xd8, 0x43, 0x83, 0x55, 0x49, 0x1f, 0x9f, 0x40, 0xdd, 0x7f,
	0xcb, 0xd9, 0xa3, 0x3f, 0xde, 0x28, 0xfa, 0xbf, 0xfe, 0x01, 0x7d, 0xd0, 0x82, 0xec, 0x41, 0x8f,
	0xfe, 0xce, 0x32, 0xc2, 0xe7, 0x9d, 0x13, 0x4a, 0x4e, 0x57, 0x24, 0x47, 0x93, 0x9a, 0xa0, 0x97,
	0xb0, 0x17, 0x4f, 0xff, 0x67, 0xec, 0xd5, 0xcc, 0x99, 0x92, 0x0d, 0x68, 0xd1, 0x20, 0xf0, 0x83,
	0xa4, 0xeb, 0xe2, 0x89, 0xb9, 0x05, 0x20, 0x82, 0x60, 0x4f, 0x32, 0x86, 0xc9, 0x0c, 0xba, 0x2c,
	0x1c, 0xf3, 0x0b, 0xa6, 0xe0, 0x1c, 0xea, 0x2e, 0x22, 0xde, 0xfa, 0xe1, 0xeb, 0xf4, 0x23, 0x1f,
	0x33, 0x36, 0x41, 0x94, 0xe4, 0x35, 0x60, 0x43, 0x7c, 0xaf, 0x49, 0xb1, 0x2d, 0x8b, 0x54, 0x59,
	0xd3, 0x51, 0xe5, 0xc7, 0x18, 0xe0, 0x15, 0xf5, 0xa2, 0xa4, 0x4f, 0x57, 0x45, 0xde, 0x87, 0x6c,
	0xd9, 0x8a, 0xbf, 0x9a, 0x0e, 0x6c, 0xe8, 0xfa, 0xf6, 0x7e, 0x37, 0xa1, 0xf0, 0x58, 0xdf, 0xd4,
	0xf7, 0xbb, 0x8d, 0x54, 0x2e, 0x89, 0xdf, 0xee, 0x75, 0x8b, 0x3d, 0x46, 0x54, 0x85, 0x57, 0xe1,
	0x76, 0x7b, 0x98, 0xdf, 0x88, 0x5a, 0x2b, 0x34, 0x77, 0x3b, 0x6f, 0xa9, 0x88, 0x39, 0x66, 0x7b,
	0xa8, 0xb3, 0xca, 0xf1, 0xe0, 0x43, 0x6d, 0x93, 0x63, 0xcd, 0x87, 0xda, 0x26, 0xc7, 0x9d, 0xf7,
	0xba, 0xcd, 0x18, 0x9a, 0xac, 0x41, 0x25, 0xf9, 0x57, 0xd3, 0xca, 0x3f, 0x59, 0xa8, 0x8c, 0xa1,
	0x3d, 0xe3, 0xa2, 0x49, 0x2f, 0x23, 0xb9, 0xa0, 0x9a, 0x73, 0x8f, 0xae, 0x95, 0xcc, 0xcc, 0x3f,
	0xeb, 0xd0, 0xcd, 0x32, 0x48, 0xa5, 0x42, 0x4d, 0x12, 0x66, 0x3a, 0x49, 0xf1, 0x39, 0xb4, 0xc2,
	0x88, 0x71, 0x7e, 0x83, 0xab, 0xe0, 0xf7, 0x44, 0x0e, 0x29, 0xd4, 0x8c, 0x7d, 0xb6, 0x62, 0x2b,
	0x2e, 0x2a, 0xe2, 0xab, 0x7d, 0x8a, 0x41, 0x35, 0x13, 0x51, 0x91, 0xad, 0x90, 0x1d, 0xa1, 0xfd,
	0x5a, 0xa8, 0xfd, 0xfa, 0x63, 0x43, 0x00, 0xc6, 0x09, 0x65, 0x6a, 0x90, 0x98, 0xa8, 0x19, 0x44,
	0x9b, 0x9c, 0x70, 0x7a, 0x6c, 0x58, 0xca, 0x1a, 0xb3, 0xb9, 0x70, 0x43, 0x9c, 0x5e, 0x4f, 0x31,
	0xda, 0x10, 0xa9, 0xaf, 0x81, 0xa1, 0x2b, 0x6b, 0x4c, 0x13, 0xc7, 0x34, 0xe7, 0xe3, 0xae, 0x5d,
	0xae, 0x38, 0xc5, 0x82, 0xf9, 0x77, 0x13, 0x5a, 0xfc, 0x38, 0xf0, 0xc1, 0x2f, 0x6a, 0x9c, 0xf7,
	0x73, 0x67, 0x56, 0x2a, 0x70, 0xf6, 0xb5, 0x02, 0xe7, 0x49, 0xce, 0xfd, 0x46, 0x75, 0x73, 0x54,
	0xa2, 0x6e, 0xb6, 0xf3, 0x20, 0x55, 0xd2, 0x66, 0x4f, 0x23, 0x6d, 0xf2, 0x89, 0x94, 0xea, 0x9a,
	0xa3, 0x82, 0x9c, 0x68, 0x69, 0xa3, 0xa8, 0xd4, 0x12, 0x47, 0x05, 0x2d, 0xd1, 0xd6, 0x02, 0x55,
	0x0a, 0x89, 0xa3, 0x82, 0x90, 0xe8, 0x94, 0x44, 0x54, 0xa1, 0x22, 0x8e, 0x0a, 0x2a, 0xa2, 0xab,
	0x05, 0xaa, 0x92, 0x10, 0x82, 0xdd, 0x3f, 0x84, 0xd5, 0xdc, 0xb5, 0x28, 0xf6, 0xa3, 0x39, 0x81,
	0xb5, 0xc2, 0xe1, 0xdf, 0xfc, 0x43, 0x2d, 0x05, 0xa9, 0x0b, 0x90, 0x39, 0xac, 0x6b, 0x0e, 0xbf,
	0xf2, 0x57, 0x42, 0xd6, 0xbe, 0xf5, 0xdb, 0xb4, 0xaf, 0xf9, 0x32, 0xc9, 0x47, 0x62, 0xc0, 0x0c,
	0xa1, 0x76, 0x2b, 0x84, 0x83, 0x24, 0xce, 0x1c, 0xcb, 0xdc, 0x11, 0x25, 0x47, 0x22, 0x77, 0x8e,
	0x45, 0xb9, 0x06, 0x77, 0x44, 0xc9, 0x51, 0xc0, 0xff, 0x43, 0xd9, 0xf9, 0xab, 0x0e, 0x7d, 0xe9,
	0x7f, 0x03, 0xb2, 0x02, 0xdd, 0x57, 0xe1, 0xf9, 0x21, 0x13, 0x7e, 0xc6, 0x23, 0xd2, 0x87, 0x0e,
	0xce, 0xa6, 0x9e, 0x1b, 0x19, 0x35, 0xb2, 0x8a, 0x96, 0xe1, 0xf9, 0xec, 0x62, 0x19, 0x1d, 0xf8,
	0xef, 0x3c, 0xa3, 0x9e, 0xd8, 0x4e, 0x2e, 0xfd, 0x90, 0x1a, 0x0d, 0xb2, 0x06, 0x03, 0x9c, 0x89,
	0x1b, 0x67, 0x34, 0xc9, 0x3a, 0xac, 0x32, 0x03, 0xe9, 0x7e, 0x19, 0x2d, 0xb2, 0x09, 0x6b, 0x6c,
	0x51, 0xb9, 0x2f, 0x46, 0x3b, 0x71, 0x17, 0x07, 0x6c, 0x74, 0xf0, 0xdd, 0x1f, 0xa6, 0x96, 0xf1,
	0xbb, 0x6a, 0x74, 0x13, 0x48, 0x59, 0x69, 0x18, 0xbd, 0x04, 0x52, 0x3d, 0x5a, 0x03, 0x92, 0x65,
	0xf5, 0xac, 0x8c, 0x7e, 0x66, 0x2d, 0x17, 0xdf, 0x58, 0x49, 0x96, 0xd5, 0x6a, 0x1a, 0x83, 0x34,
	0x49, 0x7f, 0xe9, 0x45, 0xc6, 0x70, 0xe7, 0x8f, 0x1a, 0x0c, 0x94, 0x3a, 0xb2, 0xaa, 0x4c, 0x66,
	0xa7, 0xde, 0x9c, 0x9e, 0xb9, 0x48, 0x66, 0x58, 0xb3, 0x01, 0xf4, 0x26, 0xb3, 0x38, 0xbd, 0x39,
	0x56, 0x6d, 0x08, 0x30, 0x99, 0xc5, 0x69, 0xe1, 0x9c, 0x17, 0x6d, 0x32, 0x63, 0xf1, 0xe3, 0xac,
	0x11, 0x7f, 0x8d, 0x43, 0xc1, 0x79, 0x33, 0x9d, 0xb3, 0x44, 0x70, 0xde, 0x8a, 0xd1, 0x0f, 0xcf,
	0xce, 0x70, 0xee, 0x5e, 0x51, 0x2c, 0x13, 0x77, 0x8f, 0x83, 0x34, 0x3a, 0x6f, 0xda, 0xfc, 0x0f,
	0xd5, 0xe7, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x72, 0xf5, 0xc1, 0xcf, 0x5d, 0x15, 0x00, 0x00,
}
