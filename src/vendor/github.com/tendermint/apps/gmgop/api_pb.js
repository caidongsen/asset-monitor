/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gmgop.Assert', null, global);
goog.exportSymbol('proto.gmgop.AssertState', null, global);
goog.exportSymbol('proto.gmgop.Contract', null, global);
goog.exportSymbol('proto.gmgop.ContractState', null, global);
goog.exportSymbol('proto.gmgop.Event', null, global);
goog.exportSymbol('proto.gmgop.EventAssertCreate', null, global);
goog.exportSymbol('proto.gmgop.EventAssertDelete', null, global);
goog.exportSymbol('proto.gmgop.EventChangePubkey', null, global);
goog.exportSymbol('proto.gmgop.EventContractAgree', null, global);
goog.exportSymbol('proto.gmgop.EventContractCreate', null, global);
goog.exportSymbol('proto.gmgop.EventContractReject', null, global);
goog.exportSymbol('proto.gmgop.EventDeliverAssert', null, global);
goog.exportSymbol('proto.gmgop.EventDeliverAssertConfirm', null, global);
goog.exportSymbol('proto.gmgop.EventFin', null, global);
goog.exportSymbol('proto.gmgop.EventRecallContract', null, global);
goog.exportSymbol('proto.gmgop.EventUserCreate', null, global);
goog.exportSymbol('proto.gmgop.MessageType', null, global);
goog.exportSymbol('proto.gmgop.Receipt', null, global);
goog.exportSymbol('proto.gmgop.Request', null, global);
goog.exportSymbol('proto.gmgop.RequestBuContractCreate', null, global);
goog.exportSymbol('proto.gmgop.RequestBuDeliverAssertConfirm', null, global);
goog.exportSymbol('proto.gmgop.RequestBuRecallContract', null, global);
goog.exportSymbol('proto.gmgop.RequestChangePubkey', null, global);
goog.exportSymbol('proto.gmgop.RequestGopAssertCreate', null, global);
goog.exportSymbol('proto.gmgop.RequestGopAssertDelete', null, global);
goog.exportSymbol('proto.gmgop.RequestGopContractAgree', null, global);
goog.exportSymbol('proto.gmgop.RequestGopContractFin', null, global);
goog.exportSymbol('proto.gmgop.RequestGopContractReject', null, global);
goog.exportSymbol('proto.gmgop.RequestGopDeliverAssert', null, global);
goog.exportSymbol('proto.gmgop.RequestUserCreate', null, global);
goog.exportSymbol('proto.gmgop.Response', null, global);
goog.exportSymbol('proto.gmgop.ResponseAssertCreate', null, global);
goog.exportSymbol('proto.gmgop.ResponseAssertDelete', null, global);
goog.exportSymbol('proto.gmgop.ResponseChangePubkey', null, global);
goog.exportSymbol('proto.gmgop.ResponseContractAgree', null, global);
goog.exportSymbol('proto.gmgop.ResponseContractCreate', null, global);
goog.exportSymbol('proto.gmgop.ResponseContractReject', null, global);
goog.exportSymbol('proto.gmgop.ResponseDeliverAssert', null, global);
goog.exportSymbol('proto.gmgop.ResponseDeliverAssertConfirm', null, global);
goog.exportSymbol('proto.gmgop.ResponseException', null, global);
goog.exportSymbol('proto.gmgop.ResponseFin', null, global);
goog.exportSymbol('proto.gmgop.ResponseOK', null, global);
goog.exportSymbol('proto.gmgop.ResponseRecallContract', null, global);
goog.exportSymbol('proto.gmgop.ResponseUserCreate', null, global);
goog.exportSymbol('proto.gmgop.Role', null, global);
goog.exportSymbol('proto.gmgop.User', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gmgop.Request.oneofGroups_);
};
goog.inherits(proto.gmgop.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.Request.displayName = 'proto.gmgop.Request';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gmgop.Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.gmgop.Request.ValueCase = {
  VALUE_NOT_SET: 0,
  USERCREATE: 1,
  GOPASSERTCREATE: 2,
  GOPASSERTDELETE: 3,
  BUCONTRACTCREATE: 4,
  GOPCONTRACTAGREE: 5,
  GOPCONTRACTREJECT: 6,
  GOPDELIVERASSERT: 7,
  BUDELIVERASSERTCONFIRM: 8,
  GOPFIN: 9,
  CHANGEPUBKEY: 10,
  BURECALLCONTRACT: 11
};

/**
 * @return {proto.gmgop.Request.ValueCase}
 */
proto.gmgop.Request.prototype.getValueCase = function() {
  return /** @type {proto.gmgop.Request.ValueCase} */(jspb.Message.computeOneofCase(this, proto.gmgop.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.Request} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    usercreate: (f = msg.getUsercreate()) && proto.gmgop.RequestUserCreate.toObject(includeInstance, f),
    gopassertcreate: (f = msg.getGopassertcreate()) && proto.gmgop.RequestGopAssertCreate.toObject(includeInstance, f),
    gopassertdelete: (f = msg.getGopassertdelete()) && proto.gmgop.RequestGopAssertDelete.toObject(includeInstance, f),
    bucontractcreate: (f = msg.getBucontractcreate()) && proto.gmgop.RequestBuContractCreate.toObject(includeInstance, f),
    gopcontractagree: (f = msg.getGopcontractagree()) && proto.gmgop.RequestGopContractAgree.toObject(includeInstance, f),
    gopcontractreject: (f = msg.getGopcontractreject()) && proto.gmgop.RequestGopContractReject.toObject(includeInstance, f),
    gopdeliverassert: (f = msg.getGopdeliverassert()) && proto.gmgop.RequestGopDeliverAssert.toObject(includeInstance, f),
    budeliverassertconfirm: (f = msg.getBudeliverassertconfirm()) && proto.gmgop.RequestBuDeliverAssertConfirm.toObject(includeInstance, f),
    gopfin: (f = msg.getGopfin()) && proto.gmgop.RequestGopContractFin.toObject(includeInstance, f),
    changepubkey: (f = msg.getChangepubkey()) && proto.gmgop.RequestChangePubkey.toObject(includeInstance, f),
    burecallcontract: (f = msg.getBurecallcontract()) && proto.gmgop.RequestBuRecallContract.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    instructionid: jspb.Message.getFieldWithDefault(msg, 13, 0),
    pubkey: msg.getPubkey_asB64(),
    sign: msg.getSign_asB64(),
    actionid: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.Request}
 */
proto.gmgop.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.Request;
  return proto.gmgop.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.Request}
 */
proto.gmgop.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gmgop.RequestUserCreate;
      reader.readMessage(value,proto.gmgop.RequestUserCreate.deserializeBinaryFromReader);
      msg.setUsercreate(value);
      break;
    case 2:
      var value = new proto.gmgop.RequestGopAssertCreate;
      reader.readMessage(value,proto.gmgop.RequestGopAssertCreate.deserializeBinaryFromReader);
      msg.setGopassertcreate(value);
      break;
    case 3:
      var value = new proto.gmgop.RequestGopAssertDelete;
      reader.readMessage(value,proto.gmgop.RequestGopAssertDelete.deserializeBinaryFromReader);
      msg.setGopassertdelete(value);
      break;
    case 4:
      var value = new proto.gmgop.RequestBuContractCreate;
      reader.readMessage(value,proto.gmgop.RequestBuContractCreate.deserializeBinaryFromReader);
      msg.setBucontractcreate(value);
      break;
    case 5:
      var value = new proto.gmgop.RequestGopContractAgree;
      reader.readMessage(value,proto.gmgop.RequestGopContractAgree.deserializeBinaryFromReader);
      msg.setGopcontractagree(value);
      break;
    case 6:
      var value = new proto.gmgop.RequestGopContractReject;
      reader.readMessage(value,proto.gmgop.RequestGopContractReject.deserializeBinaryFromReader);
      msg.setGopcontractreject(value);
      break;
    case 7:
      var value = new proto.gmgop.RequestGopDeliverAssert;
      reader.readMessage(value,proto.gmgop.RequestGopDeliverAssert.deserializeBinaryFromReader);
      msg.setGopdeliverassert(value);
      break;
    case 8:
      var value = new proto.gmgop.RequestBuDeliverAssertConfirm;
      reader.readMessage(value,proto.gmgop.RequestBuDeliverAssertConfirm.deserializeBinaryFromReader);
      msg.setBudeliverassertconfirm(value);
      break;
    case 9:
      var value = new proto.gmgop.RequestGopContractFin;
      reader.readMessage(value,proto.gmgop.RequestGopContractFin.deserializeBinaryFromReader);
      msg.setGopfin(value);
      break;
    case 10:
      var value = new proto.gmgop.RequestChangePubkey;
      reader.readMessage(value,proto.gmgop.RequestChangePubkey.deserializeBinaryFromReader);
      msg.setChangepubkey(value);
      break;
    case 11:
      var value = new proto.gmgop.RequestBuRecallContract;
      reader.readMessage(value,proto.gmgop.RequestBuRecallContract.deserializeBinaryFromReader);
      msg.setBurecallcontract(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSign(value);
      break;
    case 16:
      var value = /** @type {!proto.gmgop.MessageType} */ (reader.readEnum());
      msg.setActionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.Request} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Request.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Request.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUsercreate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gmgop.RequestUserCreate.serializeBinaryToWriter
    );
  }
  f = this.getGopassertcreate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.RequestGopAssertCreate.serializeBinaryToWriter
    );
  }
  f = this.getGopassertdelete();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gmgop.RequestGopAssertDelete.serializeBinaryToWriter
    );
  }
  f = this.getBucontractcreate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gmgop.RequestBuContractCreate.serializeBinaryToWriter
    );
  }
  f = this.getGopcontractagree();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gmgop.RequestGopContractAgree.serializeBinaryToWriter
    );
  }
  f = this.getGopcontractreject();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gmgop.RequestGopContractReject.serializeBinaryToWriter
    );
  }
  f = this.getGopdeliverassert();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gmgop.RequestGopDeliverAssert.serializeBinaryToWriter
    );
  }
  f = this.getBudeliverassertconfirm();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gmgop.RequestBuDeliverAssertConfirm.serializeBinaryToWriter
    );
  }
  f = this.getGopfin();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gmgop.RequestGopContractFin.serializeBinaryToWriter
    );
  }
  f = this.getChangepubkey();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gmgop.RequestChangePubkey.serializeBinaryToWriter
    );
  }
  f = this.getBurecallcontract();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gmgop.RequestBuRecallContract.serializeBinaryToWriter
    );
  }
  f = this.getUid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = this.getSign_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = this.getActionid();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
};


/**
 * optional RequestUserCreate userCreate = 1;
 * @return {?proto.gmgop.RequestUserCreate}
 */
proto.gmgop.Request.prototype.getUsercreate = function() {
  return /** @type{?proto.gmgop.RequestUserCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestUserCreate, 1));
};


/** @param {?proto.gmgop.RequestUserCreate|undefined} value */
proto.gmgop.Request.prototype.setUsercreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearUsercreate = function() {
  this.setUsercreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasUsercreate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RequestGopAssertCreate gopAssertCreate = 2;
 * @return {?proto.gmgop.RequestGopAssertCreate}
 */
proto.gmgop.Request.prototype.getGopassertcreate = function() {
  return /** @type{?proto.gmgop.RequestGopAssertCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestGopAssertCreate, 2));
};


/** @param {?proto.gmgop.RequestGopAssertCreate|undefined} value */
proto.gmgop.Request.prototype.setGopassertcreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearGopassertcreate = function() {
  this.setGopassertcreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasGopassertcreate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RequestGopAssertDelete gopAssertDelete = 3;
 * @return {?proto.gmgop.RequestGopAssertDelete}
 */
proto.gmgop.Request.prototype.getGopassertdelete = function() {
  return /** @type{?proto.gmgop.RequestGopAssertDelete} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestGopAssertDelete, 3));
};


/** @param {?proto.gmgop.RequestGopAssertDelete|undefined} value */
proto.gmgop.Request.prototype.setGopassertdelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearGopassertdelete = function() {
  this.setGopassertdelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasGopassertdelete = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RequestBuContractCreate buContractCreate = 4;
 * @return {?proto.gmgop.RequestBuContractCreate}
 */
proto.gmgop.Request.prototype.getBucontractcreate = function() {
  return /** @type{?proto.gmgop.RequestBuContractCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestBuContractCreate, 4));
};


/** @param {?proto.gmgop.RequestBuContractCreate|undefined} value */
proto.gmgop.Request.prototype.setBucontractcreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearBucontractcreate = function() {
  this.setBucontractcreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasBucontractcreate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RequestGopContractAgree gopContractAgree = 5;
 * @return {?proto.gmgop.RequestGopContractAgree}
 */
proto.gmgop.Request.prototype.getGopcontractagree = function() {
  return /** @type{?proto.gmgop.RequestGopContractAgree} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestGopContractAgree, 5));
};


/** @param {?proto.gmgop.RequestGopContractAgree|undefined} value */
proto.gmgop.Request.prototype.setGopcontractagree = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearGopcontractagree = function() {
  this.setGopcontractagree(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasGopcontractagree = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RequestGopContractReject gopContractReject = 6;
 * @return {?proto.gmgop.RequestGopContractReject}
 */
proto.gmgop.Request.prototype.getGopcontractreject = function() {
  return /** @type{?proto.gmgop.RequestGopContractReject} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestGopContractReject, 6));
};


/** @param {?proto.gmgop.RequestGopContractReject|undefined} value */
proto.gmgop.Request.prototype.setGopcontractreject = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearGopcontractreject = function() {
  this.setGopcontractreject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasGopcontractreject = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RequestGopDeliverAssert gopDeliverAssert = 7;
 * @return {?proto.gmgop.RequestGopDeliverAssert}
 */
proto.gmgop.Request.prototype.getGopdeliverassert = function() {
  return /** @type{?proto.gmgop.RequestGopDeliverAssert} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestGopDeliverAssert, 7));
};


/** @param {?proto.gmgop.RequestGopDeliverAssert|undefined} value */
proto.gmgop.Request.prototype.setGopdeliverassert = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearGopdeliverassert = function() {
  this.setGopdeliverassert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasGopdeliverassert = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RequestBuDeliverAssertConfirm buDeliverAssertConfirm = 8;
 * @return {?proto.gmgop.RequestBuDeliverAssertConfirm}
 */
proto.gmgop.Request.prototype.getBudeliverassertconfirm = function() {
  return /** @type{?proto.gmgop.RequestBuDeliverAssertConfirm} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestBuDeliverAssertConfirm, 8));
};


/** @param {?proto.gmgop.RequestBuDeliverAssertConfirm|undefined} value */
proto.gmgop.Request.prototype.setBudeliverassertconfirm = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearBudeliverassertconfirm = function() {
  this.setBudeliverassertconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasBudeliverassertconfirm = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RequestGopContractFin gopFin = 9;
 * @return {?proto.gmgop.RequestGopContractFin}
 */
proto.gmgop.Request.prototype.getGopfin = function() {
  return /** @type{?proto.gmgop.RequestGopContractFin} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestGopContractFin, 9));
};


/** @param {?proto.gmgop.RequestGopContractFin|undefined} value */
proto.gmgop.Request.prototype.setGopfin = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearGopfin = function() {
  this.setGopfin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasGopfin = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional RequestChangePubkey changePubkey = 10;
 * @return {?proto.gmgop.RequestChangePubkey}
 */
proto.gmgop.Request.prototype.getChangepubkey = function() {
  return /** @type{?proto.gmgop.RequestChangePubkey} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestChangePubkey, 10));
};


/** @param {?proto.gmgop.RequestChangePubkey|undefined} value */
proto.gmgop.Request.prototype.setChangepubkey = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearChangepubkey = function() {
  this.setChangepubkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasChangepubkey = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional RequestBuRecallContract buRecallContract = 11;
 * @return {?proto.gmgop.RequestBuRecallContract}
 */
proto.gmgop.Request.prototype.getBurecallcontract = function() {
  return /** @type{?proto.gmgop.RequestBuRecallContract} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.RequestBuRecallContract, 11));
};


/** @param {?proto.gmgop.RequestBuRecallContract|undefined} value */
proto.gmgop.Request.prototype.setBurecallcontract = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gmgop.Request.oneofGroups_[0], value);
};


proto.gmgop.Request.prototype.clearBurecallcontract = function() {
  this.setBurecallcontract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Request.prototype.hasBurecallcontract = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string uid = 12;
 * @return {string}
 */
proto.gmgop.Request.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.gmgop.Request.prototype.setUid = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional int64 instructionId = 13;
 * @return {number}
 */
proto.gmgop.Request.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.gmgop.Request.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional bytes pubkey = 14;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.Request.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes pubkey = 14;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gmgop.Request.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gmgop.Request.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.Request.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional bytes sign = 15;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.Request.prototype.getSign = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes sign = 15;
 * This is a type-conversion wrapper around `getSign()`
 * @return {string}
 */
proto.gmgop.Request.prototype.getSign_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSign()));
};


/**
 * optional bytes sign = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSign()`
 * @return {!Uint8Array}
 */
proto.gmgop.Request.prototype.getSign_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSign()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.Request.prototype.setSign = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional MessageType actionId = 16;
 * @return {!proto.gmgop.MessageType}
 */
proto.gmgop.Request.prototype.getActionid = function() {
  return /** @type {!proto.gmgop.MessageType} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {!proto.gmgop.MessageType} value */
proto.gmgop.Request.prototype.setActionid = function(value) {
  jspb.Message.setField(this, 16, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestUserCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestUserCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestUserCreate.displayName = 'proto.gmgop.RequestUserCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestUserCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestUserCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestUserCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestUserCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pubkey: msg.getPubkey_asB64(),
    info: msg.getInfo_asB64(),
    role: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestUserCreate}
 */
proto.gmgop.RequestUserCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestUserCreate;
  return proto.gmgop.RequestUserCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestUserCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestUserCreate}
 */
proto.gmgop.RequestUserCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestUserCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestUserCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestUserCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestUserCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = this.getRole();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.gmgop.RequestUserCreate.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestUserCreate.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes pubkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.RequestUserCreate.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pubkey = 2;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gmgop.RequestUserCreate.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gmgop.RequestUserCreate.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.RequestUserCreate.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes info = 3;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.RequestUserCreate.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes info = 3;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gmgop.RequestUserCreate.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gmgop.RequestUserCreate.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.RequestUserCreate.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 role = 4;
 * @return {number}
 */
proto.gmgop.RequestUserCreate.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gmgop.RequestUserCreate.prototype.setRole = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestGopAssertCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestGopAssertCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestGopAssertCreate.displayName = 'proto.gmgop.RequestGopAssertCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestGopAssertCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestGopAssertCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestGopAssertCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestGopAssertCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFieldWithDefault(msg, 2, 0),
    info: msg.getInfo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestGopAssertCreate}
 */
proto.gmgop.RequestGopAssertCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestGopAssertCreate;
  return proto.gmgop.RequestGopAssertCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestGopAssertCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestGopAssertCreate}
 */
proto.gmgop.RequestGopAssertCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestGopAssertCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopAssertCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestGopAssertCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopAssertCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.RequestGopAssertCreate.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestGopAssertCreate.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 price = 2;
 * @return {number}
 */
proto.gmgop.RequestGopAssertCreate.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gmgop.RequestGopAssertCreate.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes info = 3;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.RequestGopAssertCreate.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes info = 3;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gmgop.RequestGopAssertCreate.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gmgop.RequestGopAssertCreate.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.RequestGopAssertCreate.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestGopAssertDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestGopAssertDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestGopAssertDelete.displayName = 'proto.gmgop.RequestGopAssertDelete';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestGopAssertDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestGopAssertDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestGopAssertDelete} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestGopAssertDelete.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestGopAssertDelete}
 */
proto.gmgop.RequestGopAssertDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestGopAssertDelete;
  return proto.gmgop.RequestGopAssertDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestGopAssertDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestGopAssertDelete}
 */
proto.gmgop.RequestGopAssertDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestGopAssertDelete} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopAssertDelete.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestGopAssertDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopAssertDelete.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.RequestGopAssertDelete.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestGopAssertDelete.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestBuContractCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestBuContractCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestBuContractCreate.displayName = 'proto.gmgop.RequestBuContractCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestBuContractCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestBuContractCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestBuContractCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestBuContractCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assertid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    endt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    info: msg.getInfo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestBuContractCreate}
 */
proto.gmgop.RequestBuContractCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestBuContractCreate;
  return proto.gmgop.RequestBuContractCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestBuContractCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestBuContractCreate}
 */
proto.gmgop.RequestBuContractCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndt(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestBuContractCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestBuContractCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestBuContractCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestBuContractCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getStartt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getEndt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.RequestBuContractCreate.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestBuContractCreate.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string assertId = 2;
 * @return {string}
 */
proto.gmgop.RequestBuContractCreate.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gmgop.RequestBuContractCreate.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 price = 3;
 * @return {number}
 */
proto.gmgop.RequestBuContractCreate.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gmgop.RequestBuContractCreate.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 startT = 4;
 * @return {number}
 */
proto.gmgop.RequestBuContractCreate.prototype.getStartt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gmgop.RequestBuContractCreate.prototype.setStartt = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int64 endT = 5;
 * @return {number}
 */
proto.gmgop.RequestBuContractCreate.prototype.getEndt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.gmgop.RequestBuContractCreate.prototype.setEndt = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional bytes info = 6;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.RequestBuContractCreate.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes info = 6;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gmgop.RequestBuContractCreate.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gmgop.RequestBuContractCreate.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.RequestBuContractCreate.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestGopContractReject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestGopContractReject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestGopContractReject.displayName = 'proto.gmgop.RequestGopContractReject';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestGopContractReject.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestGopContractReject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestGopContractReject} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestGopContractReject.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestGopContractReject}
 */
proto.gmgop.RequestGopContractReject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestGopContractReject;
  return proto.gmgop.RequestGopContractReject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestGopContractReject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestGopContractReject}
 */
proto.gmgop.RequestGopContractReject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestGopContractReject} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopContractReject.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestGopContractReject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopContractReject.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.RequestGopContractReject.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestGopContractReject.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestGopContractAgree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestGopContractAgree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestGopContractAgree.displayName = 'proto.gmgop.RequestGopContractAgree';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestGopContractAgree.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestGopContractAgree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestGopContractAgree} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestGopContractAgree.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestGopContractAgree}
 */
proto.gmgop.RequestGopContractAgree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestGopContractAgree;
  return proto.gmgop.RequestGopContractAgree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestGopContractAgree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestGopContractAgree}
 */
proto.gmgop.RequestGopContractAgree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestGopContractAgree} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopContractAgree.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestGopContractAgree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopContractAgree.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.RequestGopContractAgree.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestGopContractAgree.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestGopDeliverAssert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestGopDeliverAssert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestGopDeliverAssert.displayName = 'proto.gmgop.RequestGopDeliverAssert';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestGopDeliverAssert.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestGopDeliverAssert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestGopDeliverAssert} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestGopDeliverAssert.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestGopDeliverAssert}
 */
proto.gmgop.RequestGopDeliverAssert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestGopDeliverAssert;
  return proto.gmgop.RequestGopDeliverAssert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestGopDeliverAssert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestGopDeliverAssert}
 */
proto.gmgop.RequestGopDeliverAssert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestGopDeliverAssert} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopDeliverAssert.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestGopDeliverAssert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopDeliverAssert.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.RequestGopDeliverAssert.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestGopDeliverAssert.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestBuDeliverAssertConfirm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestBuDeliverAssertConfirm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestBuDeliverAssertConfirm.displayName = 'proto.gmgop.RequestBuDeliverAssertConfirm';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestBuDeliverAssertConfirm.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestBuDeliverAssertConfirm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestBuDeliverAssertConfirm} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestBuDeliverAssertConfirm.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestBuDeliverAssertConfirm}
 */
proto.gmgop.RequestBuDeliverAssertConfirm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestBuDeliverAssertConfirm;
  return proto.gmgop.RequestBuDeliverAssertConfirm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestBuDeliverAssertConfirm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestBuDeliverAssertConfirm}
 */
proto.gmgop.RequestBuDeliverAssertConfirm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestBuDeliverAssertConfirm} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestBuDeliverAssertConfirm.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestBuDeliverAssertConfirm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestBuDeliverAssertConfirm.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.RequestBuDeliverAssertConfirm.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestBuDeliverAssertConfirm.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestGopContractFin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestGopContractFin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestGopContractFin.displayName = 'proto.gmgop.RequestGopContractFin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestGopContractFin.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestGopContractFin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestGopContractFin} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestGopContractFin.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestGopContractFin}
 */
proto.gmgop.RequestGopContractFin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestGopContractFin;
  return proto.gmgop.RequestGopContractFin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestGopContractFin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestGopContractFin}
 */
proto.gmgop.RequestGopContractFin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestGopContractFin} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopContractFin.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestGopContractFin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestGopContractFin.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.RequestGopContractFin.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestGopContractFin.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestChangePubkey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestChangePubkey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestChangePubkey.displayName = 'proto.gmgop.RequestChangePubkey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestChangePubkey.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestChangePubkey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestChangePubkey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestChangePubkey.toObject = function(includeInstance, msg) {
  var f, obj = {
    newpubkey: msg.getNewpubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestChangePubkey}
 */
proto.gmgop.RequestChangePubkey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestChangePubkey;
  return proto.gmgop.RequestChangePubkey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestChangePubkey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestChangePubkey}
 */
proto.gmgop.RequestChangePubkey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNewpubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestChangePubkey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestChangePubkey.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestChangePubkey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestChangePubkey.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getNewpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes newPubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.RequestChangePubkey.prototype.getNewpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes newPubkey = 1;
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {string}
 */
proto.gmgop.RequestChangePubkey.prototype.getNewpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNewpubkey()));
};


/**
 * optional bytes newPubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {!Uint8Array}
 */
proto.gmgop.RequestChangePubkey.prototype.getNewpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNewpubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.RequestChangePubkey.prototype.setNewpubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.RequestBuRecallContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.RequestBuRecallContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.RequestBuRecallContract.displayName = 'proto.gmgop.RequestBuRecallContract';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.RequestBuRecallContract.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.RequestBuRecallContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.RequestBuRecallContract} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.RequestBuRecallContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.RequestBuRecallContract}
 */
proto.gmgop.RequestBuRecallContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.RequestBuRecallContract;
  return proto.gmgop.RequestBuRecallContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.RequestBuRecallContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.RequestBuRecallContract}
 */
proto.gmgop.RequestBuRecallContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.RequestBuRecallContract} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestBuRecallContract.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.RequestBuRecallContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.RequestBuRecallContract.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.RequestBuRecallContract.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.RequestBuRecallContract.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gmgop.Response.oneofGroups_);
};
goog.inherits(proto.gmgop.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.Response.displayName = 'proto.gmgop.Response';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gmgop.Response.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.gmgop.Response.ValueCase = {
  VALUE_NOT_SET: 0,
  USERCREATE: 1,
  ASSERTCREATE: 2,
  ASSERTDELETE: 3,
  CONTRACTCREATE: 4,
  CONTRACTAGREE: 5,
  CONTRACTREJECT: 6,
  DELIVERASSERT: 7,
  DELIVERASSERTCONFIRM: 8,
  FIN: 9,
  CHANGEPUBKEY: 10,
  BURECALLCONTRACT: 11,
  OK: 12,
  EXCEPTION: 13
};

/**
 * @return {proto.gmgop.Response.ValueCase}
 */
proto.gmgop.Response.prototype.getValueCase = function() {
  return /** @type {proto.gmgop.Response.ValueCase} */(jspb.Message.computeOneofCase(this, proto.gmgop.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    usercreate: (f = msg.getUsercreate()) && proto.gmgop.ResponseUserCreate.toObject(includeInstance, f),
    assertcreate: (f = msg.getAssertcreate()) && proto.gmgop.ResponseAssertCreate.toObject(includeInstance, f),
    assertdelete: (f = msg.getAssertdelete()) && proto.gmgop.ResponseAssertDelete.toObject(includeInstance, f),
    contractcreate: (f = msg.getContractcreate()) && proto.gmgop.ResponseContractCreate.toObject(includeInstance, f),
    contractagree: (f = msg.getContractagree()) && proto.gmgop.ResponseContractAgree.toObject(includeInstance, f),
    contractreject: (f = msg.getContractreject()) && proto.gmgop.ResponseContractReject.toObject(includeInstance, f),
    deliverassert: (f = msg.getDeliverassert()) && proto.gmgop.ResponseDeliverAssert.toObject(includeInstance, f),
    deliverassertconfirm: (f = msg.getDeliverassertconfirm()) && proto.gmgop.ResponseDeliverAssertConfirm.toObject(includeInstance, f),
    fin: (f = msg.getFin()) && proto.gmgop.ResponseFin.toObject(includeInstance, f),
    changepubkey: (f = msg.getChangepubkey()) && proto.gmgop.ResponseChangePubkey.toObject(includeInstance, f),
    burecallcontract: (f = msg.getBurecallcontract()) && proto.gmgop.ResponseRecallContract.toObject(includeInstance, f),
    ok: (f = msg.getOk()) && proto.gmgop.ResponseOK.toObject(includeInstance, f),
    exception: (f = msg.getException()) && proto.gmgop.ResponseException.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.Response}
 */
proto.gmgop.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.Response;
  return proto.gmgop.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.Response}
 */
proto.gmgop.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gmgop.ResponseUserCreate;
      reader.readMessage(value,proto.gmgop.ResponseUserCreate.deserializeBinaryFromReader);
      msg.setUsercreate(value);
      break;
    case 2:
      var value = new proto.gmgop.ResponseAssertCreate;
      reader.readMessage(value,proto.gmgop.ResponseAssertCreate.deserializeBinaryFromReader);
      msg.setAssertcreate(value);
      break;
    case 3:
      var value = new proto.gmgop.ResponseAssertDelete;
      reader.readMessage(value,proto.gmgop.ResponseAssertDelete.deserializeBinaryFromReader);
      msg.setAssertdelete(value);
      break;
    case 4:
      var value = new proto.gmgop.ResponseContractCreate;
      reader.readMessage(value,proto.gmgop.ResponseContractCreate.deserializeBinaryFromReader);
      msg.setContractcreate(value);
      break;
    case 5:
      var value = new proto.gmgop.ResponseContractAgree;
      reader.readMessage(value,proto.gmgop.ResponseContractAgree.deserializeBinaryFromReader);
      msg.setContractagree(value);
      break;
    case 6:
      var value = new proto.gmgop.ResponseContractReject;
      reader.readMessage(value,proto.gmgop.ResponseContractReject.deserializeBinaryFromReader);
      msg.setContractreject(value);
      break;
    case 7:
      var value = new proto.gmgop.ResponseDeliverAssert;
      reader.readMessage(value,proto.gmgop.ResponseDeliverAssert.deserializeBinaryFromReader);
      msg.setDeliverassert(value);
      break;
    case 8:
      var value = new proto.gmgop.ResponseDeliverAssertConfirm;
      reader.readMessage(value,proto.gmgop.ResponseDeliverAssertConfirm.deserializeBinaryFromReader);
      msg.setDeliverassertconfirm(value);
      break;
    case 9:
      var value = new proto.gmgop.ResponseFin;
      reader.readMessage(value,proto.gmgop.ResponseFin.deserializeBinaryFromReader);
      msg.setFin(value);
      break;
    case 10:
      var value = new proto.gmgop.ResponseChangePubkey;
      reader.readMessage(value,proto.gmgop.ResponseChangePubkey.deserializeBinaryFromReader);
      msg.setChangepubkey(value);
      break;
    case 11:
      var value = new proto.gmgop.ResponseRecallContract;
      reader.readMessage(value,proto.gmgop.ResponseRecallContract.deserializeBinaryFromReader);
      msg.setBurecallcontract(value);
      break;
    case 12:
      var value = new proto.gmgop.ResponseOK;
      reader.readMessage(value,proto.gmgop.ResponseOK.deserializeBinaryFromReader);
      msg.setOk(value);
      break;
    case 13:
      var value = new proto.gmgop.ResponseException;
      reader.readMessage(value,proto.gmgop.ResponseException.deserializeBinaryFromReader);
      msg.setException(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUsercreate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gmgop.ResponseUserCreate.serializeBinaryToWriter
    );
  }
  f = this.getAssertcreate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.ResponseAssertCreate.serializeBinaryToWriter
    );
  }
  f = this.getAssertdelete();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gmgop.ResponseAssertDelete.serializeBinaryToWriter
    );
  }
  f = this.getContractcreate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gmgop.ResponseContractCreate.serializeBinaryToWriter
    );
  }
  f = this.getContractagree();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gmgop.ResponseContractAgree.serializeBinaryToWriter
    );
  }
  f = this.getContractreject();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gmgop.ResponseContractReject.serializeBinaryToWriter
    );
  }
  f = this.getDeliverassert();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gmgop.ResponseDeliverAssert.serializeBinaryToWriter
    );
  }
  f = this.getDeliverassertconfirm();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gmgop.ResponseDeliverAssertConfirm.serializeBinaryToWriter
    );
  }
  f = this.getFin();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gmgop.ResponseFin.serializeBinaryToWriter
    );
  }
  f = this.getChangepubkey();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gmgop.ResponseChangePubkey.serializeBinaryToWriter
    );
  }
  f = this.getBurecallcontract();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gmgop.ResponseRecallContract.serializeBinaryToWriter
    );
  }
  f = this.getOk();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.gmgop.ResponseOK.serializeBinaryToWriter
    );
  }
  f = this.getException();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.gmgop.ResponseException.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseUserCreate userCreate = 1;
 * @return {?proto.gmgop.ResponseUserCreate}
 */
proto.gmgop.Response.prototype.getUsercreate = function() {
  return /** @type{?proto.gmgop.ResponseUserCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseUserCreate, 1));
};


/** @param {?proto.gmgop.ResponseUserCreate|undefined} value */
proto.gmgop.Response.prototype.setUsercreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearUsercreate = function() {
  this.setUsercreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasUsercreate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResponseAssertCreate assertCreate = 2;
 * @return {?proto.gmgop.ResponseAssertCreate}
 */
proto.gmgop.Response.prototype.getAssertcreate = function() {
  return /** @type{?proto.gmgop.ResponseAssertCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseAssertCreate, 2));
};


/** @param {?proto.gmgop.ResponseAssertCreate|undefined} value */
proto.gmgop.Response.prototype.setAssertcreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearAssertcreate = function() {
  this.setAssertcreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasAssertcreate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ResponseAssertDelete assertDelete = 3;
 * @return {?proto.gmgop.ResponseAssertDelete}
 */
proto.gmgop.Response.prototype.getAssertdelete = function() {
  return /** @type{?proto.gmgop.ResponseAssertDelete} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseAssertDelete, 3));
};


/** @param {?proto.gmgop.ResponseAssertDelete|undefined} value */
proto.gmgop.Response.prototype.setAssertdelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearAssertdelete = function() {
  this.setAssertdelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasAssertdelete = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResponseContractCreate contractCreate = 4;
 * @return {?proto.gmgop.ResponseContractCreate}
 */
proto.gmgop.Response.prototype.getContractcreate = function() {
  return /** @type{?proto.gmgop.ResponseContractCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseContractCreate, 4));
};


/** @param {?proto.gmgop.ResponseContractCreate|undefined} value */
proto.gmgop.Response.prototype.setContractcreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearContractcreate = function() {
  this.setContractcreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasContractcreate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ResponseContractAgree contractAgree = 5;
 * @return {?proto.gmgop.ResponseContractAgree}
 */
proto.gmgop.Response.prototype.getContractagree = function() {
  return /** @type{?proto.gmgop.ResponseContractAgree} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseContractAgree, 5));
};


/** @param {?proto.gmgop.ResponseContractAgree|undefined} value */
proto.gmgop.Response.prototype.setContractagree = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearContractagree = function() {
  this.setContractagree(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasContractagree = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ResponseContractReject contractReject = 6;
 * @return {?proto.gmgop.ResponseContractReject}
 */
proto.gmgop.Response.prototype.getContractreject = function() {
  return /** @type{?proto.gmgop.ResponseContractReject} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseContractReject, 6));
};


/** @param {?proto.gmgop.ResponseContractReject|undefined} value */
proto.gmgop.Response.prototype.setContractreject = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearContractreject = function() {
  this.setContractreject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasContractreject = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ResponseDeliverAssert deliverAssert = 7;
 * @return {?proto.gmgop.ResponseDeliverAssert}
 */
proto.gmgop.Response.prototype.getDeliverassert = function() {
  return /** @type{?proto.gmgop.ResponseDeliverAssert} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseDeliverAssert, 7));
};


/** @param {?proto.gmgop.ResponseDeliverAssert|undefined} value */
proto.gmgop.Response.prototype.setDeliverassert = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearDeliverassert = function() {
  this.setDeliverassert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasDeliverassert = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ResponseDeliverAssertConfirm deliverAssertConfirm = 8;
 * @return {?proto.gmgop.ResponseDeliverAssertConfirm}
 */
proto.gmgop.Response.prototype.getDeliverassertconfirm = function() {
  return /** @type{?proto.gmgop.ResponseDeliverAssertConfirm} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseDeliverAssertConfirm, 8));
};


/** @param {?proto.gmgop.ResponseDeliverAssertConfirm|undefined} value */
proto.gmgop.Response.prototype.setDeliverassertconfirm = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearDeliverassertconfirm = function() {
  this.setDeliverassertconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasDeliverassertconfirm = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ResponseFin fin = 9;
 * @return {?proto.gmgop.ResponseFin}
 */
proto.gmgop.Response.prototype.getFin = function() {
  return /** @type{?proto.gmgop.ResponseFin} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseFin, 9));
};


/** @param {?proto.gmgop.ResponseFin|undefined} value */
proto.gmgop.Response.prototype.setFin = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearFin = function() {
  this.setFin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasFin = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ResponseChangePubkey changePubkey = 10;
 * @return {?proto.gmgop.ResponseChangePubkey}
 */
proto.gmgop.Response.prototype.getChangepubkey = function() {
  return /** @type{?proto.gmgop.ResponseChangePubkey} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseChangePubkey, 10));
};


/** @param {?proto.gmgop.ResponseChangePubkey|undefined} value */
proto.gmgop.Response.prototype.setChangepubkey = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearChangepubkey = function() {
  this.setChangepubkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasChangepubkey = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ResponseRecallContract buRecallContract = 11;
 * @return {?proto.gmgop.ResponseRecallContract}
 */
proto.gmgop.Response.prototype.getBurecallcontract = function() {
  return /** @type{?proto.gmgop.ResponseRecallContract} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseRecallContract, 11));
};


/** @param {?proto.gmgop.ResponseRecallContract|undefined} value */
proto.gmgop.Response.prototype.setBurecallcontract = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearBurecallcontract = function() {
  this.setBurecallcontract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasBurecallcontract = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ResponseOK ok = 12;
 * @return {?proto.gmgop.ResponseOK}
 */
proto.gmgop.Response.prototype.getOk = function() {
  return /** @type{?proto.gmgop.ResponseOK} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseOK, 12));
};


/** @param {?proto.gmgop.ResponseOK|undefined} value */
proto.gmgop.Response.prototype.setOk = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearOk = function() {
  this.setOk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasOk = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ResponseException exception = 13;
 * @return {?proto.gmgop.ResponseException}
 */
proto.gmgop.Response.prototype.getException = function() {
  return /** @type{?proto.gmgop.ResponseException} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.ResponseException, 13));
};


/** @param {?proto.gmgop.ResponseException|undefined} value */
proto.gmgop.Response.prototype.setException = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.gmgop.Response.oneofGroups_[0], value);
};


proto.gmgop.Response.prototype.clearException = function() {
  this.setException(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Response.prototype.hasException = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseException = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseException, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseException.displayName = 'proto.gmgop.ResponseException';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseException.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseException.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseException} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseException.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseException}
 */
proto.gmgop.ResponseException.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseException;
  return proto.gmgop.ResponseException.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseException} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseException}
 */
proto.gmgop.ResponseException.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseException} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseException.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseException.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseException.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.gmgop.ResponseException.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.ResponseException.prototype.setError = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseOK = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseOK, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseOK.displayName = 'proto.gmgop.ResponseOK';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseOK.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseOK.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseOK} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseOK.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseOK}
 */
proto.gmgop.ResponseOK.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseOK;
  return proto.gmgop.ResponseOK.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseOK} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseOK}
 */
proto.gmgop.ResponseOK.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseOK} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseOK.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseOK.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseOK.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gmgop.ResponseOK.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.gmgop.ResponseOK.prototype.setOk = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.Receipt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.Receipt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.Receipt.displayName = 'proto.gmgop.Receipt';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.Receipt.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.Receipt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.Receipt} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.Receipt.toObject = function(includeInstance, msg) {
  var f, obj = {
    isok: jspb.Message.getFieldWithDefault(msg, 1, false),
    err: msg.getErr_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.Receipt}
 */
proto.gmgop.Receipt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.Receipt;
  return proto.gmgop.Receipt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.Receipt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.Receipt}
 */
proto.gmgop.Receipt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsok(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.Receipt} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Receipt.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.Receipt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Receipt.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIsok();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = this.getErr_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bool isOk = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gmgop.Receipt.prototype.getIsok = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.gmgop.Receipt.prototype.setIsok = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes err = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.Receipt.prototype.getErr = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes err = 2;
 * This is a type-conversion wrapper around `getErr()`
 * @return {string}
 */
proto.gmgop.Receipt.prototype.getErr_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErr()));
};


/**
 * optional bytes err = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErr()`
 * @return {!Uint8Array}
 */
proto.gmgop.Receipt.prototype.getErr_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErr()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.Receipt.prototype.setErr = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseRecallContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseRecallContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseRecallContract.displayName = 'proto.gmgop.ResponseRecallContract';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseRecallContract.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseRecallContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseRecallContract} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseRecallContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseRecallContract}
 */
proto.gmgop.ResponseRecallContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseRecallContract;
  return proto.gmgop.ResponseRecallContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseRecallContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseRecallContract}
 */
proto.gmgop.ResponseRecallContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseRecallContract} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseRecallContract.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseRecallContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseRecallContract.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseRecallContract.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseRecallContract.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseRecallContract.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseRecallContract.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseRecallContract.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseRecallContract.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseFin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseFin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseFin.displayName = 'proto.gmgop.ResponseFin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseFin.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseFin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseFin} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseFin.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseFin}
 */
proto.gmgop.ResponseFin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseFin;
  return proto.gmgop.ResponseFin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseFin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseFin}
 */
proto.gmgop.ResponseFin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseFin} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseFin.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseFin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseFin.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseFin.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseFin.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseFin.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseFin.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseFin.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseFin.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseDeliverAssertConfirm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseDeliverAssertConfirm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseDeliverAssertConfirm.displayName = 'proto.gmgop.ResponseDeliverAssertConfirm';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseDeliverAssertConfirm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseDeliverAssertConfirm} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseDeliverAssertConfirm.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseDeliverAssertConfirm}
 */
proto.gmgop.ResponseDeliverAssertConfirm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseDeliverAssertConfirm;
  return proto.gmgop.ResponseDeliverAssertConfirm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseDeliverAssertConfirm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseDeliverAssertConfirm}
 */
proto.gmgop.ResponseDeliverAssertConfirm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseDeliverAssertConfirm} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseDeliverAssertConfirm.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseDeliverAssertConfirm.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseDeliverAssertConfirm.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseDeliverAssert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseDeliverAssert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseDeliverAssert.displayName = 'proto.gmgop.ResponseDeliverAssert';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseDeliverAssert.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseDeliverAssert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseDeliverAssert} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseDeliverAssert.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseDeliverAssert}
 */
proto.gmgop.ResponseDeliverAssert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseDeliverAssert;
  return proto.gmgop.ResponseDeliverAssert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseDeliverAssert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseDeliverAssert}
 */
proto.gmgop.ResponseDeliverAssert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseDeliverAssert} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseDeliverAssert.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseDeliverAssert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseDeliverAssert.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseDeliverAssert.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseDeliverAssert.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseDeliverAssert.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseDeliverAssert.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseDeliverAssert.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseDeliverAssert.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseContractAgree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseContractAgree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseContractAgree.displayName = 'proto.gmgop.ResponseContractAgree';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseContractAgree.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseContractAgree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseContractAgree} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseContractAgree.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseContractAgree}
 */
proto.gmgop.ResponseContractAgree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseContractAgree;
  return proto.gmgop.ResponseContractAgree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseContractAgree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseContractAgree}
 */
proto.gmgop.ResponseContractAgree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseContractAgree} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseContractAgree.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseContractAgree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseContractAgree.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseContractAgree.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseContractAgree.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseContractAgree.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseContractAgree.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseContractAgree.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseContractAgree.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseContractReject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseContractReject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseContractReject.displayName = 'proto.gmgop.ResponseContractReject';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseContractReject.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseContractReject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseContractReject} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseContractReject.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseContractReject}
 */
proto.gmgop.ResponseContractReject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseContractReject;
  return proto.gmgop.ResponseContractReject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseContractReject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseContractReject}
 */
proto.gmgop.ResponseContractReject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseContractReject} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseContractReject.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseContractReject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseContractReject.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseContractReject.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseContractReject.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseContractReject.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseContractReject.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseContractReject.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseContractReject.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseContractCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseContractCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseContractCreate.displayName = 'proto.gmgop.ResponseContractCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseContractCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseContractCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseContractCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseContractCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f),
    instructionid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseContractCreate}
 */
proto.gmgop.ResponseContractCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseContractCreate;
  return proto.gmgop.ResponseContractCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseContractCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseContractCreate}
 */
proto.gmgop.ResponseContractCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseContractCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseContractCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseContractCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseContractCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional Event event = 1;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseContractCreate.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 1));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseContractCreate.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gmgop.ResponseContractCreate.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseContractCreate.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 instructionId = 2;
 * @return {number}
 */
proto.gmgop.ResponseContractCreate.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gmgop.ResponseContractCreate.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseAssertCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseAssertCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseAssertCreate.displayName = 'proto.gmgop.ResponseAssertCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseAssertCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseAssertCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseAssertCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseAssertCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f),
    instructionid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseAssertCreate}
 */
proto.gmgop.ResponseAssertCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseAssertCreate;
  return proto.gmgop.ResponseAssertCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseAssertCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseAssertCreate}
 */
proto.gmgop.ResponseAssertCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseAssertCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseAssertCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseAssertCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseAssertCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional Event event = 1;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseAssertCreate.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 1));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseAssertCreate.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gmgop.ResponseAssertCreate.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseAssertCreate.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 instructionId = 2;
 * @return {number}
 */
proto.gmgop.ResponseAssertCreate.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gmgop.ResponseAssertCreate.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseAssertDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseAssertDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseAssertDelete.displayName = 'proto.gmgop.ResponseAssertDelete';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseAssertDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseAssertDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseAssertDelete} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseAssertDelete.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseAssertDelete}
 */
proto.gmgop.ResponseAssertDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseAssertDelete;
  return proto.gmgop.ResponseAssertDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseAssertDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseAssertDelete}
 */
proto.gmgop.ResponseAssertDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseAssertDelete} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseAssertDelete.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseAssertDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseAssertDelete.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseAssertDelete.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseAssertDelete.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseAssertDelete.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseAssertDelete.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseAssertDelete.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseAssertDelete.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseUserCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseUserCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseUserCreate.displayName = 'proto.gmgop.ResponseUserCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseUserCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseUserCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseUserCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseUserCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseUserCreate}
 */
proto.gmgop.ResponseUserCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseUserCreate;
  return proto.gmgop.ResponseUserCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseUserCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseUserCreate}
 */
proto.gmgop.ResponseUserCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseUserCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseUserCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseUserCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseUserCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseUserCreate.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseUserCreate.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseUserCreate.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseUserCreate.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseUserCreate.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseUserCreate.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.ResponseChangePubkey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.ResponseChangePubkey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.ResponseChangePubkey.displayName = 'proto.gmgop.ResponseChangePubkey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.ResponseChangePubkey.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.ResponseChangePubkey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.ResponseChangePubkey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.ResponseChangePubkey.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.gmgop.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.ResponseChangePubkey}
 */
proto.gmgop.ResponseChangePubkey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.ResponseChangePubkey;
  return proto.gmgop.ResponseChangePubkey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.ResponseChangePubkey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.ResponseChangePubkey}
 */
proto.gmgop.ResponseChangePubkey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstructionid(value);
      break;
    case 2:
      var value = new proto.gmgop.Event;
      reader.readMessage(value,proto.gmgop.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.ResponseChangePubkey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseChangePubkey.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.ResponseChangePubkey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.ResponseChangePubkey.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInstructionid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instructionId = 1;
 * @return {number}
 */
proto.gmgop.ResponseChangePubkey.prototype.getInstructionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.ResponseChangePubkey.prototype.setInstructionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.gmgop.Event}
 */
proto.gmgop.ResponseChangePubkey.prototype.getEvent = function() {
  return /** @type{?proto.gmgop.Event} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.Event, 2));
};


/** @param {?proto.gmgop.Event|undefined} value */
proto.gmgop.ResponseChangePubkey.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.gmgop.ResponseChangePubkey.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.ResponseChangePubkey.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.Assert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gmgop.Assert.repeatedFields_, null);
};
goog.inherits(proto.gmgop.Assert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.Assert.displayName = 'proto.gmgop.Assert';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gmgop.Assert.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.Assert.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.Assert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.Assert} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.Assert.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: jspb.Message.getFieldWithDefault(msg, 1, 0),
    info: msg.getInfo_asB64(),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isdel: jspb.Message.getFieldWithDefault(msg, 4, false),
    creatoruid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    applicantsList: jspb.Message.getField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.Assert}
 */
proto.gmgop.Assert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.Assert;
  return proto.gmgop.Assert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.Assert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.Assert}
 */
proto.gmgop.Assert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    case 3:
      var value = /** @type {!proto.gmgop.AssertState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatoruid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addApplicants(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.Assert} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Assert.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.Assert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Assert.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = this.getIsdel();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = this.getCreatoruid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getApplicantsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional int64 price = 1;
 * @return {number}
 */
proto.gmgop.Assert.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gmgop.Assert.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes info = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.Assert.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes info = 2;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gmgop.Assert.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gmgop.Assert.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.Assert.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional AssertState state = 3;
 * @return {!proto.gmgop.AssertState}
 */
proto.gmgop.Assert.prototype.getState = function() {
  return /** @type {!proto.gmgop.AssertState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.gmgop.AssertState} value */
proto.gmgop.Assert.prototype.setState = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool isdel = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.gmgop.Assert.prototype.getIsdel = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.gmgop.Assert.prototype.setIsdel = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string creatorUid = 5;
 * @return {string}
 */
proto.gmgop.Assert.prototype.getCreatoruid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.gmgop.Assert.prototype.setCreatoruid = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated string applicants = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.gmgop.Assert.prototype.getApplicantsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 6));
};


/** @param {!Array.<string>} value */
proto.gmgop.Assert.prototype.setApplicantsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gmgop.Assert.prototype.addApplicants = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.gmgop.Assert.prototype.clearApplicantsList = function() {
  this.setApplicantsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.User.displayName = 'proto.gmgop.User';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.User.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.User} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64(),
    info: msg.getInfo_asB64(),
    role: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.User}
 */
proto.gmgop.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.User;
  return proto.gmgop.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.User}
 */
proto.gmgop.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.User} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.User.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.User.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getRole();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.User.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.gmgop.User.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.gmgop.User.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.User.prototype.setPubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes info = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.User.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes info = 2;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gmgop.User.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gmgop.User.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.User.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 role = 3;
 * @return {number}
 */
proto.gmgop.User.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gmgop.User.prototype.setRole = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.Contract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.Contract.displayName = 'proto.gmgop.Contract';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.Contract.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.Contract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.Contract} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.Contract.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    info: msg.getInfo_asB64(),
    state: jspb.Message.getFieldWithDefault(msg, 6, 0),
    creatoruid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.Contract}
 */
proto.gmgop.Contract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.Contract;
  return proto.gmgop.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.Contract}
 */
proto.gmgop.Contract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndt(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInfo(value);
      break;
    case 6:
      var value = /** @type {!proto.gmgop.ContractState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatoruid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.Contract} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Contract.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.Contract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Contract.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getStartt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getEndt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = this.getCreatoruid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.Contract.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.Contract.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 price = 2;
 * @return {number}
 */
proto.gmgop.Contract.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gmgop.Contract.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 startT = 3;
 * @return {number}
 */
proto.gmgop.Contract.prototype.getStartt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gmgop.Contract.prototype.setStartt = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 endT = 4;
 * @return {number}
 */
proto.gmgop.Contract.prototype.getEndt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.gmgop.Contract.prototype.setEndt = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bytes info = 5;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.Contract.prototype.getInfo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes info = 5;
 * This is a type-conversion wrapper around `getInfo()`
 * @return {string}
 */
proto.gmgop.Contract.prototype.getInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInfo()));
};


/**
 * optional bytes info = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInfo()`
 * @return {!Uint8Array}
 */
proto.gmgop.Contract.prototype.getInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInfo()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.Contract.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional ContractState state = 6;
 * @return {!proto.gmgop.ContractState}
 */
proto.gmgop.Contract.prototype.getState = function() {
  return /** @type {!proto.gmgop.ContractState} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.gmgop.ContractState} value */
proto.gmgop.Contract.prototype.setState = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string creatorUid = 7;
 * @return {string}
 */
proto.gmgop.Contract.prototype.getCreatoruid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.gmgop.Contract.prototype.setCreatoruid = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gmgop.Event.oneofGroups_);
};
goog.inherits(proto.gmgop.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.Event.displayName = 'proto.gmgop.Event';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gmgop.Event.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.gmgop.Event.ValueCase = {
  VALUE_NOT_SET: 0,
  USERCREATE: 1,
  ASSERTCREATE: 2,
  ASSERTDELETE: 3,
  CONTRACTCREATE: 4,
  CONTRACTAGREE: 5,
  CONTRACTREJECT: 6,
  DELIVERASSERT: 7,
  DELIVERASSERTCONFIRM: 8,
  FIN: 9,
  CHANGEPUBKEY: 10,
  RECALLCONTRACT: 11
};

/**
 * @return {proto.gmgop.Event.ValueCase}
 */
proto.gmgop.Event.prototype.getValueCase = function() {
  return /** @type {proto.gmgop.Event.ValueCase} */(jspb.Message.computeOneofCase(this, proto.gmgop.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.Event} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    usercreate: (f = msg.getUsercreate()) && proto.gmgop.EventUserCreate.toObject(includeInstance, f),
    assertcreate: (f = msg.getAssertcreate()) && proto.gmgop.EventAssertCreate.toObject(includeInstance, f),
    assertdelete: (f = msg.getAssertdelete()) && proto.gmgop.EventAssertDelete.toObject(includeInstance, f),
    contractcreate: (f = msg.getContractcreate()) && proto.gmgop.EventContractCreate.toObject(includeInstance, f),
    contractagree: (f = msg.getContractagree()) && proto.gmgop.EventContractAgree.toObject(includeInstance, f),
    contractreject: (f = msg.getContractreject()) && proto.gmgop.EventContractReject.toObject(includeInstance, f),
    deliverassert: (f = msg.getDeliverassert()) && proto.gmgop.EventDeliverAssert.toObject(includeInstance, f),
    deliverassertconfirm: (f = msg.getDeliverassertconfirm()) && proto.gmgop.EventDeliverAssertConfirm.toObject(includeInstance, f),
    fin: (f = msg.getFin()) && proto.gmgop.EventFin.toObject(includeInstance, f),
    changepubkey: (f = msg.getChangepubkey()) && proto.gmgop.EventChangePubkey.toObject(includeInstance, f),
    recallcontract: (f = msg.getRecallcontract()) && proto.gmgop.EventRecallContract.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.Event}
 */
proto.gmgop.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.Event;
  return proto.gmgop.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.Event}
 */
proto.gmgop.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gmgop.EventUserCreate;
      reader.readMessage(value,proto.gmgop.EventUserCreate.deserializeBinaryFromReader);
      msg.setUsercreate(value);
      break;
    case 2:
      var value = new proto.gmgop.EventAssertCreate;
      reader.readMessage(value,proto.gmgop.EventAssertCreate.deserializeBinaryFromReader);
      msg.setAssertcreate(value);
      break;
    case 3:
      var value = new proto.gmgop.EventAssertDelete;
      reader.readMessage(value,proto.gmgop.EventAssertDelete.deserializeBinaryFromReader);
      msg.setAssertdelete(value);
      break;
    case 4:
      var value = new proto.gmgop.EventContractCreate;
      reader.readMessage(value,proto.gmgop.EventContractCreate.deserializeBinaryFromReader);
      msg.setContractcreate(value);
      break;
    case 5:
      var value = new proto.gmgop.EventContractAgree;
      reader.readMessage(value,proto.gmgop.EventContractAgree.deserializeBinaryFromReader);
      msg.setContractagree(value);
      break;
    case 6:
      var value = new proto.gmgop.EventContractReject;
      reader.readMessage(value,proto.gmgop.EventContractReject.deserializeBinaryFromReader);
      msg.setContractreject(value);
      break;
    case 7:
      var value = new proto.gmgop.EventDeliverAssert;
      reader.readMessage(value,proto.gmgop.EventDeliverAssert.deserializeBinaryFromReader);
      msg.setDeliverassert(value);
      break;
    case 8:
      var value = new proto.gmgop.EventDeliverAssertConfirm;
      reader.readMessage(value,proto.gmgop.EventDeliverAssertConfirm.deserializeBinaryFromReader);
      msg.setDeliverassertconfirm(value);
      break;
    case 9:
      var value = new proto.gmgop.EventFin;
      reader.readMessage(value,proto.gmgop.EventFin.deserializeBinaryFromReader);
      msg.setFin(value);
      break;
    case 10:
      var value = new proto.gmgop.EventChangePubkey;
      reader.readMessage(value,proto.gmgop.EventChangePubkey.deserializeBinaryFromReader);
      msg.setChangepubkey(value);
      break;
    case 11:
      var value = new proto.gmgop.EventRecallContract;
      reader.readMessage(value,proto.gmgop.EventRecallContract.deserializeBinaryFromReader);
      msg.setRecallcontract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.Event} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Event.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.Event.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUsercreate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gmgop.EventUserCreate.serializeBinaryToWriter
    );
  }
  f = this.getAssertcreate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gmgop.EventAssertCreate.serializeBinaryToWriter
    );
  }
  f = this.getAssertdelete();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gmgop.EventAssertDelete.serializeBinaryToWriter
    );
  }
  f = this.getContractcreate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gmgop.EventContractCreate.serializeBinaryToWriter
    );
  }
  f = this.getContractagree();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gmgop.EventContractAgree.serializeBinaryToWriter
    );
  }
  f = this.getContractreject();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gmgop.EventContractReject.serializeBinaryToWriter
    );
  }
  f = this.getDeliverassert();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gmgop.EventDeliverAssert.serializeBinaryToWriter
    );
  }
  f = this.getDeliverassertconfirm();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gmgop.EventDeliverAssertConfirm.serializeBinaryToWriter
    );
  }
  f = this.getFin();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gmgop.EventFin.serializeBinaryToWriter
    );
  }
  f = this.getChangepubkey();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gmgop.EventChangePubkey.serializeBinaryToWriter
    );
  }
  f = this.getRecallcontract();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gmgop.EventRecallContract.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventUserCreate userCreate = 1;
 * @return {?proto.gmgop.EventUserCreate}
 */
proto.gmgop.Event.prototype.getUsercreate = function() {
  return /** @type{?proto.gmgop.EventUserCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventUserCreate, 1));
};


/** @param {?proto.gmgop.EventUserCreate|undefined} value */
proto.gmgop.Event.prototype.setUsercreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearUsercreate = function() {
  this.setUsercreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasUsercreate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EventAssertCreate assertCreate = 2;
 * @return {?proto.gmgop.EventAssertCreate}
 */
proto.gmgop.Event.prototype.getAssertcreate = function() {
  return /** @type{?proto.gmgop.EventAssertCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventAssertCreate, 2));
};


/** @param {?proto.gmgop.EventAssertCreate|undefined} value */
proto.gmgop.Event.prototype.setAssertcreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearAssertcreate = function() {
  this.setAssertcreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasAssertcreate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EventAssertDelete assertDelete = 3;
 * @return {?proto.gmgop.EventAssertDelete}
 */
proto.gmgop.Event.prototype.getAssertdelete = function() {
  return /** @type{?proto.gmgop.EventAssertDelete} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventAssertDelete, 3));
};


/** @param {?proto.gmgop.EventAssertDelete|undefined} value */
proto.gmgop.Event.prototype.setAssertdelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearAssertdelete = function() {
  this.setAssertdelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasAssertdelete = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EventContractCreate contractCreate = 4;
 * @return {?proto.gmgop.EventContractCreate}
 */
proto.gmgop.Event.prototype.getContractcreate = function() {
  return /** @type{?proto.gmgop.EventContractCreate} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventContractCreate, 4));
};


/** @param {?proto.gmgop.EventContractCreate|undefined} value */
proto.gmgop.Event.prototype.setContractcreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearContractcreate = function() {
  this.setContractcreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasContractcreate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EventContractAgree contractAgree = 5;
 * @return {?proto.gmgop.EventContractAgree}
 */
proto.gmgop.Event.prototype.getContractagree = function() {
  return /** @type{?proto.gmgop.EventContractAgree} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventContractAgree, 5));
};


/** @param {?proto.gmgop.EventContractAgree|undefined} value */
proto.gmgop.Event.prototype.setContractagree = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearContractagree = function() {
  this.setContractagree(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasContractagree = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EventContractReject contractReject = 6;
 * @return {?proto.gmgop.EventContractReject}
 */
proto.gmgop.Event.prototype.getContractreject = function() {
  return /** @type{?proto.gmgop.EventContractReject} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventContractReject, 6));
};


/** @param {?proto.gmgop.EventContractReject|undefined} value */
proto.gmgop.Event.prototype.setContractreject = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearContractreject = function() {
  this.setContractreject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasContractreject = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EventDeliverAssert deliverAssert = 7;
 * @return {?proto.gmgop.EventDeliverAssert}
 */
proto.gmgop.Event.prototype.getDeliverassert = function() {
  return /** @type{?proto.gmgop.EventDeliverAssert} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventDeliverAssert, 7));
};


/** @param {?proto.gmgop.EventDeliverAssert|undefined} value */
proto.gmgop.Event.prototype.setDeliverassert = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearDeliverassert = function() {
  this.setDeliverassert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasDeliverassert = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EventDeliverAssertConfirm deliverAssertConfirm = 8;
 * @return {?proto.gmgop.EventDeliverAssertConfirm}
 */
proto.gmgop.Event.prototype.getDeliverassertconfirm = function() {
  return /** @type{?proto.gmgop.EventDeliverAssertConfirm} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventDeliverAssertConfirm, 8));
};


/** @param {?proto.gmgop.EventDeliverAssertConfirm|undefined} value */
proto.gmgop.Event.prototype.setDeliverassertconfirm = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearDeliverassertconfirm = function() {
  this.setDeliverassertconfirm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasDeliverassertconfirm = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional EventFin fin = 9;
 * @return {?proto.gmgop.EventFin}
 */
proto.gmgop.Event.prototype.getFin = function() {
  return /** @type{?proto.gmgop.EventFin} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventFin, 9));
};


/** @param {?proto.gmgop.EventFin|undefined} value */
proto.gmgop.Event.prototype.setFin = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearFin = function() {
  this.setFin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasFin = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional EventChangePubkey changePubkey = 10;
 * @return {?proto.gmgop.EventChangePubkey}
 */
proto.gmgop.Event.prototype.getChangepubkey = function() {
  return /** @type{?proto.gmgop.EventChangePubkey} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventChangePubkey, 10));
};


/** @param {?proto.gmgop.EventChangePubkey|undefined} value */
proto.gmgop.Event.prototype.setChangepubkey = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearChangepubkey = function() {
  this.setChangepubkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasChangepubkey = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional EventRecallContract recallContract = 11;
 * @return {?proto.gmgop.EventRecallContract}
 */
proto.gmgop.Event.prototype.getRecallcontract = function() {
  return /** @type{?proto.gmgop.EventRecallContract} */ (
    jspb.Message.getWrapperField(this, proto.gmgop.EventRecallContract, 11));
};


/** @param {?proto.gmgop.EventRecallContract|undefined} value */
proto.gmgop.Event.prototype.setRecallcontract = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.gmgop.Event.oneofGroups_[0], value);
};


proto.gmgop.Event.prototype.clearRecallcontract = function() {
  this.setRecallcontract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gmgop.Event.prototype.hasRecallcontract = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventUserCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventUserCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventUserCreate.displayName = 'proto.gmgop.EventUserCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventUserCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventUserCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventUserCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventUserCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    role: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventUserCreate}
 */
proto.gmgop.EventUserCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventUserCreate;
  return proto.gmgop.EventUserCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventUserCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventUserCreate}
 */
proto.gmgop.EventUserCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventUserCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventUserCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventUserCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventUserCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getRole();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.gmgop.EventUserCreate.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventUserCreate.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 role = 2;
 * @return {number}
 */
proto.gmgop.EventUserCreate.prototype.getRole = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gmgop.EventUserCreate.prototype.setRole = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventAssertCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventAssertCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventAssertCreate.displayName = 'proto.gmgop.EventAssertCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventAssertCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventAssertCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventAssertCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventAssertCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventAssertCreate}
 */
proto.gmgop.EventAssertCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventAssertCreate;
  return proto.gmgop.EventAssertCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventAssertCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventAssertCreate}
 */
proto.gmgop.EventAssertCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 2:
      var value = /** @type {!proto.gmgop.AssertState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventAssertCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventAssertCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventAssertCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventAssertCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.EventAssertCreate.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventAssertCreate.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional AssertState state = 2;
 * @return {!proto.gmgop.AssertState}
 */
proto.gmgop.EventAssertCreate.prototype.getState = function() {
  return /** @type {!proto.gmgop.AssertState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gmgop.AssertState} value */
proto.gmgop.EventAssertCreate.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventAssertDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventAssertDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventAssertDelete.displayName = 'proto.gmgop.EventAssertDelete';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventAssertDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventAssertDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventAssertDelete} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventAssertDelete.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventAssertDelete}
 */
proto.gmgop.EventAssertDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventAssertDelete;
  return proto.gmgop.EventAssertDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventAssertDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventAssertDelete}
 */
proto.gmgop.EventAssertDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventAssertDelete} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventAssertDelete.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventAssertDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventAssertDelete.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.EventAssertDelete.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventAssertDelete.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventContractCreate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventContractCreate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventContractCreate.displayName = 'proto.gmgop.EventContractCreate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventContractCreate.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventContractCreate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventContractCreate} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventContractCreate.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventContractCreate}
 */
proto.gmgop.EventContractCreate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventContractCreate;
  return proto.gmgop.EventContractCreate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventContractCreate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventContractCreate}
 */
proto.gmgop.EventContractCreate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    case 2:
      var value = /** @type {!proto.gmgop.ContractState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventContractCreate} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventContractCreate.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventContractCreate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventContractCreate.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.EventContractCreate.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventContractCreate.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ContractState state = 2;
 * @return {!proto.gmgop.ContractState}
 */
proto.gmgop.EventContractCreate.prototype.getState = function() {
  return /** @type {!proto.gmgop.ContractState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gmgop.ContractState} value */
proto.gmgop.EventContractCreate.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventContractAgree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gmgop.EventContractAgree.repeatedFields_, null);
};
goog.inherits(proto.gmgop.EventContractAgree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventContractAgree.displayName = 'proto.gmgop.EventContractAgree';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gmgop.EventContractAgree.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventContractAgree.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventContractAgree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventContractAgree} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventContractAgree.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cstate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    astate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    assertid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rejectedList: jspb.Message.getField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventContractAgree}
 */
proto.gmgop.EventContractAgree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventContractAgree;
  return proto.gmgop.EventContractAgree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventContractAgree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventContractAgree}
 */
proto.gmgop.EventContractAgree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    case 2:
      var value = /** @type {!proto.gmgop.ContractState} */ (reader.readEnum());
      msg.setCstate(value);
      break;
    case 3:
      var value = /** @type {!proto.gmgop.AssertState} */ (reader.readEnum());
      msg.setAstate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addRejected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventContractAgree} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventContractAgree.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventContractAgree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventContractAgree.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getCstate();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = this.getAstate();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getRejectedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.EventContractAgree.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventContractAgree.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ContractState cstate = 2;
 * @return {!proto.gmgop.ContractState}
 */
proto.gmgop.EventContractAgree.prototype.getCstate = function() {
  return /** @type {!proto.gmgop.ContractState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gmgop.ContractState} value */
proto.gmgop.EventContractAgree.prototype.setCstate = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional AssertState astate = 3;
 * @return {!proto.gmgop.AssertState}
 */
proto.gmgop.EventContractAgree.prototype.getAstate = function() {
  return /** @type {!proto.gmgop.AssertState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.gmgop.AssertState} value */
proto.gmgop.EventContractAgree.prototype.setAstate = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string assertId = 4;
 * @return {string}
 */
proto.gmgop.EventContractAgree.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.gmgop.EventContractAgree.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated string rejected = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.gmgop.EventContractAgree.prototype.getRejectedList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 5));
};


/** @param {!Array.<string>} value */
proto.gmgop.EventContractAgree.prototype.setRejectedList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.gmgop.EventContractAgree.prototype.addRejected = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.gmgop.EventContractAgree.prototype.clearRejectedList = function() {
  this.setRejectedList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventContractReject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventContractReject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventContractReject.displayName = 'proto.gmgop.EventContractReject';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventContractReject.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventContractReject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventContractReject} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventContractReject.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventContractReject}
 */
proto.gmgop.EventContractReject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventContractReject;
  return proto.gmgop.EventContractReject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventContractReject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventContractReject}
 */
proto.gmgop.EventContractReject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    case 2:
      var value = /** @type {!proto.gmgop.ContractState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventContractReject} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventContractReject.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventContractReject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventContractReject.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.EventContractReject.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventContractReject.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ContractState state = 2;
 * @return {!proto.gmgop.ContractState}
 */
proto.gmgop.EventContractReject.prototype.getState = function() {
  return /** @type {!proto.gmgop.ContractState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gmgop.ContractState} value */
proto.gmgop.EventContractReject.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventDeliverAssert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventDeliverAssert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventDeliverAssert.displayName = 'proto.gmgop.EventDeliverAssert';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventDeliverAssert.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventDeliverAssert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventDeliverAssert} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventDeliverAssert.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventDeliverAssert}
 */
proto.gmgop.EventDeliverAssert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventDeliverAssert;
  return proto.gmgop.EventDeliverAssert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventDeliverAssert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventDeliverAssert}
 */
proto.gmgop.EventDeliverAssert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 2:
      var value = /** @type {!proto.gmgop.AssertState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventDeliverAssert} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventDeliverAssert.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventDeliverAssert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventDeliverAssert.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.EventDeliverAssert.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventDeliverAssert.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional AssertState state = 2;
 * @return {!proto.gmgop.AssertState}
 */
proto.gmgop.EventDeliverAssert.prototype.getState = function() {
  return /** @type {!proto.gmgop.AssertState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gmgop.AssertState} value */
proto.gmgop.EventDeliverAssert.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventDeliverAssertConfirm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventDeliverAssertConfirm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventDeliverAssertConfirm.displayName = 'proto.gmgop.EventDeliverAssertConfirm';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventDeliverAssertConfirm.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventDeliverAssertConfirm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventDeliverAssertConfirm} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventDeliverAssertConfirm.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventDeliverAssertConfirm}
 */
proto.gmgop.EventDeliverAssertConfirm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventDeliverAssertConfirm;
  return proto.gmgop.EventDeliverAssertConfirm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventDeliverAssertConfirm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventDeliverAssertConfirm}
 */
proto.gmgop.EventDeliverAssertConfirm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 2:
      var value = /** @type {!proto.gmgop.AssertState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventDeliverAssertConfirm} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventDeliverAssertConfirm.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventDeliverAssertConfirm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventDeliverAssertConfirm.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.EventDeliverAssertConfirm.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventDeliverAssertConfirm.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional AssertState state = 2;
 * @return {!proto.gmgop.AssertState}
 */
proto.gmgop.EventDeliverAssertConfirm.prototype.getState = function() {
  return /** @type {!proto.gmgop.AssertState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gmgop.AssertState} value */
proto.gmgop.EventDeliverAssertConfirm.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventFin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventFin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventFin.displayName = 'proto.gmgop.EventFin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventFin.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventFin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventFin} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventFin.toObject = function(includeInstance, msg) {
  var f, obj = {
    assertid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    astate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cstate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    contractid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventFin}
 */
proto.gmgop.EventFin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventFin;
  return proto.gmgop.EventFin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventFin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventFin}
 */
proto.gmgop.EventFin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssertid(value);
      break;
    case 2:
      var value = /** @type {!proto.gmgop.AssertState} */ (reader.readEnum());
      msg.setAstate(value);
      break;
    case 3:
      var value = /** @type {!proto.gmgop.ContractState} */ (reader.readEnum());
      msg.setCstate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventFin} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventFin.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventFin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventFin.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAssertid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getAstate();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = this.getCstate();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string assertId = 1;
 * @return {string}
 */
proto.gmgop.EventFin.prototype.getAssertid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventFin.prototype.setAssertid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional AssertState astate = 2;
 * @return {!proto.gmgop.AssertState}
 */
proto.gmgop.EventFin.prototype.getAstate = function() {
  return /** @type {!proto.gmgop.AssertState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gmgop.AssertState} value */
proto.gmgop.EventFin.prototype.setAstate = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional ContractState cstate = 3;
 * @return {!proto.gmgop.ContractState}
 */
proto.gmgop.EventFin.prototype.getCstate = function() {
  return /** @type {!proto.gmgop.ContractState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.gmgop.ContractState} value */
proto.gmgop.EventFin.prototype.setCstate = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string contractId = 4;
 * @return {string}
 */
proto.gmgop.EventFin.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.gmgop.EventFin.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventChangePubkey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventChangePubkey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventChangePubkey.displayName = 'proto.gmgop.EventChangePubkey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventChangePubkey.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventChangePubkey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventChangePubkey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventChangePubkey.toObject = function(includeInstance, msg) {
  var f, obj = {
    newpubkey: msg.getNewpubkey_asB64(),
    uid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventChangePubkey}
 */
proto.gmgop.EventChangePubkey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventChangePubkey;
  return proto.gmgop.EventChangePubkey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventChangePubkey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventChangePubkey}
 */
proto.gmgop.EventChangePubkey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNewpubkey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventChangePubkey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventChangePubkey.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventChangePubkey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventChangePubkey.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getNewpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes newPubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gmgop.EventChangePubkey.prototype.getNewpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes newPubkey = 1;
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {string}
 */
proto.gmgop.EventChangePubkey.prototype.getNewpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNewpubkey()));
};


/**
 * optional bytes newPubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNewpubkey()`
 * @return {!Uint8Array}
 */
proto.gmgop.EventChangePubkey.prototype.getNewpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNewpubkey()));
};


/** @param {!(string|Uint8Array)} value */
proto.gmgop.EventChangePubkey.prototype.setNewpubkey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.gmgop.EventChangePubkey.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gmgop.EventChangePubkey.prototype.setUid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gmgop.EventRecallContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gmgop.EventRecallContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gmgop.EventRecallContract.displayName = 'proto.gmgop.EventRecallContract';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gmgop.EventRecallContract.prototype.toObject = function(opt_includeInstance) {
  return proto.gmgop.EventRecallContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gmgop.EventRecallContract} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gmgop.EventRecallContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gmgop.EventRecallContract}
 */
proto.gmgop.EventRecallContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gmgop.EventRecallContract;
  return proto.gmgop.EventRecallContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gmgop.EventRecallContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gmgop.EventRecallContract}
 */
proto.gmgop.EventRecallContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gmgop.EventRecallContract} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventRecallContract.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gmgop.EventRecallContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gmgop.EventRecallContract.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getContractid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string contractId = 1;
 * @return {string}
 */
proto.gmgop.EventRecallContract.prototype.getContractid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gmgop.EventRecallContract.prototype.setContractid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.gmgop.EventRecallContract.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gmgop.EventRecallContract.prototype.setUid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.gmgop.MessageType = {
  MSGERROR: 0,
  MSGINIT: 1,
  MSGSHUTDOWN: 2,
  MSGCLOSE: 3,
  MSGGOPASSERTCREATE: 4,
  MSGGOPASSERTDELETE: 5,
  MSGUSERCREATE: 6,
  MSGBUCONTRACTCREATE: 7,
  MSGGOPCONTRACTAGREE: 8,
  MSGGOPCONTRACTREJECT: 9,
  MSGGOPDELIVERASSERT: 10,
  MSGBUDELIVERASSERTCONFIRM: 11,
  MSGGOPFIN: 12,
  MSGCHANGEPUBKEY: 13,
  MSGBURECALLCONTRACT: 14,
  MSGCOUNT: 15
};

/**
 * @enum {number}
 */
proto.gmgop.AssertState = {
  STUNDEFINED: 0,
  STLEASEHOLD: 1,
  STLEASED: 2,
  STDELIVERED: 3,
  STCONFIRMED: 4,
  STEXPIRED: 5
};

/**
 * @enum {number}
 */
proto.gmgop.Role = {
  RLUNDEFINED: 0,
  RLBU: 1,
  RLGOP: 2
};

/**
 * @enum {number}
 */
proto.gmgop.ContractState = {
  CSUNDEFINED: 0,
  CSCREATED: 1,
  CSAGREEED: 2,
  CSREJECTED: 3,
  CSRECALLED: 4,
  CSEXPIRED: 5
};

goog.object.extend(exports, proto.gmgop);
