// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package gmgop is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Request
	RequestUserCreate
	RequestGopAssertCreate
	RequestGopAssertDelete
	RequestBuContractCreate
	RequestGopContractReject
	RequestGopContractAgree
	RequestGopDeliverAssert
	RequestBuDeliverAssertConfirm
	RequestGopContractFin
	RequestChangePubkey
	RequestBuRecallContract
	Response
	ResponseException
	ResponseOK
	Receipt
	ResponseRecallContract
	ResponseFin
	ResponseDeliverAssertConfirm
	ResponseDeliverAssert
	ResponseContractAgree
	ResponseContractReject
	ResponseContractCreate
	ResponseAssertCreate
	ResponseAssertDelete
	ResponseUserCreate
	ResponseChangePubkey
	Assert
	User
	Contract
	Event
	EventUserCreate
	EventAssertCreate
	EventAssertDelete
	EventContractCreate
	EventContractAgree
	EventContractReject
	EventDeliverAssert
	EventDeliverAssertConfirm
	EventFin
	EventChangePubkey
	EventRecallContract
*/
package gmgop

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_MsgError                  MessageType = 0
	MessageType_MsgInit                   MessageType = 1
	MessageType_MsgShutDown               MessageType = 2
	MessageType_MsgClose                  MessageType = 3
	MessageType_MsgGopAssertCreate        MessageType = 4
	MessageType_MsgGopAssertDelete        MessageType = 5
	MessageType_MsgUserCreate             MessageType = 6
	MessageType_MsgBuContractCreate       MessageType = 7
	MessageType_MsgGopContractAgree       MessageType = 8
	MessageType_MsgGopContractReject      MessageType = 9
	MessageType_MsgGopDeliverAssert       MessageType = 10
	MessageType_MsgBuDeliverAssertConfirm MessageType = 11
	MessageType_MsgGopFin                 MessageType = 12
	MessageType_MsgChangePubkey           MessageType = 13
	MessageType_MsgBuRecallContract       MessageType = 14
	MessageType_MsgCount                  MessageType = 15
)

var MessageType_name = map[int32]string{
	0:  "MsgError",
	1:  "MsgInit",
	2:  "MsgShutDown",
	3:  "MsgClose",
	4:  "MsgGopAssertCreate",
	5:  "MsgGopAssertDelete",
	6:  "MsgUserCreate",
	7:  "MsgBuContractCreate",
	8:  "MsgGopContractAgree",
	9:  "MsgGopContractReject",
	10: "MsgGopDeliverAssert",
	11: "MsgBuDeliverAssertConfirm",
	12: "MsgGopFin",
	13: "MsgChangePubkey",
	14: "MsgBuRecallContract",
	15: "MsgCount",
}
var MessageType_value = map[string]int32{
	"MsgError":                  0,
	"MsgInit":                   1,
	"MsgShutDown":               2,
	"MsgClose":                  3,
	"MsgGopAssertCreate":        4,
	"MsgGopAssertDelete":        5,
	"MsgUserCreate":             6,
	"MsgBuContractCreate":       7,
	"MsgGopContractAgree":       8,
	"MsgGopContractReject":      9,
	"MsgGopDeliverAssert":       10,
	"MsgBuDeliverAssertConfirm": 11,
	"MsgGopFin":                 12,
	"MsgChangePubkey":           13,
	"MsgBuRecallContract":       14,
	"MsgCount":                  15,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AssertState int32

const (
	AssertState_StUndefined AssertState = 0
	AssertState_StLeasehold AssertState = 1
	AssertState_StLeased    AssertState = 2
	AssertState_StDelivered AssertState = 3
	AssertState_StConfirmed AssertState = 4
	AssertState_StExpired   AssertState = 5
)

var AssertState_name = map[int32]string{
	0: "StUndefined",
	1: "StLeasehold",
	2: "StLeased",
	3: "StDelivered",
	4: "StConfirmed",
	5: "StExpired",
}
var AssertState_value = map[string]int32{
	"StUndefined": 0,
	"StLeasehold": 1,
	"StLeased":    2,
	"StDelivered": 3,
	"StConfirmed": 4,
	"StExpired":   5,
}

func (x AssertState) String() string {
	return proto.EnumName(AssertState_name, int32(x))
}
func (AssertState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Role int32

const (
	Role_RlUndefined Role = 0
	Role_RlBu        Role = 1
	Role_RlGop       Role = 2
)

var Role_name = map[int32]string{
	0: "RlUndefined",
	1: "RlBu",
	2: "RlGop",
}
var Role_value = map[string]int32{
	"RlUndefined": 0,
	"RlBu":        1,
	"RlGop":       2,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}
func (Role) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ContractState int32

const (
	ContractState_CSUndefined ContractState = 0
	ContractState_CSCreated   ContractState = 1
	ContractState_CSAgreeed   ContractState = 2
	ContractState_CSRejected  ContractState = 3
	ContractState_CSRecalled  ContractState = 4
	ContractState_CSExpired   ContractState = 5
)

var ContractState_name = map[int32]string{
	0: "CSUndefined",
	1: "CSCreated",
	2: "CSAgreeed",
	3: "CSRejected",
	4: "CSRecalled",
	5: "CSExpired",
}
var ContractState_value = map[string]int32{
	"CSUndefined": 0,
	"CSCreated":   1,
	"CSAgreeed":   2,
	"CSRejected":  3,
	"CSRecalled":  4,
	"CSExpired":   5,
}

func (x ContractState) String() string {
	return proto.EnumName(ContractState_name, int32(x))
}
func (ContractState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Request struct {
	// Types that are valid to be assigned to Value:
	//	*Request_UserCreate
	//	*Request_GopAssertCreate
	//	*Request_GopAssertDelete
	//	*Request_BuContractCreate
	//	*Request_GopContractAgree
	//	*Request_GopContractReject
	//	*Request_GopDeliverAssert
	//	*Request_BuDeliverAssertConfirm
	//	*Request_GopFin
	//	*Request_ChangePubkey
	//	*Request_BuRecallContract
	Value         isRequest_Value `protobuf_oneof:"value"`
	Uid           string          `protobuf:"bytes,12,opt,name=uid" json:"uid,omitempty"`
	InstructionId int64           `protobuf:"varint,13,opt,name=instructionId" json:"instructionId,omitempty"`
	Pubkey        []byte          `protobuf:"bytes,14,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Sign          []byte          `protobuf:"bytes,15,opt,name=sign,proto3" json:"sign,omitempty"`
	ActionId      MessageType     `protobuf:"varint,16,opt,name=actionId,enum=gmgop.MessageType" json:"actionId,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRequest_Value interface {
	isRequest_Value()
}

type Request_UserCreate struct {
	UserCreate *RequestUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Request_GopAssertCreate struct {
	GopAssertCreate *RequestGopAssertCreate `protobuf:"bytes,2,opt,name=gopAssertCreate,oneof"`
}
type Request_GopAssertDelete struct {
	GopAssertDelete *RequestGopAssertDelete `protobuf:"bytes,3,opt,name=gopAssertDelete,oneof"`
}
type Request_BuContractCreate struct {
	BuContractCreate *RequestBuContractCreate `protobuf:"bytes,4,opt,name=buContractCreate,oneof"`
}
type Request_GopContractAgree struct {
	GopContractAgree *RequestGopContractAgree `protobuf:"bytes,5,opt,name=gopContractAgree,oneof"`
}
type Request_GopContractReject struct {
	GopContractReject *RequestGopContractReject `protobuf:"bytes,6,opt,name=gopContractReject,oneof"`
}
type Request_GopDeliverAssert struct {
	GopDeliverAssert *RequestGopDeliverAssert `protobuf:"bytes,7,opt,name=gopDeliverAssert,oneof"`
}
type Request_BuDeliverAssertConfirm struct {
	BuDeliverAssertConfirm *RequestBuDeliverAssertConfirm `protobuf:"bytes,8,opt,name=buDeliverAssertConfirm,oneof"`
}
type Request_GopFin struct {
	GopFin *RequestGopContractFin `protobuf:"bytes,9,opt,name=gopFin,oneof"`
}
type Request_ChangePubkey struct {
	ChangePubkey *RequestChangePubkey `protobuf:"bytes,10,opt,name=changePubkey,oneof"`
}
type Request_BuRecallContract struct {
	BuRecallContract *RequestBuRecallContract `protobuf:"bytes,11,opt,name=buRecallContract,oneof"`
}

func (*Request_UserCreate) isRequest_Value()             {}
func (*Request_GopAssertCreate) isRequest_Value()        {}
func (*Request_GopAssertDelete) isRequest_Value()        {}
func (*Request_BuContractCreate) isRequest_Value()       {}
func (*Request_GopContractAgree) isRequest_Value()       {}
func (*Request_GopContractReject) isRequest_Value()      {}
func (*Request_GopDeliverAssert) isRequest_Value()       {}
func (*Request_BuDeliverAssertConfirm) isRequest_Value() {}
func (*Request_GopFin) isRequest_Value()                 {}
func (*Request_ChangePubkey) isRequest_Value()           {}
func (*Request_BuRecallContract) isRequest_Value()       {}

func (m *Request) GetValue() isRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Request) GetUserCreate() *RequestUserCreate {
	if x, ok := m.GetValue().(*Request_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Request) GetGopAssertCreate() *RequestGopAssertCreate {
	if x, ok := m.GetValue().(*Request_GopAssertCreate); ok {
		return x.GopAssertCreate
	}
	return nil
}

func (m *Request) GetGopAssertDelete() *RequestGopAssertDelete {
	if x, ok := m.GetValue().(*Request_GopAssertDelete); ok {
		return x.GopAssertDelete
	}
	return nil
}

func (m *Request) GetBuContractCreate() *RequestBuContractCreate {
	if x, ok := m.GetValue().(*Request_BuContractCreate); ok {
		return x.BuContractCreate
	}
	return nil
}

func (m *Request) GetGopContractAgree() *RequestGopContractAgree {
	if x, ok := m.GetValue().(*Request_GopContractAgree); ok {
		return x.GopContractAgree
	}
	return nil
}

func (m *Request) GetGopContractReject() *RequestGopContractReject {
	if x, ok := m.GetValue().(*Request_GopContractReject); ok {
		return x.GopContractReject
	}
	return nil
}

func (m *Request) GetGopDeliverAssert() *RequestGopDeliverAssert {
	if x, ok := m.GetValue().(*Request_GopDeliverAssert); ok {
		return x.GopDeliverAssert
	}
	return nil
}

func (m *Request) GetBuDeliverAssertConfirm() *RequestBuDeliverAssertConfirm {
	if x, ok := m.GetValue().(*Request_BuDeliverAssertConfirm); ok {
		return x.BuDeliverAssertConfirm
	}
	return nil
}

func (m *Request) GetGopFin() *RequestGopContractFin {
	if x, ok := m.GetValue().(*Request_GopFin); ok {
		return x.GopFin
	}
	return nil
}

func (m *Request) GetChangePubkey() *RequestChangePubkey {
	if x, ok := m.GetValue().(*Request_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Request) GetBuRecallContract() *RequestBuRecallContract {
	if x, ok := m.GetValue().(*Request_BuRecallContract); ok {
		return x.BuRecallContract
	}
	return nil
}

func (m *Request) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Request) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *Request) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *Request) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *Request) GetActionId() MessageType {
	if m != nil {
		return m.ActionId
	}
	return MessageType_MsgError
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_UserCreate)(nil),
		(*Request_GopAssertCreate)(nil),
		(*Request_GopAssertDelete)(nil),
		(*Request_BuContractCreate)(nil),
		(*Request_GopContractAgree)(nil),
		(*Request_GopContractReject)(nil),
		(*Request_GopDeliverAssert)(nil),
		(*Request_BuDeliverAssertConfirm)(nil),
		(*Request_GopFin)(nil),
		(*Request_ChangePubkey)(nil),
		(*Request_BuRecallContract)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Request_GopAssertCreate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GopAssertCreate); err != nil {
			return err
		}
	case *Request_GopAssertDelete:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GopAssertDelete); err != nil {
			return err
		}
	case *Request_BuContractCreate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuContractCreate); err != nil {
			return err
		}
	case *Request_GopContractAgree:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GopContractAgree); err != nil {
			return err
		}
	case *Request_GopContractReject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GopContractReject); err != nil {
			return err
		}
	case *Request_GopDeliverAssert:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GopDeliverAssert); err != nil {
			return err
		}
	case *Request_BuDeliverAssertConfirm:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuDeliverAssertConfirm); err != nil {
			return err
		}
	case *Request_GopFin:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GopFin); err != nil {
			return err
		}
	case *Request_ChangePubkey:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Request_BuRecallContract:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuRecallContract); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Value has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Request_UserCreate{msg}
		return true, err
	case 2: // value.gopAssertCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGopAssertCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Request_GopAssertCreate{msg}
		return true, err
	case 3: // value.gopAssertDelete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGopAssertDelete)
		err := b.DecodeMessage(msg)
		m.Value = &Request_GopAssertDelete{msg}
		return true, err
	case 4: // value.buContractCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestBuContractCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Request_BuContractCreate{msg}
		return true, err
	case 5: // value.gopContractAgree
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGopContractAgree)
		err := b.DecodeMessage(msg)
		m.Value = &Request_GopContractAgree{msg}
		return true, err
	case 6: // value.gopContractReject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGopContractReject)
		err := b.DecodeMessage(msg)
		m.Value = &Request_GopContractReject{msg}
		return true, err
	case 7: // value.gopDeliverAssert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGopDeliverAssert)
		err := b.DecodeMessage(msg)
		m.Value = &Request_GopDeliverAssert{msg}
		return true, err
	case 8: // value.buDeliverAssertConfirm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestBuDeliverAssertConfirm)
		err := b.DecodeMessage(msg)
		m.Value = &Request_BuDeliverAssertConfirm{msg}
		return true, err
	case 9: // value.gopFin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGopContractFin)
		err := b.DecodeMessage(msg)
		m.Value = &Request_GopFin{msg}
		return true, err
	case 10: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Request_ChangePubkey{msg}
		return true, err
	case 11: // value.buRecallContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestBuRecallContract)
		err := b.DecodeMessage(msg)
		m.Value = &Request_BuRecallContract{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GopAssertCreate:
		s := proto.Size(x.GopAssertCreate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GopAssertDelete:
		s := proto.Size(x.GopAssertDelete)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_BuContractCreate:
		s := proto.Size(x.BuContractCreate)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GopContractAgree:
		s := proto.Size(x.GopContractAgree)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GopContractReject:
		s := proto.Size(x.GopContractReject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GopDeliverAssert:
		s := proto.Size(x.GopDeliverAssert)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_BuDeliverAssertConfirm:
		s := proto.Size(x.BuDeliverAssertConfirm)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GopFin:
		s := proto.Size(x.GopFin)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_BuRecallContract:
		s := proto.Size(x.BuRecallContract)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RequestUserCreate struct {
	Uid    string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Pubkey []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Info   []byte `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Role   int32  `protobuf:"varint,4,opt,name=role" json:"role,omitempty"`
}

func (m *RequestUserCreate) Reset()                    { *m = RequestUserCreate{} }
func (m *RequestUserCreate) String() string            { return proto.CompactTextString(m) }
func (*RequestUserCreate) ProtoMessage()               {}
func (*RequestUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RequestUserCreate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RequestUserCreate) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *RequestUserCreate) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *RequestUserCreate) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

type RequestGopAssertCreate struct {
	AssertId string `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
	Price    int64  `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
	Info     []byte `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestGopAssertCreate) Reset()                    { *m = RequestGopAssertCreate{} }
func (m *RequestGopAssertCreate) String() string            { return proto.CompactTextString(m) }
func (*RequestGopAssertCreate) ProtoMessage()               {}
func (*RequestGopAssertCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestGopAssertCreate) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *RequestGopAssertCreate) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *RequestGopAssertCreate) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestGopAssertDelete struct {
	AssertId string `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
}

func (m *RequestGopAssertDelete) Reset()                    { *m = RequestGopAssertDelete{} }
func (m *RequestGopAssertDelete) String() string            { return proto.CompactTextString(m) }
func (*RequestGopAssertDelete) ProtoMessage()               {}
func (*RequestGopAssertDelete) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestGopAssertDelete) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

type RequestBuContractCreate struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	AssertId   string `protobuf:"bytes,2,opt,name=assertId" json:"assertId,omitempty"`
	Price      int64  `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`
	StartT     int64  `protobuf:"varint,4,opt,name=startT" json:"startT,omitempty"`
	EndT       int64  `protobuf:"varint,5,opt,name=endT" json:"endT,omitempty"`
	Info       []byte `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *RequestBuContractCreate) Reset()                    { *m = RequestBuContractCreate{} }
func (m *RequestBuContractCreate) String() string            { return proto.CompactTextString(m) }
func (*RequestBuContractCreate) ProtoMessage()               {}
func (*RequestBuContractCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RequestBuContractCreate) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *RequestBuContractCreate) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *RequestBuContractCreate) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *RequestBuContractCreate) GetStartT() int64 {
	if m != nil {
		return m.StartT
	}
	return 0
}

func (m *RequestBuContractCreate) GetEndT() int64 {
	if m != nil {
		return m.EndT
	}
	return 0
}

func (m *RequestBuContractCreate) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type RequestGopContractReject struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestGopContractReject) Reset()                    { *m = RequestGopContractReject{} }
func (m *RequestGopContractReject) String() string            { return proto.CompactTextString(m) }
func (*RequestGopContractReject) ProtoMessage()               {}
func (*RequestGopContractReject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RequestGopContractReject) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestGopContractAgree struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestGopContractAgree) Reset()                    { *m = RequestGopContractAgree{} }
func (m *RequestGopContractAgree) String() string            { return proto.CompactTextString(m) }
func (*RequestGopContractAgree) ProtoMessage()               {}
func (*RequestGopContractAgree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RequestGopContractAgree) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestGopDeliverAssert struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestGopDeliverAssert) Reset()                    { *m = RequestGopDeliverAssert{} }
func (m *RequestGopDeliverAssert) String() string            { return proto.CompactTextString(m) }
func (*RequestGopDeliverAssert) ProtoMessage()               {}
func (*RequestGopDeliverAssert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RequestGopDeliverAssert) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestBuDeliverAssertConfirm struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestBuDeliverAssertConfirm) Reset()                    { *m = RequestBuDeliverAssertConfirm{} }
func (m *RequestBuDeliverAssertConfirm) String() string            { return proto.CompactTextString(m) }
func (*RequestBuDeliverAssertConfirm) ProtoMessage()               {}
func (*RequestBuDeliverAssertConfirm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RequestBuDeliverAssertConfirm) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestGopContractFin struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestGopContractFin) Reset()                    { *m = RequestGopContractFin{} }
func (m *RequestGopContractFin) String() string            { return proto.CompactTextString(m) }
func (*RequestGopContractFin) ProtoMessage()               {}
func (*RequestGopContractFin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RequestGopContractFin) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type RequestChangePubkey struct {
	NewPubkey []byte `protobuf:"bytes,1,opt,name=newPubkey,proto3" json:"newPubkey,omitempty"`
}

func (m *RequestChangePubkey) Reset()                    { *m = RequestChangePubkey{} }
func (m *RequestChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*RequestChangePubkey) ProtoMessage()               {}
func (*RequestChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RequestChangePubkey) GetNewPubkey() []byte {
	if m != nil {
		return m.NewPubkey
	}
	return nil
}

type RequestBuRecallContract struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *RequestBuRecallContract) Reset()                    { *m = RequestBuRecallContract{} }
func (m *RequestBuRecallContract) String() string            { return proto.CompactTextString(m) }
func (*RequestBuRecallContract) ProtoMessage()               {}
func (*RequestBuRecallContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RequestBuRecallContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type Response struct {
	// Types that are valid to be assigned to Value:
	//	*Response_UserCreate
	//	*Response_AssertCreate
	//	*Response_AssertDelete
	//	*Response_ContractCreate
	//	*Response_ContractAgree
	//	*Response_ContractReject
	//	*Response_DeliverAssert
	//	*Response_DeliverAssertConfirm
	//	*Response_Fin
	//	*Response_ChangePubkey
	//	*Response_BuRecallContract
	//	*Response_Ok
	//	*Response_Exception
	Value isResponse_Value `protobuf_oneof:"value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type isResponse_Value interface {
	isResponse_Value()
}

type Response_UserCreate struct {
	UserCreate *ResponseUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Response_AssertCreate struct {
	AssertCreate *ResponseAssertCreate `protobuf:"bytes,2,opt,name=assertCreate,oneof"`
}
type Response_AssertDelete struct {
	AssertDelete *ResponseAssertDelete `protobuf:"bytes,3,opt,name=assertDelete,oneof"`
}
type Response_ContractCreate struct {
	ContractCreate *ResponseContractCreate `protobuf:"bytes,4,opt,name=contractCreate,oneof"`
}
type Response_ContractAgree struct {
	ContractAgree *ResponseContractAgree `protobuf:"bytes,5,opt,name=contractAgree,oneof"`
}
type Response_ContractReject struct {
	ContractReject *ResponseContractReject `protobuf:"bytes,6,opt,name=contractReject,oneof"`
}
type Response_DeliverAssert struct {
	DeliverAssert *ResponseDeliverAssert `protobuf:"bytes,7,opt,name=deliverAssert,oneof"`
}
type Response_DeliverAssertConfirm struct {
	DeliverAssertConfirm *ResponseDeliverAssertConfirm `protobuf:"bytes,8,opt,name=deliverAssertConfirm,oneof"`
}
type Response_Fin struct {
	Fin *ResponseFin `protobuf:"bytes,9,opt,name=fin,oneof"`
}
type Response_ChangePubkey struct {
	ChangePubkey *ResponseChangePubkey `protobuf:"bytes,10,opt,name=changePubkey,oneof"`
}
type Response_BuRecallContract struct {
	BuRecallContract *ResponseRecallContract `protobuf:"bytes,11,opt,name=buRecallContract,oneof"`
}
type Response_Ok struct {
	Ok *ResponseOK `protobuf:"bytes,12,opt,name=ok,oneof"`
}
type Response_Exception struct {
	Exception *ResponseException `protobuf:"bytes,13,opt,name=exception,oneof"`
}

func (*Response_UserCreate) isResponse_Value()           {}
func (*Response_AssertCreate) isResponse_Value()         {}
func (*Response_AssertDelete) isResponse_Value()         {}
func (*Response_ContractCreate) isResponse_Value()       {}
func (*Response_ContractAgree) isResponse_Value()        {}
func (*Response_ContractReject) isResponse_Value()       {}
func (*Response_DeliverAssert) isResponse_Value()        {}
func (*Response_DeliverAssertConfirm) isResponse_Value() {}
func (*Response_Fin) isResponse_Value()                  {}
func (*Response_ChangePubkey) isResponse_Value()         {}
func (*Response_BuRecallContract) isResponse_Value()     {}
func (*Response_Ok) isResponse_Value()                   {}
func (*Response_Exception) isResponse_Value()            {}

func (m *Response) GetValue() isResponse_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Response) GetUserCreate() *ResponseUserCreate {
	if x, ok := m.GetValue().(*Response_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Response) GetAssertCreate() *ResponseAssertCreate {
	if x, ok := m.GetValue().(*Response_AssertCreate); ok {
		return x.AssertCreate
	}
	return nil
}

func (m *Response) GetAssertDelete() *ResponseAssertDelete {
	if x, ok := m.GetValue().(*Response_AssertDelete); ok {
		return x.AssertDelete
	}
	return nil
}

func (m *Response) GetContractCreate() *ResponseContractCreate {
	if x, ok := m.GetValue().(*Response_ContractCreate); ok {
		return x.ContractCreate
	}
	return nil
}

func (m *Response) GetContractAgree() *ResponseContractAgree {
	if x, ok := m.GetValue().(*Response_ContractAgree); ok {
		return x.ContractAgree
	}
	return nil
}

func (m *Response) GetContractReject() *ResponseContractReject {
	if x, ok := m.GetValue().(*Response_ContractReject); ok {
		return x.ContractReject
	}
	return nil
}

func (m *Response) GetDeliverAssert() *ResponseDeliverAssert {
	if x, ok := m.GetValue().(*Response_DeliverAssert); ok {
		return x.DeliverAssert
	}
	return nil
}

func (m *Response) GetDeliverAssertConfirm() *ResponseDeliverAssertConfirm {
	if x, ok := m.GetValue().(*Response_DeliverAssertConfirm); ok {
		return x.DeliverAssertConfirm
	}
	return nil
}

func (m *Response) GetFin() *ResponseFin {
	if x, ok := m.GetValue().(*Response_Fin); ok {
		return x.Fin
	}
	return nil
}

func (m *Response) GetChangePubkey() *ResponseChangePubkey {
	if x, ok := m.GetValue().(*Response_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Response) GetBuRecallContract() *ResponseRecallContract {
	if x, ok := m.GetValue().(*Response_BuRecallContract); ok {
		return x.BuRecallContract
	}
	return nil
}

func (m *Response) GetOk() *ResponseOK {
	if x, ok := m.GetValue().(*Response_Ok); ok {
		return x.Ok
	}
	return nil
}

func (m *Response) GetException() *ResponseException {
	if x, ok := m.GetValue().(*Response_Exception); ok {
		return x.Exception
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_UserCreate)(nil),
		(*Response_AssertCreate)(nil),
		(*Response_AssertDelete)(nil),
		(*Response_ContractCreate)(nil),
		(*Response_ContractAgree)(nil),
		(*Response_ContractReject)(nil),
		(*Response_DeliverAssert)(nil),
		(*Response_DeliverAssertConfirm)(nil),
		(*Response_Fin)(nil),
		(*Response_ChangePubkey)(nil),
		(*Response_BuRecallContract)(nil),
		(*Response_Ok)(nil),
		(*Response_Exception)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Response_AssertCreate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssertCreate); err != nil {
			return err
		}
	case *Response_AssertDelete:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssertDelete); err != nil {
			return err
		}
	case *Response_ContractCreate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractCreate); err != nil {
			return err
		}
	case *Response_ContractAgree:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractAgree); err != nil {
			return err
		}
	case *Response_ContractReject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractReject); err != nil {
			return err
		}
	case *Response_DeliverAssert:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeliverAssert); err != nil {
			return err
		}
	case *Response_DeliverAssertConfirm:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeliverAssertConfirm); err != nil {
			return err
		}
	case *Response_Fin:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fin); err != nil {
			return err
		}
	case *Response_ChangePubkey:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Response_BuRecallContract:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuRecallContract); err != nil {
			return err
		}
	case *Response_Ok:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ok); err != nil {
			return err
		}
	case *Response_Exception:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Exception); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Value has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Response_UserCreate{msg}
		return true, err
	case 2: // value.assertCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseAssertCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Response_AssertCreate{msg}
		return true, err
	case 3: // value.assertDelete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseAssertDelete)
		err := b.DecodeMessage(msg)
		m.Value = &Response_AssertDelete{msg}
		return true, err
	case 4: // value.contractCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseContractCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ContractCreate{msg}
		return true, err
	case 5: // value.contractAgree
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseContractAgree)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ContractAgree{msg}
		return true, err
	case 6: // value.contractReject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseContractReject)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ContractReject{msg}
		return true, err
	case 7: // value.deliverAssert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseDeliverAssert)
		err := b.DecodeMessage(msg)
		m.Value = &Response_DeliverAssert{msg}
		return true, err
	case 8: // value.deliverAssertConfirm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseDeliverAssertConfirm)
		err := b.DecodeMessage(msg)
		m.Value = &Response_DeliverAssertConfirm{msg}
		return true, err
	case 9: // value.fin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseFin)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Fin{msg}
		return true, err
	case 10: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Response_ChangePubkey{msg}
		return true, err
	case 11: // value.buRecallContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseRecallContract)
		err := b.DecodeMessage(msg)
		m.Value = &Response_BuRecallContract{msg}
		return true, err
	case 12: // value.ok
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseOK)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Ok{msg}
		return true, err
	case 13: // value.exception
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseException)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Exception{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_AssertCreate:
		s := proto.Size(x.AssertCreate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_AssertDelete:
		s := proto.Size(x.AssertDelete)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ContractCreate:
		s := proto.Size(x.ContractCreate)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ContractAgree:
		s := proto.Size(x.ContractAgree)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ContractReject:
		s := proto.Size(x.ContractReject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_DeliverAssert:
		s := proto.Size(x.DeliverAssert)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_DeliverAssertConfirm:
		s := proto.Size(x.DeliverAssertConfirm)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Fin:
		s := proto.Size(x.Fin)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_BuRecallContract:
		s := proto.Size(x.BuRecallContract)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Ok:
		s := proto.Size(x.Ok)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Exception:
		s := proto.Size(x.Exception)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ResponseException struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseException) Reset()                    { *m = ResponseException{} }
func (m *ResponseException) String() string            { return proto.CompactTextString(m) }
func (*ResponseException) ProtoMessage()               {}
func (*ResponseException) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ResponseException) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ResponseOK struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *ResponseOK) Reset()                    { *m = ResponseOK{} }
func (m *ResponseOK) String() string            { return proto.CompactTextString(m) }
func (*ResponseOK) ProtoMessage()               {}
func (*ResponseOK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ResponseOK) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Receipt struct {
	IsOk bool   `protobuf:"varint,1,opt,name=isOk" json:"isOk,omitempty"`
	Err  []byte `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (m *Receipt) Reset()                    { *m = Receipt{} }
func (m *Receipt) String() string            { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()               {}
func (*Receipt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Receipt) GetIsOk() bool {
	if m != nil {
		return m.IsOk
	}
	return false
}

func (m *Receipt) GetErr() []byte {
	if m != nil {
		return m.Err
	}
	return nil
}

type ResponseRecallContract struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseRecallContract) Reset()                    { *m = ResponseRecallContract{} }
func (m *ResponseRecallContract) String() string            { return proto.CompactTextString(m) }
func (*ResponseRecallContract) ProtoMessage()               {}
func (*ResponseRecallContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ResponseRecallContract) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseRecallContract) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseFin struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseFin) Reset()                    { *m = ResponseFin{} }
func (m *ResponseFin) String() string            { return proto.CompactTextString(m) }
func (*ResponseFin) ProtoMessage()               {}
func (*ResponseFin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ResponseFin) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseFin) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseDeliverAssertConfirm struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseDeliverAssertConfirm) Reset()                    { *m = ResponseDeliverAssertConfirm{} }
func (m *ResponseDeliverAssertConfirm) String() string            { return proto.CompactTextString(m) }
func (*ResponseDeliverAssertConfirm) ProtoMessage()               {}
func (*ResponseDeliverAssertConfirm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ResponseDeliverAssertConfirm) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseDeliverAssertConfirm) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseDeliverAssert struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseDeliverAssert) Reset()                    { *m = ResponseDeliverAssert{} }
func (m *ResponseDeliverAssert) String() string            { return proto.CompactTextString(m) }
func (*ResponseDeliverAssert) ProtoMessage()               {}
func (*ResponseDeliverAssert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ResponseDeliverAssert) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseDeliverAssert) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseContractAgree struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseContractAgree) Reset()                    { *m = ResponseContractAgree{} }
func (m *ResponseContractAgree) String() string            { return proto.CompactTextString(m) }
func (*ResponseContractAgree) ProtoMessage()               {}
func (*ResponseContractAgree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ResponseContractAgree) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseContractAgree) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseContractReject struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseContractReject) Reset()                    { *m = ResponseContractReject{} }
func (m *ResponseContractReject) String() string            { return proto.CompactTextString(m) }
func (*ResponseContractReject) ProtoMessage()               {}
func (*ResponseContractReject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ResponseContractReject) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseContractReject) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseContractCreate struct {
	Event         *Event `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	InstructionId int64  `protobuf:"varint,2,opt,name=instructionId" json:"instructionId,omitempty"`
}

func (m *ResponseContractCreate) Reset()                    { *m = ResponseContractCreate{} }
func (m *ResponseContractCreate) String() string            { return proto.CompactTextString(m) }
func (*ResponseContractCreate) ProtoMessage()               {}
func (*ResponseContractCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ResponseContractCreate) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ResponseContractCreate) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

type ResponseAssertCreate struct {
	Event         *Event `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	InstructionId int64  `protobuf:"varint,2,opt,name=instructionId" json:"instructionId,omitempty"`
}

func (m *ResponseAssertCreate) Reset()                    { *m = ResponseAssertCreate{} }
func (m *ResponseAssertCreate) String() string            { return proto.CompactTextString(m) }
func (*ResponseAssertCreate) ProtoMessage()               {}
func (*ResponseAssertCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ResponseAssertCreate) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ResponseAssertCreate) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

type ResponseAssertDelete struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseAssertDelete) Reset()                    { *m = ResponseAssertDelete{} }
func (m *ResponseAssertDelete) String() string            { return proto.CompactTextString(m) }
func (*ResponseAssertDelete) ProtoMessage()               {}
func (*ResponseAssertDelete) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ResponseAssertDelete) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseAssertDelete) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseUserCreate struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseUserCreate) Reset()                    { *m = ResponseUserCreate{} }
func (m *ResponseUserCreate) String() string            { return proto.CompactTextString(m) }
func (*ResponseUserCreate) ProtoMessage()               {}
func (*ResponseUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ResponseUserCreate) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseUserCreate) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type ResponseChangePubkey struct {
	InstructionId int64  `protobuf:"varint,1,opt,name=instructionId" json:"instructionId,omitempty"`
	Event         *Event `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ResponseChangePubkey) Reset()                    { *m = ResponseChangePubkey{} }
func (m *ResponseChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*ResponseChangePubkey) ProtoMessage()               {}
func (*ResponseChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ResponseChangePubkey) GetInstructionId() int64 {
	if m != nil {
		return m.InstructionId
	}
	return 0
}

func (m *ResponseChangePubkey) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type Assert struct {
	Price      int64       `protobuf:"varint,1,opt,name=price" json:"price,omitempty"`
	Info       []byte      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	State      AssertState `protobuf:"varint,3,opt,name=state,enum=gmgop.AssertState" json:"state,omitempty"`
	Isdel      bool        `protobuf:"varint,4,opt,name=isdel" json:"isdel,omitempty"`
	CreatorUid string      `protobuf:"bytes,5,opt,name=creatorUid" json:"creatorUid,omitempty"`
	Applicants []string    `protobuf:"bytes,6,rep,name=applicants" json:"applicants,omitempty"`
}

func (m *Assert) Reset()                    { *m = Assert{} }
func (m *Assert) String() string            { return proto.CompactTextString(m) }
func (*Assert) ProtoMessage()               {}
func (*Assert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Assert) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Assert) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Assert) GetState() AssertState {
	if m != nil {
		return m.State
	}
	return AssertState_StUndefined
}

func (m *Assert) GetIsdel() bool {
	if m != nil {
		return m.Isdel
	}
	return false
}

func (m *Assert) GetCreatorUid() string {
	if m != nil {
		return m.CreatorUid
	}
	return ""
}

func (m *Assert) GetApplicants() []string {
	if m != nil {
		return m.Applicants
	}
	return nil
}

type User struct {
	Pubkey []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Info   []byte `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Role   int32  `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *User) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *User) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *User) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

type Contract struct {
	AssertId   string        `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
	Price      int64         `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
	StartT     int64         `protobuf:"varint,3,opt,name=startT" json:"startT,omitempty"`
	EndT       int64         `protobuf:"varint,4,opt,name=endT" json:"endT,omitempty"`
	Info       []byte        `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	State      ContractState `protobuf:"varint,6,opt,name=state,enum=gmgop.ContractState" json:"state,omitempty"`
	CreatorUid string        `protobuf:"bytes,7,opt,name=creatorUid" json:"creatorUid,omitempty"`
}

func (m *Contract) Reset()                    { *m = Contract{} }
func (m *Contract) String() string            { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()               {}
func (*Contract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *Contract) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *Contract) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Contract) GetStartT() int64 {
	if m != nil {
		return m.StartT
	}
	return 0
}

func (m *Contract) GetEndT() int64 {
	if m != nil {
		return m.EndT
	}
	return 0
}

func (m *Contract) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Contract) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

func (m *Contract) GetCreatorUid() string {
	if m != nil {
		return m.CreatorUid
	}
	return ""
}

type Event struct {
	// Types that are valid to be assigned to Value:
	//	*Event_UserCreate
	//	*Event_AssertCreate
	//	*Event_AssertDelete
	//	*Event_ContractCreate
	//	*Event_ContractAgree
	//	*Event_ContractReject
	//	*Event_DeliverAssert
	//	*Event_DeliverAssertConfirm
	//	*Event_Fin
	//	*Event_ChangePubkey
	//	*Event_RecallContract
	Value isEvent_Value `protobuf_oneof:"value"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

type isEvent_Value interface {
	isEvent_Value()
}

type Event_UserCreate struct {
	UserCreate *EventUserCreate `protobuf:"bytes,1,opt,name=userCreate,oneof"`
}
type Event_AssertCreate struct {
	AssertCreate *EventAssertCreate `protobuf:"bytes,2,opt,name=assertCreate,oneof"`
}
type Event_AssertDelete struct {
	AssertDelete *EventAssertDelete `protobuf:"bytes,3,opt,name=assertDelete,oneof"`
}
type Event_ContractCreate struct {
	ContractCreate *EventContractCreate `protobuf:"bytes,4,opt,name=contractCreate,oneof"`
}
type Event_ContractAgree struct {
	ContractAgree *EventContractAgree `protobuf:"bytes,5,opt,name=contractAgree,oneof"`
}
type Event_ContractReject struct {
	ContractReject *EventContractReject `protobuf:"bytes,6,opt,name=contractReject,oneof"`
}
type Event_DeliverAssert struct {
	DeliverAssert *EventDeliverAssert `protobuf:"bytes,7,opt,name=deliverAssert,oneof"`
}
type Event_DeliverAssertConfirm struct {
	DeliverAssertConfirm *EventDeliverAssertConfirm `protobuf:"bytes,8,opt,name=deliverAssertConfirm,oneof"`
}
type Event_Fin struct {
	Fin *EventFin `protobuf:"bytes,9,opt,name=fin,oneof"`
}
type Event_ChangePubkey struct {
	ChangePubkey *EventChangePubkey `protobuf:"bytes,10,opt,name=changePubkey,oneof"`
}
type Event_RecallContract struct {
	RecallContract *EventRecallContract `protobuf:"bytes,11,opt,name=recallContract,oneof"`
}

func (*Event_UserCreate) isEvent_Value()           {}
func (*Event_AssertCreate) isEvent_Value()         {}
func (*Event_AssertDelete) isEvent_Value()         {}
func (*Event_ContractCreate) isEvent_Value()       {}
func (*Event_ContractAgree) isEvent_Value()        {}
func (*Event_ContractReject) isEvent_Value()       {}
func (*Event_DeliverAssert) isEvent_Value()        {}
func (*Event_DeliverAssertConfirm) isEvent_Value() {}
func (*Event_Fin) isEvent_Value()                  {}
func (*Event_ChangePubkey) isEvent_Value()         {}
func (*Event_RecallContract) isEvent_Value()       {}

func (m *Event) GetValue() isEvent_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Event) GetUserCreate() *EventUserCreate {
	if x, ok := m.GetValue().(*Event_UserCreate); ok {
		return x.UserCreate
	}
	return nil
}

func (m *Event) GetAssertCreate() *EventAssertCreate {
	if x, ok := m.GetValue().(*Event_AssertCreate); ok {
		return x.AssertCreate
	}
	return nil
}

func (m *Event) GetAssertDelete() *EventAssertDelete {
	if x, ok := m.GetValue().(*Event_AssertDelete); ok {
		return x.AssertDelete
	}
	return nil
}

func (m *Event) GetContractCreate() *EventContractCreate {
	if x, ok := m.GetValue().(*Event_ContractCreate); ok {
		return x.ContractCreate
	}
	return nil
}

func (m *Event) GetContractAgree() *EventContractAgree {
	if x, ok := m.GetValue().(*Event_ContractAgree); ok {
		return x.ContractAgree
	}
	return nil
}

func (m *Event) GetContractReject() *EventContractReject {
	if x, ok := m.GetValue().(*Event_ContractReject); ok {
		return x.ContractReject
	}
	return nil
}

func (m *Event) GetDeliverAssert() *EventDeliverAssert {
	if x, ok := m.GetValue().(*Event_DeliverAssert); ok {
		return x.DeliverAssert
	}
	return nil
}

func (m *Event) GetDeliverAssertConfirm() *EventDeliverAssertConfirm {
	if x, ok := m.GetValue().(*Event_DeliverAssertConfirm); ok {
		return x.DeliverAssertConfirm
	}
	return nil
}

func (m *Event) GetFin() *EventFin {
	if x, ok := m.GetValue().(*Event_Fin); ok {
		return x.Fin
	}
	return nil
}

func (m *Event) GetChangePubkey() *EventChangePubkey {
	if x, ok := m.GetValue().(*Event_ChangePubkey); ok {
		return x.ChangePubkey
	}
	return nil
}

func (m *Event) GetRecallContract() *EventRecallContract {
	if x, ok := m.GetValue().(*Event_RecallContract); ok {
		return x.RecallContract
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_UserCreate)(nil),
		(*Event_AssertCreate)(nil),
		(*Event_AssertDelete)(nil),
		(*Event_ContractCreate)(nil),
		(*Event_ContractAgree)(nil),
		(*Event_ContractReject)(nil),
		(*Event_DeliverAssert)(nil),
		(*Event_DeliverAssertConfirm)(nil),
		(*Event_Fin)(nil),
		(*Event_ChangePubkey)(nil),
		(*Event_RecallContract)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// value
	switch x := m.Value.(type) {
	case *Event_UserCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserCreate); err != nil {
			return err
		}
	case *Event_AssertCreate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssertCreate); err != nil {
			return err
		}
	case *Event_AssertDelete:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssertDelete); err != nil {
			return err
		}
	case *Event_ContractCreate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractCreate); err != nil {
			return err
		}
	case *Event_ContractAgree:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractAgree); err != nil {
			return err
		}
	case *Event_ContractReject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractReject); err != nil {
			return err
		}
	case *Event_DeliverAssert:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeliverAssert); err != nil {
			return err
		}
	case *Event_DeliverAssertConfirm:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeliverAssertConfirm); err != nil {
			return err
		}
	case *Event_Fin:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fin); err != nil {
			return err
		}
	case *Event_ChangePubkey:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangePubkey); err != nil {
			return err
		}
	case *Event_RecallContract:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RecallContract); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Value has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 1: // value.userCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventUserCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Event_UserCreate{msg}
		return true, err
	case 2: // value.assertCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventAssertCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Event_AssertCreate{msg}
		return true, err
	case 3: // value.assertDelete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventAssertDelete)
		err := b.DecodeMessage(msg)
		m.Value = &Event_AssertDelete{msg}
		return true, err
	case 4: // value.contractCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventContractCreate)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ContractCreate{msg}
		return true, err
	case 5: // value.contractAgree
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventContractAgree)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ContractAgree{msg}
		return true, err
	case 6: // value.contractReject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventContractReject)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ContractReject{msg}
		return true, err
	case 7: // value.deliverAssert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventDeliverAssert)
		err := b.DecodeMessage(msg)
		m.Value = &Event_DeliverAssert{msg}
		return true, err
	case 8: // value.deliverAssertConfirm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventDeliverAssertConfirm)
		err := b.DecodeMessage(msg)
		m.Value = &Event_DeliverAssertConfirm{msg}
		return true, err
	case 9: // value.fin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventFin)
		err := b.DecodeMessage(msg)
		m.Value = &Event_Fin{msg}
		return true, err
	case 10: // value.changePubkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventChangePubkey)
		err := b.DecodeMessage(msg)
		m.Value = &Event_ChangePubkey{msg}
		return true, err
	case 11: // value.recallContract
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventRecallContract)
		err := b.DecodeMessage(msg)
		m.Value = &Event_RecallContract{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// value
	switch x := m.Value.(type) {
	case *Event_UserCreate:
		s := proto.Size(x.UserCreate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_AssertCreate:
		s := proto.Size(x.AssertCreate)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_AssertDelete:
		s := proto.Size(x.AssertDelete)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ContractCreate:
		s := proto.Size(x.ContractCreate)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ContractAgree:
		s := proto.Size(x.ContractAgree)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ContractReject:
		s := proto.Size(x.ContractReject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_DeliverAssert:
		s := proto.Size(x.DeliverAssert)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_DeliverAssertConfirm:
		s := proto.Size(x.DeliverAssertConfirm)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Fin:
		s := proto.Size(x.Fin)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ChangePubkey:
		s := proto.Size(x.ChangePubkey)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_RecallContract:
		s := proto.Size(x.RecallContract)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EventUserCreate struct {
	Uid  string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Role int32  `protobuf:"varint,2,opt,name=role" json:"role,omitempty"`
}

func (m *EventUserCreate) Reset()                    { *m = EventUserCreate{} }
func (m *EventUserCreate) String() string            { return proto.CompactTextString(m) }
func (*EventUserCreate) ProtoMessage()               {}
func (*EventUserCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *EventUserCreate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *EventUserCreate) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

type EventAssertCreate struct {
	AssertId string      `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
	State    AssertState `protobuf:"varint,2,opt,name=state,enum=gmgop.AssertState" json:"state,omitempty"`
}

func (m *EventAssertCreate) Reset()                    { *m = EventAssertCreate{} }
func (m *EventAssertCreate) String() string            { return proto.CompactTextString(m) }
func (*EventAssertCreate) ProtoMessage()               {}
func (*EventAssertCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *EventAssertCreate) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *EventAssertCreate) GetState() AssertState {
	if m != nil {
		return m.State
	}
	return AssertState_StUndefined
}

type EventAssertDelete struct {
	AssertId string `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
}

func (m *EventAssertDelete) Reset()                    { *m = EventAssertDelete{} }
func (m *EventAssertDelete) String() string            { return proto.CompactTextString(m) }
func (*EventAssertDelete) ProtoMessage()               {}
func (*EventAssertDelete) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *EventAssertDelete) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

type EventContractCreate struct {
	ContractId string        `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	State      ContractState `protobuf:"varint,2,opt,name=state,enum=gmgop.ContractState" json:"state,omitempty"`
}

func (m *EventContractCreate) Reset()                    { *m = EventContractCreate{} }
func (m *EventContractCreate) String() string            { return proto.CompactTextString(m) }
func (*EventContractCreate) ProtoMessage()               {}
func (*EventContractCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *EventContractCreate) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *EventContractCreate) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

type EventContractAgree struct {
	ContractId string        `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	Cstate     ContractState `protobuf:"varint,2,opt,name=cstate,enum=gmgop.ContractState" json:"cstate,omitempty"`
	Astate     AssertState   `protobuf:"varint,3,opt,name=astate,enum=gmgop.AssertState" json:"astate,omitempty"`
	AssertId   string        `protobuf:"bytes,4,opt,name=assertId" json:"assertId,omitempty"`
	Rejected   []string      `protobuf:"bytes,5,rep,name=rejected" json:"rejected,omitempty"`
}

func (m *EventContractAgree) Reset()                    { *m = EventContractAgree{} }
func (m *EventContractAgree) String() string            { return proto.CompactTextString(m) }
func (*EventContractAgree) ProtoMessage()               {}
func (*EventContractAgree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *EventContractAgree) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *EventContractAgree) GetCstate() ContractState {
	if m != nil {
		return m.Cstate
	}
	return ContractState_CSUndefined
}

func (m *EventContractAgree) GetAstate() AssertState {
	if m != nil {
		return m.Astate
	}
	return AssertState_StUndefined
}

func (m *EventContractAgree) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *EventContractAgree) GetRejected() []string {
	if m != nil {
		return m.Rejected
	}
	return nil
}

type EventContractReject struct {
	ContractId string        `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	State      ContractState `protobuf:"varint,2,opt,name=state,enum=gmgop.ContractState" json:"state,omitempty"`
}

func (m *EventContractReject) Reset()                    { *m = EventContractReject{} }
func (m *EventContractReject) String() string            { return proto.CompactTextString(m) }
func (*EventContractReject) ProtoMessage()               {}
func (*EventContractReject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *EventContractReject) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *EventContractReject) GetState() ContractState {
	if m != nil {
		return m.State
	}
	return ContractState_CSUndefined
}

type EventDeliverAssert struct {
	AssertId string      `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
	State    AssertState `protobuf:"varint,2,opt,name=state,enum=gmgop.AssertState" json:"state,omitempty"`
}

func (m *EventDeliverAssert) Reset()                    { *m = EventDeliverAssert{} }
func (m *EventDeliverAssert) String() string            { return proto.CompactTextString(m) }
func (*EventDeliverAssert) ProtoMessage()               {}
func (*EventDeliverAssert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *EventDeliverAssert) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *EventDeliverAssert) GetState() AssertState {
	if m != nil {
		return m.State
	}
	return AssertState_StUndefined
}

type EventDeliverAssertConfirm struct {
	AssertId string      `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
	State    AssertState `protobuf:"varint,2,opt,name=state,enum=gmgop.AssertState" json:"state,omitempty"`
}

func (m *EventDeliverAssertConfirm) Reset()                    { *m = EventDeliverAssertConfirm{} }
func (m *EventDeliverAssertConfirm) String() string            { return proto.CompactTextString(m) }
func (*EventDeliverAssertConfirm) ProtoMessage()               {}
func (*EventDeliverAssertConfirm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *EventDeliverAssertConfirm) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *EventDeliverAssertConfirm) GetState() AssertState {
	if m != nil {
		return m.State
	}
	return AssertState_StUndefined
}

type EventFin struct {
	AssertId   string        `protobuf:"bytes,1,opt,name=assertId" json:"assertId,omitempty"`
	Astate     AssertState   `protobuf:"varint,2,opt,name=astate,enum=gmgop.AssertState" json:"astate,omitempty"`
	Cstate     ContractState `protobuf:"varint,3,opt,name=cstate,enum=gmgop.ContractState" json:"cstate,omitempty"`
	ContractId string        `protobuf:"bytes,4,opt,name=contractId" json:"contractId,omitempty"`
}

func (m *EventFin) Reset()                    { *m = EventFin{} }
func (m *EventFin) String() string            { return proto.CompactTextString(m) }
func (*EventFin) ProtoMessage()               {}
func (*EventFin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *EventFin) GetAssertId() string {
	if m != nil {
		return m.AssertId
	}
	return ""
}

func (m *EventFin) GetAstate() AssertState {
	if m != nil {
		return m.Astate
	}
	return AssertState_StUndefined
}

func (m *EventFin) GetCstate() ContractState {
	if m != nil {
		return m.Cstate
	}
	return ContractState_CSUndefined
}

func (m *EventFin) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

type EventChangePubkey struct {
	NewPubkey []byte `protobuf:"bytes,1,opt,name=newPubkey,proto3" json:"newPubkey,omitempty"`
	Uid       string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *EventChangePubkey) Reset()                    { *m = EventChangePubkey{} }
func (m *EventChangePubkey) String() string            { return proto.CompactTextString(m) }
func (*EventChangePubkey) ProtoMessage()               {}
func (*EventChangePubkey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *EventChangePubkey) GetNewPubkey() []byte {
	if m != nil {
		return m.NewPubkey
	}
	return nil
}

func (m *EventChangePubkey) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type EventRecallContract struct {
	ContractId string `protobuf:"bytes,1,opt,name=contractId" json:"contractId,omitempty"`
	Uid        string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *EventRecallContract) Reset()                    { *m = EventRecallContract{} }
func (m *EventRecallContract) String() string            { return proto.CompactTextString(m) }
func (*EventRecallContract) ProtoMessage()               {}
func (*EventRecallContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *EventRecallContract) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *EventRecallContract) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "gmgop.Request")
	proto.RegisterType((*RequestUserCreate)(nil), "gmgop.RequestUserCreate")
	proto.RegisterType((*RequestGopAssertCreate)(nil), "gmgop.RequestGopAssertCreate")
	proto.RegisterType((*RequestGopAssertDelete)(nil), "gmgop.RequestGopAssertDelete")
	proto.RegisterType((*RequestBuContractCreate)(nil), "gmgop.RequestBuContractCreate")
	proto.RegisterType((*RequestGopContractReject)(nil), "gmgop.RequestGopContractReject")
	proto.RegisterType((*RequestGopContractAgree)(nil), "gmgop.RequestGopContractAgree")
	proto.RegisterType((*RequestGopDeliverAssert)(nil), "gmgop.RequestGopDeliverAssert")
	proto.RegisterType((*RequestBuDeliverAssertConfirm)(nil), "gmgop.RequestBuDeliverAssertConfirm")
	proto.RegisterType((*RequestGopContractFin)(nil), "gmgop.RequestGopContractFin")
	proto.RegisterType((*RequestChangePubkey)(nil), "gmgop.RequestChangePubkey")
	proto.RegisterType((*RequestBuRecallContract)(nil), "gmgop.RequestBuRecallContract")
	proto.RegisterType((*Response)(nil), "gmgop.Response")
	proto.RegisterType((*ResponseException)(nil), "gmgop.ResponseException")
	proto.RegisterType((*ResponseOK)(nil), "gmgop.ResponseOK")
	proto.RegisterType((*Receipt)(nil), "gmgop.Receipt")
	proto.RegisterType((*ResponseRecallContract)(nil), "gmgop.ResponseRecallContract")
	proto.RegisterType((*ResponseFin)(nil), "gmgop.ResponseFin")
	proto.RegisterType((*ResponseDeliverAssertConfirm)(nil), "gmgop.ResponseDeliverAssertConfirm")
	proto.RegisterType((*ResponseDeliverAssert)(nil), "gmgop.ResponseDeliverAssert")
	proto.RegisterType((*ResponseContractAgree)(nil), "gmgop.ResponseContractAgree")
	proto.RegisterType((*ResponseContractReject)(nil), "gmgop.ResponseContractReject")
	proto.RegisterType((*ResponseContractCreate)(nil), "gmgop.ResponseContractCreate")
	proto.RegisterType((*ResponseAssertCreate)(nil), "gmgop.ResponseAssertCreate")
	proto.RegisterType((*ResponseAssertDelete)(nil), "gmgop.ResponseAssertDelete")
	proto.RegisterType((*ResponseUserCreate)(nil), "gmgop.ResponseUserCreate")
	proto.RegisterType((*ResponseChangePubkey)(nil), "gmgop.ResponseChangePubkey")
	proto.RegisterType((*Assert)(nil), "gmgop.Assert")
	proto.RegisterType((*User)(nil), "gmgop.User")
	proto.RegisterType((*Contract)(nil), "gmgop.Contract")
	proto.RegisterType((*Event)(nil), "gmgop.Event")
	proto.RegisterType((*EventUserCreate)(nil), "gmgop.EventUserCreate")
	proto.RegisterType((*EventAssertCreate)(nil), "gmgop.EventAssertCreate")
	proto.RegisterType((*EventAssertDelete)(nil), "gmgop.EventAssertDelete")
	proto.RegisterType((*EventContractCreate)(nil), "gmgop.EventContractCreate")
	proto.RegisterType((*EventContractAgree)(nil), "gmgop.EventContractAgree")
	proto.RegisterType((*EventContractReject)(nil), "gmgop.EventContractReject")
	proto.RegisterType((*EventDeliverAssert)(nil), "gmgop.EventDeliverAssert")
	proto.RegisterType((*EventDeliverAssertConfirm)(nil), "gmgop.EventDeliverAssertConfirm")
	proto.RegisterType((*EventFin)(nil), "gmgop.EventFin")
	proto.RegisterType((*EventChangePubkey)(nil), "gmgop.EventChangePubkey")
	proto.RegisterType((*EventRecallContract)(nil), "gmgop.EventRecallContract")
	proto.RegisterEnum("gmgop.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("gmgop.AssertState", AssertState_name, AssertState_value)
	proto.RegisterEnum("gmgop.Role", Role_name, Role_value)
	proto.RegisterEnum("gmgop.ContractState", ContractState_name, ContractState_value)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x59, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x8e, 0x8e, 0x96, 0x46, 0x3e, 0xd0, 0x6b, 0xff, 0x09, 0x9d, 0xdf, 0x4e, 0x03, 0x26, 0x28,
	0x52, 0x23, 0x70, 0x81, 0xa4, 0x68, 0xda, 0x14, 0x48, 0xeb, 0xc8, 0x8e, 0x6b, 0x24, 0x41, 0x0a,
	0x2a, 0x69, 0x91, 0x5e, 0x04, 0xa5, 0xa5, 0x8d, 0xcc, 0x46, 0x21, 0x55, 0x92, 0xca, 0xe1, 0x6d,
	0x7a, 0xdf, 0xbb, 0x3e, 0x44, 0xd1, 0x57, 0x28, 0x7a, 0xd1, 0xbb, 0x3e, 0x47, 0x67, 0x97, 0xcb,
	0xc3, 0x2e, 0x97, 0xa2, 0x0d, 0x28, 0x77, 0xda, 0xd9, 0x99, 0x6f, 0x67, 0x67, 0x77, 0xf6, 0xfb,
	0x4c, 0x43, 0xd7, 0x99, 0xba, 0x7b, 0xd3, 0xc0, 0x8f, 0x7c, 0xd2, 0x1a, 0xbf, 0x1e, 0xfb, 0x53,
	0xeb, 0xef, 0x25, 0x58, 0xb2, 0xe9, 0x2f, 0x33, 0x1a, 0x46, 0xe4, 0x2e, 0xc0, 0x2c, 0xa4, 0x41,
	0x3f, 0xa0, 0x4e, 0x44, 0xcd, 0xda, 0xd5, 0xda, 0x8d, 0xde, 0x2d, 0x73, 0x8f, 0xfb, 0xed, 0x09,
	0x9f, 0x67, 0xe9, 0xfc, 0xb7, 0x17, 0xec, 0x9c, 0x37, 0x39, 0x86, 0x35, 0x74, 0xdb, 0x0f, 0xd1,
	0x12, 0x09, 0x80, 0x3a, 0x07, 0xd8, 0x91, 0x01, 0x8e, 0x64, 0x27, 0x44, 0x51, 0xe3, 0x24, 0xa8,
	0x03, 0x3a, 0xa1, 0x08, 0xd5, 0x98, 0x0b, 0x15, 0x3b, 0x49, 0x50, 0xb1, 0x89, 0x3c, 0x02, 0xe3,
	0x64, 0xd6, 0xf7, 0xbd, 0x28, 0x70, 0x86, 0x49, 0x5a, 0x4d, 0x8e, 0x75, 0x45, 0xc6, 0xba, 0xaf,
	0x78, 0x21, 0x58, 0x21, 0x92, 0xa1, 0x61, 0x48, 0x62, 0xdc, 0x1f, 0x07, 0x94, 0x9a, 0x2d, 0x1d,
	0xda, 0x91, 0xe2, 0xc5, 0xd0, 0xd4, 0x48, 0xf2, 0x04, 0xd6, 0x73, 0x36, 0x9b, 0xfe, 0x4c, 0x87,
	0x91, 0xd9, 0xe6, 0x70, 0x1f, 0x95, 0xc2, 0xc5, 0x6e, 0x88, 0x57, 0x8c, 0x15, 0xe9, 0xe1, 0xce,
	0xdd, 0x37, 0x34, 0x88, 0xcb, 0x60, 0x2e, 0x95, 0xa4, 0x27, 0x79, 0x89, 0xf4, 0x24, 0x1b, 0x79,
	0x01, 0x17, 0x4f, 0x66, 0x92, 0x09, 0x97, 0x7b, 0xe9, 0x06, 0xaf, 0xcd, 0x0e, 0xc7, 0xbc, 0xae,
	0x16, 0x50, 0xe7, 0x8b, 0xc8, 0x25, 0x28, 0xe4, 0x73, 0x68, 0x63, 0xf8, 0x03, 0xd7, 0x33, 0xbb,
	0x1c, 0x6f, 0xbb, 0x74, 0xcf, 0xe8, 0x83, 0x38, 0xc2, 0x9b, 0x7c, 0x03, 0xcb, 0xc3, 0x53, 0xc7,
	0x1b, 0xd3, 0xef, 0x66, 0x27, 0xaf, 0xe8, 0x7b, 0x13, 0x78, 0xf4, 0x65, 0x39, 0xba, 0x9f, 0xf3,
	0xc0, 0x58, 0x29, 0x22, 0xbe, 0x14, 0x36, 0x1d, 0x3a, 0x93, 0x49, 0xb2, 0x84, 0xd9, 0xd3, 0x5f,
	0x0a, 0xd9, 0x2b, 0xbe, 0x14, 0xb2, 0x8d, 0x18, 0xd0, 0x98, 0xb9, 0x23, 0x73, 0x19, 0x01, 0xba,
	0x36, 0xfb, 0x49, 0xae, 0xc3, 0x8a, 0xeb, 0x85, 0x51, 0x30, 0x1b, 0x46, 0xae, 0xef, 0x1d, 0x8f,
	0xcc, 0x15, 0x9c, 0x6b, 0xd8, 0xb2, 0x91, 0x5c, 0x84, 0xf6, 0x34, 0xde, 0xc1, 0x2a, 0x4e, 0x2f,
	0xdb, 0x62, 0x44, 0x08, 0x34, 0x43, 0x77, 0xec, 0x99, 0x6b, 0xdc, 0xca, 0x7f, 0x93, 0x3d, 0xe8,
	0x38, 0x09, 0x98, 0x81, 0xf6, 0xd5, 0x5b, 0x44, 0x64, 0xfa, 0x98, 0x86, 0xa1, 0x33, 0xa6, 0x4f,
	0xdf, 0x4f, 0xa9, 0x9d, 0xfa, 0xdc, 0x5f, 0x82, 0xd6, 0x1b, 0x67, 0x32, 0xa3, 0x16, 0x85, 0xf5,
	0x42, 0xe3, 0x26, 0x19, 0xd7, 0xb2, 0x8c, 0xb3, 0x5c, 0xea, 0x6a, 0x2e, 0xae, 0xf7, 0xd2, 0xe7,
	0xed, 0x87, 0xb9, 0xb0, 0xdf, 0xcc, 0x16, 0xf8, 0x93, 0xb8, 0x8d, 0x5a, 0x36, 0xff, 0x6d, 0xe1,
	0x5d, 0xd1, 0xb7, 0x37, 0xb9, 0x8c, 0x99, 0xf3, 0xf1, 0x71, 0xb2, 0x60, 0x3a, 0x26, 0x9b, 0xd0,
	0x9a, 0x06, 0xee, 0x30, 0x7e, 0x28, 0x1a, 0x76, 0x3c, 0xd0, 0xad, 0x69, 0x7d, 0x56, 0xc4, 0x17,
	0x0d, 0x3e, 0x07, 0xdf, 0xfa, 0xad, 0x06, 0x97, 0x4a, 0xda, 0x9b, 0x5c, 0x01, 0x18, 0x0a, 0x4b,
	0x1a, 0x99, 0xb3, 0x48, 0xb8, 0xf5, 0xb2, 0xbc, 0x1b, 0xf9, 0xbc, 0xb1, 0x86, 0x61, 0xe4, 0x04,
	0xd1, 0x53, 0x5e, 0x99, 0x86, 0x2d, 0x46, 0x6c, 0x3f, 0xd4, 0x1b, 0x3d, 0xe5, 0x0f, 0x45, 0xc3,
	0xe6, 0xbf, 0xd3, 0x3d, 0xb6, 0x73, 0x7b, 0xbc, 0x0b, 0x66, 0x59, 0xbb, 0x57, 0x65, 0x6b, 0x7d,
	0x99, 0x6e, 0x54, 0x7d, 0x79, 0xce, 0x17, 0x2a, 0xbf, 0x00, 0x55, 0xa1, 0x5f, 0xc3, 0xce, 0xdc,
	0xe6, 0xaf, 0x04, 0xb8, 0x03, 0xff, 0xd3, 0x76, 0x7b, 0x65, 0xe0, 0x6d, 0xd8, 0xd0, 0x34, 0x3a,
	0xd9, 0x86, 0xae, 0x47, 0xdf, 0x8a, 0x77, 0xa1, 0xc6, 0x6b, 0x9b, 0x19, 0x72, 0x3b, 0x55, 0xfb,
	0xba, 0x72, 0xbd, 0x7f, 0xdb, 0xd0, 0xb1, 0x69, 0x38, 0xf5, 0xbd, 0x90, 0x92, 0xaf, 0x34, 0x2c,
	0xb9, 0x95, 0x3e, 0x1c, 0xb1, 0x53, 0x29, 0x4d, 0xee, 0xc3, 0xb2, 0x53, 0xe4, 0xc8, 0xff, 0x2b,
	0xe1, 0x0a, 0x43, 0x4a, 0x21, 0x19, 0x84, 0xc4, 0x8d, 0x7a, 0x88, 0x94, 0x19, 0xa5, 0x10, 0x72,
	0x04, 0xab, 0x43, 0x1d, 0x29, 0xee, 0x28, 0x20, 0x05, 0x4e, 0x54, 0xc2, 0xc8, 0x01, 0xac, 0x0c,
	0x35, 0x74, 0xb8, 0x5d, 0x82, 0x93, 0x90, 0xa1, 0x1c, 0x94, 0x4f, 0x47, 0xa2, 0xc1, 0xb2, 0x74,
	0x52, 0x12, 0x54, 0xc2, 0x58, 0x3a, 0x23, 0x0d, 0xfd, 0xa9, 0xe9, 0xa8, 0xe4, 0x27, 0x07, 0x91,
	0xe7, 0xb0, 0x39, 0x2a, 0xe7, 0xbd, 0x6b, 0xf3, 0xc0, 0x32, 0xda, 0xd3, 0x42, 0x90, 0x8f, 0xa1,
	0xf1, 0x32, 0x65, 0x3c, 0xa2, 0x20, 0xc5, 0x3c, 0xc7, 0x1c, 0xd8, 0x19, 0x6b, 0x48, 0x4e, 0x3d,
	0xe3, 0xb9, 0x2c, 0xf7, 0xb0, 0x94, 0xe5, 0xd4, 0xb2, 0x9e, 0x81, 0xe4, 0xae, 0x41, 0xdd, 0x7f,
	0xc5, 0x39, 0xae, 0x77, 0x6b, 0x5d, 0x09, 0x7f, 0xf2, 0x10, 0x43, 0x70, 0x9a, 0x7c, 0x01, 0x5d,
	0xfa, 0x6e, 0x48, 0xa7, 0x8c, 0x84, 0x38, 0xe7, 0xe5, 0xd5, 0x63, 0xec, 0x7b, 0x98, 0xcc, 0x63,
	0x48, 0xe6, 0x9c, 0xf1, 0xd5, 0x27, 0x8c, 0xaf, 0x14, 0x57, 0xf6, 0xde, 0xd2, 0x20, 0xf0, 0x03,
	0xd1, 0x98, 0xf1, 0xc0, 0xda, 0x06, 0xc8, 0x32, 0x20, 0xab, 0x3c, 0x41, 0xe6, 0xd0, 0x61, 0xb9,
	0x58, 0x9f, 0x32, 0x55, 0x3b, 0xa4, 0xee, 0x34, 0xe2, 0x8f, 0x6d, 0xf8, 0x24, 0x99, 0xe4, 0xbf,
	0x19, 0x05, 0x22, 0x8a, 0x60, 0x3b, 0xf6, 0xd3, 0x3a, 0x61, 0x14, 0xa3, 0xab, 0x47, 0x91, 0xce,
	0x6b, 0x3a, 0x3a, 0xb7, 0x30, 0xc9, 0x37, 0xd4, 0x8b, 0x44, 0x47, 0x2f, 0x8b, 0x8d, 0x1f, 0x32,
	0x9b, 0x1d, 0x4f, 0x59, 0x3f, 0x40, 0x2f, 0x77, 0xd6, 0x0b, 0x04, 0x3e, 0x85, 0xed, 0x79, 0xd7,
	0x71, 0x81, 0x2b, 0x39, 0xec, 0xc9, 0xd6, 0xac, 0xf4, 0x61, 0x96, 0x90, 0xa9, 0x6c, 0x71, 0x4b,
	0xe4, 0x0e, 0x5b, 0x61, 0xda, 0x0f, 0xba, 0x86, 0x78, 0x34, 0xd3, 0xe8, 0x5a, 0x69, 0x74, 0x31,
	0x8f, 0xba, 0x26, 0x0f, 0xeb, 0x27, 0xd8, 0xd4, 0x51, 0xc6, 0x87, 0x5c, 0x41, 0x30, 0xc8, 0xe2,
	0xea, 0xf4, 0x02, 0x48, 0x91, 0x35, 0x17, 0x88, 0x9f, 0xdb, 0x81, 0x24, 0x16, 0x16, 0xb7, 0xc2,
	0xef, 0x35, 0x68, 0x8b, 0x2e, 0x48, 0xa5, 0x61, 0x4d, 0x27, 0x69, 0xeb, 0x39, 0x19, 0x7d, 0x03,
	0x5a, 0x28, 0x10, 0x05, 0x7d, 0x67, 0x7a, 0x3e, 0xc6, 0x19, 0xb0, 0x19, 0x3b, 0x76, 0x60, 0x98,
	0x6e, 0x88, 0x6c, 0xc2, 0x39, 0xba, 0x63, 0xc7, 0x03, 0x2e, 0x59, 0x58, 0xa9, 0xfc, 0xe0, 0x19,
	0x6a, 0xf9, 0x96, 0x90, 0x2c, 0xa9, 0x85, 0xcd, 0x3b, 0xd3, 0xe9, 0xc4, 0x1d, 0x3a, 0x5e, 0x14,
	0x22, 0x9f, 0x36, 0xd8, 0x7c, 0x66, 0xb1, 0x1e, 0x40, 0x93, 0x95, 0x3b, 0x27, 0xfd, 0x6b, 0x5a,
	0xe9, 0x5f, 0xd7, 0x48, 0xff, 0x46, 0x4e, 0xfa, 0xff, 0x59, 0x83, 0x4e, 0xfa, 0x54, 0x9e, 0x5f,
	0xed, 0x67, 0xaa, 0xb9, 0xa1, 0x55, 0xcd, 0x4d, 0x8d, 0x6a, 0x6e, 0xe5, 0x52, 0xda, 0x4d, 0xca,
	0xd8, 0xe6, 0x65, 0xdc, 0x14, 0x65, 0x4c, 0x32, 0x92, 0x0a, 0x29, 0x97, 0x6c, 0x49, 0x2d, 0x99,
	0xf5, 0x4f, 0x0b, 0x5a, 0xfc, 0x60, 0x91, 0xc9, 0x8a, 0x12, 0xef, 0x62, 0xfe, 0xe8, 0x4b, 0xf5,
	0xdd, 0x3d, 0xad, 0xbe, 0x33, 0xf3, 0xb1, 0x73, 0xc5, 0xdd, 0x3d, 0xad, 0xb8, 0xd3, 0xc4, 0x97,
	0x28, 0xbb, 0x83, 0x12, 0x65, 0x77, 0x39, 0x8f, 0x50, 0x29, 0xeb, 0xf6, 0xf5, 0xb2, 0x6e, 0x4b,
	0x07, 0x52, 0xa2, 0xe9, 0x0e, 0x4a, 0x34, 0x9d, 0x36, 0x91, 0x52, 0x41, 0xb7, 0xaf, 0x17, 0x74,
	0x52, 0x22, 0x15, 0x6a, 0xee, 0xfb, 0xb9, 0x6a, 0xee, 0x6a, 0x29, 0x52, 0x95, 0x94, 0xbb, 0x96,
	0x97, 0x72, 0x6b, 0x79, 0x98, 0x9c, 0x8e, 0xbb, 0xa7, 0xd5, 0x71, 0xd2, 0x71, 0xce, 0x15, 0x71,
	0x58, 0xc5, 0x40, 0x27, 0xe1, 0xa4, 0x2a, 0x16, 0xf4, 0x9b, 0x12, 0x93, 0xc9, 0xab, 0x3b, 0xb0,
	0xa6, 0x5c, 0x5f, 0xcd, 0xc7, 0x80, 0xa4, 0xcb, 0xeb, 0xb9, 0x2e, 0x7f, 0x0e, 0xeb, 0x85, 0xbb,
	0x3b, 0xb7, 0xdb, 0xd3, 0xe7, 0xad, 0x5e, 0xf1, 0xbc, 0xa1, 0x52, 0x5b, 0x2f, 0x5c, 0xeb, 0xb9,
	0x7f, 0xd6, 0x3b, 0xb0, 0xa1, 0xb9, 0xc5, 0x95, 0x7f, 0xd1, 0xef, 0xca, 0x19, 0xcd, 0x7b, 0x29,
	0xac, 0x3f, 0x6a, 0x40, 0x8a, 0x97, 0xbc, 0x72, 0x89, 0x9b, 0xd0, 0x1e, 0x56, 0xaf, 0x21, 0x7c,
	0x30, 0xa1, 0xb6, 0x53, 0x45, 0x01, 0xc2, 0x43, 0xaa, 0x47, 0x53, 0x29, 0x35, 0xce, 0x05, 0xbc,
	0x5b, 0x28, 0xe3, 0x01, 0xf6, 0xce, 0xa7, 0xe3, 0x42, 0xad, 0xce, 0xf6, 0x3d, 0xe1, 0x5c, 0xb5,
	0xfa, 0x51, 0x94, 0x4a, 0x96, 0x83, 0x8b, 0xb9, 0x1b, 0x0e, 0x6c, 0x95, 0x36, 0xe6, 0x82, 0x96,
	0xf8, 0x15, 0xf9, 0x2b, 0xe9, 0xda, 0xb9, 0x90, 0xd9, 0x71, 0xd5, 0x2b, 0x8f, 0x2b, 0xbb, 0x08,
	0x8d, 0x33, 0x5c, 0x04, 0xf9, 0x34, 0x9a, 0x85, 0xaf, 0x0f, 0x7d, 0xd1, 0x21, 0x67, 0xff, 0xd6,
	0x91, 0x74, 0x75, 0x3d, 0xed, 0x6a, 0xeb, 0x48, 0xdc, 0x84, 0xf3, 0x7d, 0xf9, 0x28, 0x02, 0xed,
	0xfe, 0x55, 0x87, 0x5e, 0xee, 0xab, 0x23, 0x59, 0x86, 0xce, 0xe3, 0x70, 0x7c, 0xc8, 0xfe, 0x26,
	0x33, 0x2e, 0x90, 0x1e, 0x2c, 0xe1, 0xe8, 0xd8, 0x73, 0x23, 0xa3, 0x46, 0xd6, 0xd0, 0x33, 0x1c,
	0x0f, 0x4e, 0x67, 0xd1, 0x81, 0xff, 0xd6, 0x33, 0xea, 0xc2, 0xb7, 0x3f, 0xf1, 0x43, 0x6a, 0x34,
	0x90, 0xfb, 0x09, 0x8e, 0x94, 0x2f, 0x86, 0x46, 0x53, 0xb5, 0xc7, 0x4f, 0x82, 0xd1, 0x22, 0xeb,
	0xb0, 0x82, 0xf6, 0xec, 0xed, 0x32, 0xda, 0xe4, 0x12, 0x6c, 0xa0, 0x49, 0xfd, 0xba, 0x67, 0x2c,
	0x89, 0x09, 0xf5, 0x6b, 0x98, 0xd1, 0x21, 0x26, 0x6c, 0xca, 0x13, 0x71, 0x4b, 0x18, 0xdd, 0x2c,
	0x44, 0xba, 0x6d, 0x06, 0x90, 0x1d, 0xd8, 0xe2, 0x8b, 0xe8, 0x6e, 0xa1, 0xd1, 0x23, 0x2b, 0xd0,
	0x8d, 0xe3, 0xf0, 0x06, 0x19, 0xcb, 0x64, 0x03, 0xd6, 0xd8, 0x1e, 0x73, 0x67, 0x65, 0xac, 0xa4,
	0x79, 0xca, 0xd5, 0x37, 0x56, 0x93, 0x8a, 0xf8, 0x33, 0x2f, 0x32, 0xd6, 0x76, 0x3d, 0xe8, 0xe5,
	0xae, 0x13, 0xab, 0xdf, 0x20, 0x7a, 0xe6, 0x8d, 0x28, 0x52, 0x09, 0x1d, 0x61, 0x75, 0xb9, 0xe1,
	0x11, 0x75, 0x42, 0x7a, 0xea, 0x4f, 0x46, 0x58, 0x61, 0x0c, 0x17, 0x86, 0x11, 0x96, 0x97, 0x4f,
	0x8b, 0x2c, 0xd1, 0xd0, 0x88, 0x0d, 0x22, 0x53, 0x34, 0x34, 0x59, 0xae, 0x83, 0xe8, 0xf0, 0xdd,
	0xd4, 0x65, 0xf3, 0xad, 0xdd, 0x9b, 0xd0, 0xb4, 0xf1, 0x79, 0x67, 0x7e, 0xf6, 0x24, 0xbf, 0x50,
	0x07, 0x27, 0x26, 0xf7, 0x67, 0xb8, 0x42, 0x17, 0x5a, 0xf6, 0x04, 0x37, 0x67, 0xd4, 0x77, 0x5f,
	0xc3, 0x8a, 0x74, 0x81, 0x59, 0x58, 0x7f, 0x90, 0x0f, 0x43, 0xf8, 0xfe, 0x20, 0x3e, 0x03, 0x96,
	0x1d, 0x1f, 0xf2, 0xc2, 0xf3, 0xf4, 0x56, 0x01, 0xfa, 0x03, 0x5b, 0x3c, 0x4d, 0x98, 0x9d, 0x18,
	0xb3, 0x8a, 0x24, 0xc9, 0xf5, 0x07, 0x69, 0x72, 0x27, 0x6d, 0xfe, 0x7f, 0xaa, 0xdb, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x45, 0x5d, 0x35, 0x4b, 0xb4, 0x1a, 0x00, 0x00,
}
